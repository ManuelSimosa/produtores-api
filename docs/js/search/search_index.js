var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.006,1,1.784]],["body/modules/AppModule.html",[0,1.626,1,3.452,2,1.374,3,1.374,4,1.728,5,1.728,6,1.374,7,1.728,8,1.728,9,2.628,10,2.628,11,2.885,12,0.043,13,2.885,14,2.885,15,2.276,16,1.728,17,1.728,18,0.474,19,0.474,20,0.407,21,3.211,22,2.577,23,0.792,24,0.886,25,1.957,26,1.231,27,3.211,28,3.211,29,3.211,30,3.211,31,2.628,32,3.211,33,3.211,34,2.264,35,3.211,36,0.622,37,3.211,38,3.211,39,3.211,40,3.211,41,3.211,42,3.211,43,3.211,44,3.211,45,3.211,46,3.211,47,3.211,48,3.211,49,3.211,50,3.211,51,3.211,52,3.211,53,0.474,54,0.227,55,0.03,56,0.03]],["title/classes/CreateCulturaDto.html",[54,0.206,57,1.784]],["body/classes/CreateCulturaDto.html",[12,0.042,18,0.445,19,0.445,20,0.382,23,0.445,36,0.948,53,0.445,54,0.212,55,0.029,56,0.029,57,2.47,58,1.836,59,4.183,60,2.465,61,0.512,62,1.554,63,2.464,64,2.193,65,2.751,66,3.115,67,2.636,68,1.684,69,3.423,70,3.316,71,2.34,72,1.94,73,3.316,74,2.832,75,1.394,76,2.47,77,2.832,78,1.207,79,3.012,80,1.073,81,2.47,82,2.833,83,1.073,84,1.118,85,4.052,86,3.012,87,4.052,88,2.181,89,4.052,90,3.012,91,4.052,92,4.052,93,3.012,94,3.572,95,1.289,96,2.985]],["title/classes/CreateFazendaDto.html",[54,0.206,97,1.784]],["body/classes/CreateFazendaDto.html",[12,0.042,18,0.365,19,0.365,20,0.314,23,0.365,36,0.987,53,0.365,54,0.175,55,0.025,56,0.025,58,1.508,61,0.42,62,1.356,67,2.664,68,1.753,69,3.562,70,3.683,71,2.392,72,2.37,76,2.155,77,2.471,78,1.256,80,1.141,81,2.155,82,2.664,83,1.141,84,0.976,88,2.562,94,3.642,95,1.059,96,3.106,97,2.155,98,4.265,99,2.025,100,2.514,101,2.883,102,2.514,103,3.327,104,2.279,105,2.883,106,3.683,107,3.683,108,2.155,109,4.5,110,2.474,111,3.535,112,2.155,113,2.474,114,2.155,115,2.474,116,3.535,117,2.474,118,3.535,119,3.535,120,2.474,121,3.535,122,3.535,123,2.474,124,1.242,125,2.474]],["title/classes/CreateProdutorDto.html",[54,0.206,126,1.784]],["body/classes/CreateProdutorDto.html",[12,0.042,18,0.516,19,0.516,20,0.443,23,0.659,36,0.864,53,0.516,54,0.246,55,0.032,56,0.032,58,2.128,61,0.593,62,1.712,68,1.535,69,3.12,71,2.22,78,1.1,80,1.136,88,2.402,94,3.439,95,1.494,96,2.721,124,1.432,126,2.721,127,4.028,128,2.857,129,3,130,4.028,131,3.439,132,3.12,133,3.653,134,3.12,135,3.653,136,3.491,137,3.439,138,4.464,139,3.491,140,1.671,141,3.491]],["title/entities/Cultura.html",[75,1.006,142,1.252]],["body/entities/Cultura.html",[12,0.043,18,0.457,19,0.457,20,0.392,23,0.609,36,1.027,53,0.457,54,0.218,55,0.03,56,0.03,61,0.525,62,1.581,63,2.497,64,2.469,65,2.497,66,2.828,67,2.664,68,1.824,75,1.418,78,1.307,80,1.162,83,1.22,84,1.281,142,1.765,143,1.885,144,2.531,145,3.892,146,3.092,147,2.531,148,4.124,149,3.375,150,2.531,151,3.092,152,3.092,153,2.882,154,3.092,155,3.092,156,3.092,157,2.161,158,3.375,159,3.375,160,1.186,161,2.161,162,2.531,163,1.186]],["title/controllers/CulturasController.html",[164,1.252,165,1.784]],["body/controllers/CulturasController.html",[12,0.043,18,0.274,19,0.274,20,0.236,23,0.623,24,0.513,34,1.872,36,0.863,53,0.274,54,0.131,55,0.021,56,0.021,57,3.113,61,0.316,64,2.134,65,1,68,1.533,71,1.223,75,1.452,78,1.098,80,0.976,82,1.538,83,0.407,84,1.323,95,0.795,108,1.369,140,1.369,163,1.709,164,0.795,165,1.742,166,0.795,167,1.521,168,1.299,169,2.83,170,1.369,171,2.624,172,3.911,173,1.369,174,1.872,175,2.858,176,1.369,177,1.369,178,2.339,179,1.858,180,2.339,181,1.742,182,2.339,183,3.115,184,2.858,185,2.339,186,1.998,187,1.858,188,2.134,189,2.134,190,1.299,191,1.299,192,1.998,193,2.921,194,1.998,195,2.858,196,1.858,197,1.872,198,1.872,199,2.95,200,1.299,201,2.733,202,1.858,203,1.858,204,1.858,205,1.858,206,3.201,207,1.858,208,0.89,209,1.858,210,1.998,211,1.858,212,2.858,213,1.858,214,1.299,215,1.299,216,1.998,217,1.858,218,1.299,219,1.998,220,1.998,221,1.858,222,1.521,223,0.89,224,1.369,225,1.521,226,1.299,227,1.858,228,1.299,229,1.858,230,1.299,231,2.851,232,2.858,233,2.858,234,3.245,235,1.858,236,1.858,237,1.299,238,1,239,1.299,240,3.115,241,1.299,242,1.668,243,2.733,244,2.858,245,1.872,246,1.674,247,2.339,248,2.134,249,1.299,250,1.299,251,1.858,252,1.858,253,1.998,254,2.858,255,1.742,256,1.858,257,1,258,1.858,259,1.299,260,1.299,261,1.858,262,1.858,263,1.299]],["title/modules/CulturasModule.html",[0,1.006,11,1.575]],["body/modules/CulturasModule.html",[0,1.688,2,1.485,3,1.485,4,1.867,5,1.867,6,1.485,7,2.641,8,2.641,11,2.996,12,0.043,15,2.393,16,1.867,17,1.867,18,0.512,19,0.512,20,0.44,22,2.115,23,0.809,24,0.958,25,2.115,26,1.331,53,0.512,54,0.245,55,0.032,56,0.032,75,1.193,83,0.974,161,2.425,165,2.991,166,1.903,224,2.782,225,2.84,264,2.84,265,2.84,266,2.84,267,3.47,268,2.84,269,3.47,270,3.47]],["title/injectables/CulturasService.html",[224,1.401,271,1.252]],["body/injectables/CulturasService.html",[12,0.043,18,0.306,19,0.306,20,0.263,23,0.654,24,0.572,26,0.795,34,0.993,36,0.858,53,0.306,54,0.146,55,0.022,56,0.022,61,0.352,64,1.487,65,1.116,67,1.116,72,1.487,73,1.697,75,1.423,78,1.188,80,1.019,82,1.672,83,1.086,84,1.223,108,0.993,112,1.893,114,1.264,140,1.783,160,0.795,161,1.449,163,1.699,169,1.264,170,1.487,171,2.428,173,1.487,174,1.981,176,1.487,177,1.487,188,2.227,189,1.487,194,1.449,197,2.121,198,2.121,208,1.487,223,1.487,224,1.487,242,1.981,245,1.783,246,1.594,248,2.227,257,2.005,268,1.697,271,1.329,272,1.264,273,1.697,274,4.136,275,3.106,276,2.171,277,2.073,278,3.37,279,3.725,280,2.073,281,3.106,282,2.073,283,2.542,284,2.171,285,3.25,286,2.073,287,2.073,288,3.106,289,2.073,290,2.073,291,2.171,292,2.073,293,1.449,294,2.073,295,2.171,296,1.697,297,2.073,298,3.725,299,2.073,300,2.073,301,1.697,302,3.106,303,3.725,304,3.725,305,2.073,306,2.073,307,2.073,308,2.073,309,2.073,310,2.073,311,2.073,312,1.264,313,2.073,314,3.106,315,2.073,316,1.697,317,2.073,318,3.106,319,2.073,320,1.697,321,2.073,322,2.073,323,2.073,324,2.073,325,2.073,326,2.073,327,1.449,328,2.073,329,2.073,330,2.073,331,1.697,332,1.449,333,2.073,334,1.697]],["title/entities/Fazenda.html",[83,0.641,142,1.252]],["body/entities/Fazenda.html",[12,0.043,18,0.394,19,0.394,20,0.338,23,0.635,36,1.059,53,0.394,54,0.188,55,0.027,56,0.027,61,0.453,62,1.429,67,2.73,68,1.88,75,1.745,78,1.347,80,1.197,83,0.816,84,1.186,88,2.313,100,2.619,101,3.003,102,2.619,103,3.003,104,2.058,105,3.422,124,1.437,142,1.595,143,1.626,145,3.975,147,2.183,149,3.051,150,2.183,153,2.605,157,1.864,158,3.051,159,3.051,160,1.023,162,2.183,163,1.023,169,2.619,335,2.183,336,2.667,337,2.667,338,2.667,339,2.667,340,2.667,341,3.728,342,2.667,343,2.667,344,2.667,345,2.667,346,2.667,347,2.667,348,3.728,349,2.183,350,2.667]],["title/controllers/FazendasController.html",[164,1.252,351,1.784]],["body/controllers/FazendasController.html",[12,0.043,18,0.243,19,0.243,20,0.209,23,0.589,24,0.454,36,0.821,53,0.243,54,0.116,55,0.019,56,0.019,61,0.28,63,1.735,68,1.582,71,1.113,72,1.753,78,1.134,80,0.928,83,1.062,84,1.17,95,0.704,97,2.956,104,0.788,108,0.788,112,1.964,140,1.245,163,1.404,164,0.704,166,0.704,168,1.15,170,1.245,171,2.619,173,1.245,174,1.753,176,1.245,177,1.245,178,2.128,180,3.766,181,1.585,182,2.128,183,3.653,185,2.997,186,2.559,188,2.203,189,2.125,190,1.15,191,1.15,192,1.817,193,2.584,194,1.817,197,1.753,198,1.753,199,2.787,200,1.15,201,1.817,208,0.788,210,1.817,214,1.15,215,1.15,216,1.817,218,1.817,219,1.817,220,1.817,222,1.347,223,1.245,228,1.15,230,1.15,231,2.638,234,3.31,237,1.15,238,0.886,239,1.15,240,3.216,241,1.15,242,1.543,243,2.559,245,1.753,246,1.567,247,2.128,248,2.203,249,1.15,250,1.15,253,1.15,255,1.003,257,1.399,259,1.15,260,1.15,263,1.15,332,2.559,351,1.585,352,1.347,353,3.263,354,3.662,355,2.997,356,2.6,357,1.646,358,3.662,359,1.646,360,1.646,361,2.997,362,2.6,363,1.646,364,2.6,365,1.646,366,2.128,367,2.6,368,1.817,369,2.128,370,1.646,371,2.6,372,1.646,373,2.6,374,1.646,375,2.6,376,1.646,377,1.347,378,1.646,379,1.646,380,1.646,381,2.6,382,1.646,383,2.128,384,2.638,385,1.646,386,1.245,387,1.347,388,1.15,389,1.646,390,1.646,391,2.128,392,1.646,393,1.646,394,1.347,395,2.6,396,1.646,397,1.646,398,1.646,399,1.646,400,1.646,401,1.646,402,1.646,403,1.646,404,1.646,405,1.347,406,1.646,407,1.646,408,1.646,409,1.347,410,1.646,411,1.646,412,1.646,413,1.646,414,1.347,415,1.15]],["title/modules/FazendasModule.html",[0,1.006,13,1.575]],["body/modules/FazendasModule.html",[0,1.685,2,1.48,3,1.48,4,1.862,5,1.862,6,1.48,7,2.637,8,2.637,12,0.043,13,2.994,15,2.389,16,1.862,17,1.862,18,0.511,19,0.511,20,0.439,22,2.109,23,0.808,24,0.955,25,2.705,26,1.327,53,0.511,54,0.244,55,0.032,56,0.032,83,0.758,124,1.225,166,1.899,349,2.831,351,2.987,386,2.781,387,2.831,416,2.831,417,2.831,418,2.831,419,3.46,420,2.831,421,3.46,422,3.46]],["title/injectables/FazendasService.html",[271,1.252,386,1.401]],["body/injectables/FazendasService.html",[12,0.043,18,0.311,19,0.311,20,0.267,23,0.615,24,0.581,26,0.807,34,1.007,36,0.863,53,0.311,54,0.148,55,0.023,56,0.023,61,0.357,63,1.69,64,1.503,78,1.254,80,1.024,83,0.823,84,1.037,100,1.914,102,1.914,104,1.007,114,1.282,140,1.503,160,0.807,163,1.709,170,1.503,171,2.675,173,1.503,174,1.995,176,1.503,177,1.503,188,2.385,189,1.799,197,2.134,198,2.134,208,1.503,223,1.007,238,1.132,242,2.134,245,1.503,246,1.344,248,2.385,257,2.022,271,1.344,272,1.282,276,2.194,278,2.911,283,3.827,284,2.194,285,3.267,291,2.194,293,1.47,295,1.47,296,1.721,301,1.721,312,2.29,327,1.47,331,1.721,332,3.115,334,1.721,355,3.41,383,2.57,386,1.503,409,1.721,420,1.721,423,1.721,424,4.166,425,3.14,426,1.721,427,2.103,428,2.57,429,2.103,430,2.103,431,2.103,432,2.103,433,2.103,434,3.14,435,2.103,436,2.103,437,2.103,438,2.103,439,2.57,440,1.721,441,2.103,442,2.103,443,2.57,444,3.14,445,2.103,446,2.103,447,1.721,448,1.721,449,2.103,450,1.721,451,2.103,452,2.103,453,3.14,454,3.14,455,2.103,456,2.103,457,2.103,458,2.103,459,2.103,460,2.103,461,2.103,462,1.721,463,2.103,464,1.721,465,2.103]],["title/entities/Produtor.html",[124,0.808,142,1.252]],["body/entities/Produtor.html",[12,0.042,18,0.545,19,0.545,20,0.468,23,0.545,34,2.214,36,0.978,53,0.545,54,0.26,55,0.033,56,0.033,61,0.627,62,1.773,68,1.737,78,1.244,80,1.218,84,1.394,124,1.276,129,3.078,130,4.132,142,1.979,143,2.249,145,3.699,153,3.231,157,2.579,160,1.415,466,3.02,467,3.69,468,3.69,469,3.69,470,3.69,471,3.69]],["title/controllers/ProdutoresController.html",[164,1.252,472,1.784]],["body/controllers/ProdutoresController.html",[12,0.043,18,0.334,19,0.334,20,0.287,23,0.679,24,0.625,36,0.759,53,0.334,54,0.16,55,0.024,56,0.024,61,0.384,68,1.485,71,1.847,78,1.064,80,0.859,84,1.191,95,0.968,124,1.369,126,2.801,163,1.504,164,0.968,166,0.968,168,1.581,170,1.587,171,2.484,173,1.587,174,2.067,176,1.587,177,1.587,188,2.067,189,1.877,190,1.581,191,1.581,192,2.316,197,1.877,198,1.877,199,3.211,200,1.581,201,2.316,208,1.083,210,2.316,214,1.581,215,1.581,216,2.316,218,2.316,219,2.316,220,2.316,223,1.083,228,1.581,230,1.581,234,3.211,237,1.581,238,1.218,239,1.581,240,3.017,241,1.581,242,1.587,243,3.017,245,1.877,246,1.678,248,2.067,249,1.581,250,1.581,253,1.581,255,1.379,259,1.581,260,1.581,263,1.581,366,2.712,368,2.316,369,1.852,377,1.852,391,3.209,394,2.712,414,1.852,415,1.581,472,2.02,473,1.852,474,3.209,475,3.355,476,3.314,477,2.263,478,3.314,479,2.263,480,3.314,481,3.314,482,3.314,483,2.263,484,3.314,485,3.314,486,2.263,487,2.263,488,3.314,489,2.263,490,1.587,491,1.852,492,1.581,493,2.263,494,2.263,495,2.263,496,2.263,497,3.314,498,3.314]],["title/modules/ProdutoresModule.html",[0,1.006,14,1.575]],["body/modules/ProdutoresModule.html",[0,1.7,2,1.507,3,1.507,4,1.896,5,1.896,6,1.507,7,2.66,8,2.66,12,0.042,14,3.006,15,2.416,16,1.896,17,1.896,18,0.52,19,0.52,20,0.447,22,2.147,23,0.794,24,0.972,25,2.737,26,1.351,53,0.52,54,0.248,55,0.032,56,0.032,124,0.972,166,1.921,472,3.012,490,2.788,491,2.883,499,2.883,500,2.883,501,2.883,502,3.522,503,2.883,504,3.522,505,3.522]],["title/injectables/ProdutoresService.html",[271,1.252,490,1.401]],["body/injectables/ProdutoresService.html",[12,0.043,18,0.409,19,0.409,20,0.351,23,0.698,24,0.764,26,1.062,34,1.326,36,0.916,53,0.409,54,0.195,55,0.027,56,0.027,61,0.47,74,1.935,78,1.223,80,0.96,84,1.056,124,1.056,129,1.687,140,1.832,160,1.062,163,1.813,170,1.832,171,2.457,173,1.832,174,2.264,176,1.832,177,1.832,188,2.264,189,1.832,197,2.264,198,2.264,208,1.832,223,1.832,238,1.49,242,1.326,245,1.326,246,1.185,248,2.264,257,2.059,271,1.637,272,1.687,276,2.674,278,3.305,284,2.674,285,3.587,291,2.674,293,1.935,295,1.935,320,2.266,327,1.935,426,2.266,428,3.131,439,3.131,440,2.266,450,2.266,490,1.832,503,2.266,506,2.266,507,2.769,508,2.769,509,2.769,510,2.769,511,2.769,512,2.769,513,3.826,514,2.769,515,2.769,516,2.769,517,2.769,518,2.769,519,2.769]],["title/coverage.html",[520,3.252]],["body/coverage.html",[6,1.223,12,0.042,20,0.362,36,0.553,54,0.314,55,0.028,56,0.028,57,1.741,59,2.338,60,2.338,75,0.983,83,0.626,97,1.741,98,2.338,99,2.338,124,0.789,126,1.741,127,2.338,128,2.338,131,1.996,137,1.996,142,1.907,144,2.338,164,1.907,165,1.741,167,2.338,224,1.368,226,1.996,246,1.223,271,1.907,273,2.338,312,3.59,335,2.338,351,1.741,352,2.338,386,1.368,388,1.996,423,2.338,466,2.338,472,1.741,473,2.338,490,1.368,492,1.996,506,2.338,520,2.338,521,2.857,522,2.857,523,2.857,524,2.338,525,2.338,526,5.019,527,2.338,528,5.713,529,2.857,530,3.909,531,3.909,532,2.338,533,5.182,534,2.338,535,2.857,536,2.857,537,2.338,538,2.857,539,3.621,540,3.621,541,1.996,542,1.996,543,1.996,544,2.338,545,2.338,546,2.857,547,2.857,548,2.857]],["title/dependencies.html",[3,1.504,549,2.008]],["body/dependencies.html",[3,1.663,12,0.043,24,1.073,26,1.49,31,3.181,55,0.034,56,0.034,81,2.369,95,1.663,132,2.716,134,2.716,160,1.49,550,3.887,551,3.887,552,5.169,553,3.887,554,3.887,555,3.887,556,4.775,557,3.887,558,3.887,559,3.887,560,3.887,561,3.887,562,3.887,563,3.887,564,3.887,565,3.887,566,3.887,567,3.887,568,3.181,569,3.887,570,3.887,571,3.887,572,3.887]],["title/miscellaneous/functions.html",[573,1.495,574,2.876]],["body/miscellaneous/functions.html",[6,2.269,12,0.036,55,0.036,56,0.036,61,0.7,524,4.049,525,4.049,527,4.34,537,3.373,539,2.88,540,3.843,541,3.705,542,3.705,543,3.705,573,2.512,574,3.373,575,4.121,576,4.34]],["title/index.html",[61,0.417,577,2.454,578,2.454]],["body/index.html",[12,0.04,55,0.029,56,0.029,66,1.781,72,1.399,74,2.042,75,1.005,76,1.781,77,2.042,82,1.572,83,0.987,96,2.748,104,1.399,107,3.69,108,1.399,112,2.748,114,1.781,124,0.806,132,2.042,134,2.042,160,1.12,169,2.748,181,1.781,183,3.89,186,2.042,193,1.781,353,3.69,361,3.69,368,2.774,384,2.391,443,2.391,447,2.391,448,3.249,462,3.249,464,3.249,474,3.69,475,2.042,568,2.391,579,4.508,580,2.921,581,2.921,582,2.921,583,5.217,584,2.921,585,2.921,586,3.969,587,2.921,588,2.921,589,2.921,590,2.921,591,2.921,592,2.921,593,2.921,594,2.921,595,2.921,596,2.921,597,2.921,598,2.921,599,3.249,600,3.969,601,2.921,602,2.921,603,2.921,604,2.921,605,2.921,606,2.921,607,2.921,608,2.921,609,2.921,610,2.921,611,2.921,612,2.921,613,2.921,614,5.058,615,4.508,616,2.921,617,2.921,618,2.921,619,2.921,620,2.921,621,2.921,622,2.921,623,2.921,624,3.969,625,2.921,626,2.921,627,2.921,628,2.921,629,2.921,630,4.508,631,2.921,632,2.921,633,2.921,634,2.921,635,2.921,636,2.921]],["title/modules.html",[2,1.701]],["body/modules.html",[1,2.613,2,1.835,11,2.308,12,0.036,13,2.308,14,2.308,55,0.036,56,0.036,637,5.572,638,5.572,639,5.572,640,5.572]],["title/overview.html",[641,3.252]],["body/overview.html",[0,1.179,1,3.428,2,1.467,3,1.467,4,1.845,5,1.845,6,1.467,7,1.845,8,1.845,9,2.806,10,2.806,11,2.937,12,0.041,13,2.937,14,2.937,15,2.375,16,1.845,17,1.845,55,0.032,56,0.032,58,2.09,143,2.09,166,1.467,224,2.658,264,2.806,265,2.806,266,2.806,272,2.09,386,2.658,416,2.806,417,2.806,418,2.806,490,2.658,499,2.806,500,2.806,501,2.806,641,2.806,642,3.429,643,5.153]],["title/properties.html",[62,1.348,549,2.008]],["body/properties.html",[12,0.042,55,0.037,56,0.037,62,1.707,71,1.905,644,3.643,645,4.452,646,4.452,647,4.452,648,4.452]],["title/miscellaneous/variables.html",[573,1.495,649,2.876]],["body/miscellaneous/variables.html",[12,0.042,55,0.021,56,0.021,61,0.328,63,1.04,64,1.709,65,1.921,66,2.759,72,1.709,76,1.178,80,0.423,81,1.795,88,1.921,100,2.619,101,3.002,102,2.619,103,2.058,104,1.911,105,3.002,106,2.921,108,2.64,129,1.178,131,2.058,133,2.41,135,2.41,137,2.058,181,3.497,193,1.178,206,1.581,226,2.058,255,3.187,312,2.175,316,4.605,388,2.058,405,2.41,415,3.988,475,3.654,492,2.058,532,1.581,534,1.581,539,1.35,540,2.789,541,1.35,542,1.35,543,1.35,544,2.41,545,1.581,573,1.178,576,2.921,599,2.41,644,1.581,649,1.581,650,1.932,651,1.932,652,1.932,653,4.527,654,4.527,655,3.569,656,1.932,657,1.932,658,1.932,659,4.527,660,2.945,661,1.932,662,2.945,663,1.932,664,2.945,665,2.945,666,1.932,667,4.296,668,5.072,669,3.991,670,1.932,671,4.527,672,1.932,673,3.991,674,3.991,675,1.932,676,3.991,677,1.932,678,1.932,679,1.932,680,1.932,681,1.932,682,1.932,683,1.932,684,1.932,685,1.932,686,1.932,687,1.932,688,1.932,689,1.932,690,1.932,691,1.932,692,2.945,693,1.932,694,1.932,695,1.932,696,3.569,697,1.932,698,1.932,699,1.932,700,1.932]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":312,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":645,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["1.0.3",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["100",{"_index":111,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["11.0.0",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["1900",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["201",{"_index":366,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["2024",{"_index":91,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["2100",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":643,"title":{},"body":{"overview.html":{}}}],["4",{"_index":642,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":480,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["5.0.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":70,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{}}}],["5432",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["acessível",{"_index":622,"title":{},"body":{"index.html":{}}}],["addselect('count",{"_index":331,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["agricultable",{"_index":401,"title":{},"body":{"controllers/FazendasController.html":{}}}],["agricultável",{"_index":462,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["agrícolas",{"_index":587,"title":{},"body":{"index.html":{}}}],["al",{"_index":406,"title":{},"body":{"controllers/FazendasController.html":{}}}],["ano",{"_index":92,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["any.required",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":579,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":231,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["apioperation",{"_index":234,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apiparam",{"_index":233,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiproperty",{"_index":94,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiproperty({example",{"_index":69,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiquery",{"_index":232,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiresponse",{"_index":391,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags",{"_index":230,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags('culturas",{"_index":235,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apitags('fazendas",{"_index":392,"title":{},"body":{"controllers/FazendasController.html":{}}}],["apitags('produtores",{"_index":495,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["aplicação",{"_index":621,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":63,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["area')@apioperation({summary",{"_index":374,"title":{},"body":{"controllers/FazendasController.html":{}}}],["areaagricultavel",{"_index":100,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["areaocupadanasafra",{"_index":304,"title":{},"body":{"injectables/CulturasService.html":{}}}],["areatotal",{"_index":101,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["areavegetacao",{"_index":102,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":171,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["atualizar",{"_index":216,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["author",{"_index":648,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["automática",{"_index":593,"title":{},"body":{"index.html":{}}}],["await",{"_index":257,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["badrequestexception",{"_index":223,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["badrequestexception('fazenda",{"_index":300,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception('o",{"_index":253,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["badrequestexception('soma",{"_index":446,"title":{},"body":{"injectables/FazendasService.html":{}}}],["badrequestexception('área",{"_index":315,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception(error.details[0].message",{"_index":498,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["badrequestexception(error.message",{"_index":247,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["boa",{"_index":121,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["body",{"_index":199,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["body.areaagricultavel",{"_index":396,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areatotal",{"_index":398,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areavegetacao",{"_index":397,"title":{},"body":{"controllers/FazendasController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":640,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":637,"title":{},"body":{"modules.html":{}}}],["builda",{"_index":620,"title":{},"body":{"index.html":{}}}],["c",{"_index":310,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.area",{"_index":311,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.fazendaid",{"_index":306,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.safra",{"_index":307,"title":{},"body":{"injectables/CulturasService.html":{}}}],["cadastradas",{"_index":602,"title":{},"body":{"index.html":{}}}],["cadastrado",{"_index":518,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["cadastro",{"_index":589,"title":{},"body":{"index.html":{}}}],["campo",{"_index":415,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["caracteres",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chapec",{"_index":116,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["cidade",{"_index":103,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":54,"title":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["classes",{"_index":58,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_culturasmodule",{"_index":264,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_exports",{"_index":266,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_providers",{"_index":265,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule",{"_index":416,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_exports",{"_index":417,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_providers",{"_index":418,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule",{"_index":499,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_exports",{"_index":500,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_providers",{"_index":501,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cnpj",{"_index":134,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["cobertura",{"_index":635,"title":{},"body":{"index.html":{}}}],["column",{"_index":145,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["column({unique",{"_index":468,"title":{},"body":{"entities/Produtor.html":{}}}],["com",{"_index":368,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"index.html":{}}}],["completo",{"_index":138,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["compodoc",{"_index":627,"title":{},"body":{"index.html":{}}}],["compose",{"_index":618,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":242,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["constructor",{"_index":276,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["constructor(culturarepository",{"_index":277,"title":{},"body":{"injectables/CulturasService.html":{}}}],["constructor(private",{"_index":237,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["constructor(repo",{"_index":426,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["construída",{"_index":581,"title":{},"body":{"index.html":{}}}],["conter",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controle",{"_index":594,"title":{},"body":{"index.html":{}}}],["controller",{"_index":164,"title":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["controller('culturas",{"_index":236,"title":{},"body":{"controllers/CulturasController.html":{}}}],["controller('fazendas",{"_index":393,"title":{},"body":{"controllers/FazendasController.html":{}}}],["controller('produtores",{"_index":496,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["controllers",{"_index":166,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["count",{"_index":332,"title":{},"body":{"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["countbyestado",{"_index":354,"title":{},"body":{"controllers/FazendasController.html":{}}}],["countbyrubro",{"_index":172,"title":{},"body":{"controllers/CulturasController.html":{}}}],["countculturasbyrubro",{"_index":274,"title":{},"body":{"injectables/CulturasService.html":{}}}],["countfazendasbyestado",{"_index":424,"title":{},"body":{"injectables/FazendasService.html":{}}}],["coverage",{"_index":520,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpf",{"_index":132,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["cpf/cnpj",{"_index":516,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["create",{"_index":173,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["create(@body",{"_index":241,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(body",{"_index":190,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(data",{"_index":284,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["createculturadto",{"_index":57,"title":{"classes/CreateCulturaDto.html":{}},"body":{"classes/CreateCulturaDto.html":{},"controllers/CulturasController.html":{},"coverage.html":{}}}],["createfazendadto",{"_index":97,"title":{"classes/CreateFazendaDto.html":{}},"body":{"classes/CreateFazendaDto.html":{},"controllers/FazendasController.html":{},"coverage.html":{}}}],["createfazendadto})@apiresponse({status",{"_index":365,"title":{},"body":{"controllers/FazendasController.html":{}}}],["createprodutordto",{"_index":126,"title":{"classes/CreateProdutorDto.html":{}},"body":{"classes/CreateProdutorDto.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["createquerybuilder('cultura",{"_index":329,"title":{},"body":{"injectables/CulturasService.html":{}}}],["createquerybuilder('fazenda",{"_index":454,"title":{},"body":{"injectables/FazendasService.html":{}}}],["criada",{"_index":367,"title":{},"body":{"controllers/FazendasController.html":{}}}],["criado",{"_index":478,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["criar",{"_index":192,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["cultivado",{"_index":89,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura",{"_index":75,"title":{"entities/Cultura.html":{}},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"coverage.html":{},"index.html":{}}}],["cultura'})@apibody({type",{"_index":195,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura'})@apiparam({name",{"_index":211,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto",{"_index":229,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto.ts",{"_index":60,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["cultura.dto.ts:11",{"_index":90,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:17",{"_index":79,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:20",{"_index":93,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:8",{"_index":86,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.fazenda",{"_index":341,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturarepository",{"_index":281,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturas",{"_index":169,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"index.html":{}}}],["culturas.controller",{"_index":269,"title":{},"body":{"modules/CulturasModule.html":{}}}],["culturas.entity",{"_index":268,"title":{},"body":{"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["culturas.service",{"_index":225,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{}}}],["culturas/culturas.entity",{"_index":350,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturas/culturas.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["culturaschema",{"_index":226,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["culturaschema.validate(body",{"_index":244,"title":{},"body":{"controllers/CulturasController.html":{}}}],["culturascontroller",{"_index":165,"title":{"controllers/CulturasController.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"coverage.html":{}}}],["culturasexistentes",{"_index":302,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturasmodule",{"_index":11,"title":{"modules/CulturasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules.html":{},"overview.html":{}}}],["culturasservice",{"_index":224,"title":{"injectables/CulturasService.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"coverage.html":{},"overview.html":{}}}],["custom((value",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":82,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"index.html":{}}}],["dados",{"_index":481,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["das",{"_index":447,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["dashboard",{"_index":601,"title":{},"body":{"index.html":{}}}],["data",{"_index":140,"title":{},"body":{"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["data.area",{"_index":314,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.areaagricultavel",{"_index":441,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areatotal",{"_index":444,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areavegetacao",{"_index":442,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.fazendaid",{"_index":298,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.identidade",{"_index":515,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["data.safra",{"_index":308,"title":{},"body":{"injectables/CulturasService.html":{}}}],["database",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":183,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["debe",{"_index":404,"title":{},"body":{"controllers/FazendasController.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["decorators",{"_index":68,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{}}}],["default",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":78,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["delete",{"_index":218,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["delete(':id",{"_index":261,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":209,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete()@apioperation({summary",{"_index":377,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["deleted",{"_index":327,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":71,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"properties.html":{}}}],["deve",{"_index":316,"title":{},"body":{"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["docker",{"_index":615,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":624,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":228,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["dto/culturas.dto",{"_index":227,"title":{},"body":{"controllers/CulturasController.html":{}}}],["dto/fazendas.dto",{"_index":389,"title":{},"body":{"controllers/FazendasController.html":{}}}],["dto/produtores.dto",{"_index":493,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["e",{"_index":583,"title":{},"body":{"index.html":{}}}],["eager",{"_index":149,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["edição",{"_index":590,"title":{},"body":{"index.html":{}}}],["em",{"_index":76,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["encontrada",{"_index":301,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["entities",{"_index":143,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"overview.html":{}}}],["entity",{"_index":142,"title":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"coverage.html":{}}}],["error",{"_index":243,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["esperança",{"_index":122,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["est",{"_index":517,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["estado",{"_index":104,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estado')@apioperation({summary",{"_index":360,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estados",{"_index":362,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estar",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":96,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"index.html":{}}}],["exatamente",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excede",{"_index":321,"title":{},"body":{"injectables/CulturasService.html":{}}}],["exceder",{"_index":595,"title":{},"body":{"index.html":{}}}],["excedida",{"_index":319,"title":{},"body":{"injectables/CulturasService.html":{}}}],["exclusão",{"_index":591,"title":{},"body":{"index.html":{}}}],["executando",{"_index":607,"title":{},"body":{"index.html":{}}}],["exemplocnpj",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplocpf",{"_index":131,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplonome",{"_index":137,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["existe",{"_index":513,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["existente",{"_index":488,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["export",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["express",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":162,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["false})@joincolumn({name",{"_index":150,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["fazenda",{"_index":83,"title":{"entities/Fazenda.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"index.html":{}}}],["fazenda'})@apibody({type",{"_index":364,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda'})@apiquery({name",{"_index":205,"title":{},"body":{"controllers/CulturasController.html":{}}}],["fazenda.areaagricultavel",{"_index":463,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.areatotal",{"_index":318,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazenda.areavegetacao",{"_index":465,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.culturas",{"_index":148,"title":{},"body":{"entities/Cultura.html":{}}}],["fazenda.dto",{"_index":390,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda.dto.ts",{"_index":99,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["fazenda.dto.ts:11",{"_index":123,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:14",{"_index":117,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:17",{"_index":120,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:23",{"_index":113,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:26",{"_index":110,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:29",{"_index":115,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:5",{"_index":125,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazendaid",{"_index":64,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["fazendarepository",{"_index":279,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazendas",{"_index":353,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["fazendas.controller",{"_index":421,"title":{},"body":{"modules/FazendasModule.html":{}}}],["fazendas.entity",{"_index":420,"title":{},"body":{"modules/FazendasModule.html":{},"injectables/FazendasService.html":{}}}],["fazendas.service",{"_index":387,"title":{},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{}}}],["fazendas/fazendas.entity",{"_index":161,"title":{},"body":{"entities/Cultura.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["fazendas/fazendas.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["fazendaschema",{"_index":388,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fazendaschema.validate(body",{"_index":395,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazendascontroller",{"_index":351,"title":{"controllers/FazendasController.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"coverage.html":{}}}],["fazendasmodule",{"_index":13,"title":{"modules/FazendasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FazendasModule.html":{},"modules.html":{},"overview.html":{}}}],["fazendasservice",{"_index":386,"title":{"injectables/FazendasService.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"overview.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["filter((c",{"_index":305,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findall",{"_index":174,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["findbyfazenda",{"_index":175,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(@query('fazendaid",{"_index":252,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(fazendaid",{"_index":203,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazendaid",{"_index":275,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findbyfazendaid(fazendaid",{"_index":288,"title":{},"body":{"injectables/CulturasService.html":{}}}],["funcionalidades",{"_index":588,"title":{},"body":{"index.html":{}}}],["function",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":574,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generaterandomname",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatereadme",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatevalidcnpj",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatevalidcpf",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generator",{"_index":141,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["generator.ts",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gerenciamento",{"_index":585,"title":{},"body":{"index.html":{}}}],["get('/count",{"_index":178,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["get('/fazenda",{"_index":251,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/fazenda')@apioperation({summary",{"_index":204,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/total",{"_index":373,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get(':id/uso",{"_index":381,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count",{"_index":407,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count')@apioperation({summary",{"_index":357,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get()@apioperation({summary",{"_index":200,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["getrawmany",{"_index":334,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["getrawone",{"_index":456,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getting",{"_index":577,"title":{"index.html":{}},"body":{}}],["gettotalarea",{"_index":355,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao",{"_index":425,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao(fazendaid",{"_index":434,"title":{},"body":{"injectables/FazendasService.html":{}}}],["groupby('cultura.rubro",{"_index":333,"title":{},"body":{"injectables/CulturasService.html":{}}}],["groupby('fazenda.estado",{"_index":459,"title":{},"body":{"injectables/FazendasService.html":{}}}],["gráfico",{"_index":185,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["gráficos",{"_index":604,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["hectares",{"_index":77,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"index.html":{}}}],["helpers",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:3000",{"_index":623,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":625,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":628,"title":{},"body":{"index.html":{}}}],["id",{"_index":84,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["identidade",{"_index":129,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["igual",{"_index":405,"title":{},"body":{"controllers/FazendasController.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["index",{"_index":61,"title":{"index.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["informada",{"_index":317,"title":{},"body":{"injectables/CulturasService.html":{}}}],["injectable",{"_index":271,"title":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["injectables",{"_index":272,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"overview.html":{}}}],["injectrepository",{"_index":293,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["injectrepository(cultura",{"_index":294,"title":{},"body":{"injectables/CulturasService.html":{}}}],["injectrepository(fazenda",{"_index":296,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["injectrepository(produtor",{"_index":512,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["instalação",{"_index":616,"title":{},"body":{"index.html":{}}}],["installsubir",{"_index":617,"title":{},"body":{"index.html":{}}}],["integração",{"_index":633,"title":{},"body":{"index.html":{}}}],["inteiro",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inválida",{"_index":449,"title":{},"body":{"injectables/FazendasService.html":{}}}],["inválidos",{"_index":482,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["isglobal",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["j",{"_index":320,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/ProdutoresService.html":{}}}],["joi.number().integer().min(1900).max(2100).required().messages",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().integer().positive().required().messages",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().positive().required().messages",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().length(2).uppercase().required().messages",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().min(3).required().messages",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required().messages",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().trim().min(2).required().messages",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uuid",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uuid().required().messages",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":159,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["la",{"_index":399,"title":{},"body":{"controllers/FazendasController.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["letras",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":646,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limite",{"_index":322,"title":{},"body":{"injectables/CulturasService.html":{}}}],["listar",{"_index":201,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["localhost",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["localmente",{"_index":609,"title":{},"body":{"index.html":{}}}],["maior",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maiúsculas",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manytoone",{"_index":158,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["manytoone(undefined",{"_index":147,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["mapeamento",{"_index":182,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["matching",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["menor",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menos",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":170,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["miscellaneous",{"_index":573,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["mínimo",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["múltiplas",{"_index":597,"title":{},"body":{"index.html":{}}}],["name",{"_index":163,"title":{},"body":{"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["nestjs",{"_index":582,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":95,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["new",{"_index":246,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["node.js",{"_index":612,"title":{},"body":{"index.html":{}}}],["nome",{"_index":88,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["nomeprodutor",{"_index":130,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{}}}],["notfoundexception",{"_index":438,"title":{},"body":{"injectables/FazendasService.html":{}}}],["notfoundexception('fazenda",{"_index":461,"title":{},"body":{"injectables/FazendasService.html":{}}}],["nova",{"_index":194,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{}}}],["novo",{"_index":476,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["number",{"_index":67,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{}}}],["number(result?.totalarea",{"_index":457,"title":{},"body":{"injectables/FazendasService.html":{}}}],["number.base",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.integer",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.max",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.min",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.positive",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["não",{"_index":114,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"index.html":{}}}],["número",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o",{"_index":181,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obrigatório",{"_index":255,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["onetomany",{"_index":348,"title":{},"body":{"entities/Fazenda.html":{}}}],["onetomany(undefined",{"_index":340,"title":{},"body":{"entities/Fazenda.html":{}}}],["optional",{"_index":198,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["os",{"_index":485,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["ou",{"_index":133,"title":{},"body":{"classes/CreateProdutorDto.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["outro",{"_index":519,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["overview",{"_index":641,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":549,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":74,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/ProdutoresService.html":{},"index.html":{}}}],["param",{"_index":222,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["parameters",{"_index":197,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["parseint(process.env.db_port",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["partial",{"_index":285,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["parâmetro",{"_index":254,"title":{},"body":{"controllers/CulturasController.html":{}}}],["password",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["pelo",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["pizza",{"_index":186,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["plantada",{"_index":605,"title":{},"body":{"index.html":{}}}],["plantadas",{"_index":184,"title":{},"body":{"controllers/CulturasController.html":{}}}],["pode",{"_index":107,"title":{},"body":{"classes/CreateFazendaDto.html":{},"index.html":{}}}],["por",{"_index":361,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["port",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["positivo",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":219,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["post()@apioperation({summary",{"_index":191,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["postgres",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":584,"title":{},"body":{"index.html":{}}}],["pr",{"_index":610,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":168,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["primarygeneratedcolumn",{"_index":157,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":153,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["private",{"_index":295,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["process.env.db_database",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["produtor",{"_index":124,"title":{"entities/Produtor.html":{}},"body":{"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"modules/FazendasModule.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"index.html":{}}}],["produtor'})@apiresponse({status",{"_index":477,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto",{"_index":494,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto.ts",{"_index":128,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["produtor.dto.ts:15",{"_index":139,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtor.dto.ts:9",{"_index":136,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtores",{"_index":474,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{}}}],["produtores.controller",{"_index":504,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["produtores.entity",{"_index":503,"title":{},"body":{"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["produtores.service",{"_index":491,"title":{},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{}}}],["produtores/produtores.entity",{"_index":349,"title":{},"body":{"entities/Fazenda.html":{},"modules/FazendasModule.html":{}}}],["produtores/produtores.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["produtorescontroller",{"_index":472,"title":{"controllers/ProdutoresController.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{}}}],["produtoresmodule",{"_index":14,"title":{"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["produtoresservice",{"_index":490,"title":{"injectables/ProdutoresService.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"overview.html":{}}}],["produtorid",{"_index":105,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["produtorschema",{"_index":492,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["produtorschema.validate(body",{"_index":497,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["projeto",{"_index":608,"title":{},"body":{"index.html":{}}}],["promise",{"_index":283,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["properties",{"_index":62,"title":{"properties.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["put",{"_index":220,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["put()@apioperation({summary",{"_index":215,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["quantidade",{"_index":358,"title":{},"body":{"controllers/FazendasController.html":{}}}],["que",{"_index":106,"title":{},"body":{"classes/CreateFazendaDto.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":221,"title":{},"body":{"controllers/CulturasController.html":{}}}],["rea",{"_index":72,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["readme.ts",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readonly",{"_index":238,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["reas",{"_index":448,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["reduce((total",{"_index":309,"title":{},"body":{"injectables/CulturasService.html":{}}}],["reflect",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["registrada",{"_index":375,"title":{},"body":{"controllers/FazendasController.html":{}}}],["registrados",{"_index":603,"title":{},"body":{"index.html":{}}}],["registro",{"_index":596,"title":{},"body":{"index.html":{}}}],["relacionada",{"_index":85,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["relacionamento",{"_index":598,"title":{},"body":{"index.html":{}}}],["relations",{"_index":299,"title":{},"body":{"injectables/CulturasService.html":{}}}],["remove",{"_index":176,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remove(@body('id",{"_index":414,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["remove(@param('id",{"_index":262,"title":{},"body":{"controllers/CulturasController.html":{}}}],["remove(id",{"_index":208,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remover",{"_index":210,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["removida",{"_index":212,"title":{},"body":{"controllers/CulturasController.html":{}}}],["repo",{"_index":428,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["repository",{"_index":278,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["required",{"_index":206,"title":{},"body":{"controllers/CulturasController.html":{},"miscellaneous/variables.html":{}}}],["required().messages",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisitos",{"_index":611,"title":{},"body":{"index.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["restful",{"_index":580,"title":{},"body":{"index.html":{}}}],["result",{"_index":452,"title":{},"body":{"injectables/FazendasService.html":{}}}],["results",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":180,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["return",{"_index":248,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["returns",{"_index":188,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["rodando",{"_index":629,"title":{},"body":{"index.html":{}}}],["rubro",{"_index":65,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["rubro')@apioperation({summary",{"_index":179,"title":{},"body":{"controllers/CulturasController.html":{}}}],["rurais",{"_index":586,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["safra",{"_index":66,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sc",{"_index":118,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["select('cultura.rubro",{"_index":330,"title":{},"body":{"injectables/CulturasService.html":{}}}],["select('fazenda.estado",{"_index":458,"title":{},"body":{"injectables/FazendasService.html":{}}}],["select('sum(fazenda.areatotal",{"_index":455,"title":{},"body":{"injectables/FazendasService.html":{}}}],["semeada",{"_index":109,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ser",{"_index":108,"title":{},"body":{"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":239,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["soja",{"_index":87,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["solo",{"_index":384,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["solo')@apioperation({summary",{"_index":382,"title":{},"body":{"controllers/FazendasController.html":{}}}],["soma",{"_index":443,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["src/.../culturas.dto.ts",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fazendas.dto.ts",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../produtores.dto.ts",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/culturas/culturas.controller.ts",{"_index":167,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{}}}],["src/culturas/culturas.controller.ts:31",{"_index":196,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:39",{"_index":202,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:46",{"_index":207,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:57",{"_index":187,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:65",{"_index":217,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:78",{"_index":213,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.entity.ts",{"_index":144,"title":{},"body":{"entities/Cultura.html":{},"coverage.html":{}}}],["src/culturas/culturas.entity.ts:13",{"_index":154,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:16",{"_index":152,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:20",{"_index":151,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:23",{"_index":155,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:26",{"_index":146,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:29",{"_index":156,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.module.ts",{"_index":267,"title":{},"body":{"modules/CulturasModule.html":{}}}],["src/culturas/culturas.service.ts",{"_index":273,"title":{},"body":{"injectables/CulturasService.html":{},"coverage.html":{}}}],["src/culturas/culturas.service.ts:17",{"_index":286,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:53",{"_index":287,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:57",{"_index":289,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:63",{"_index":292,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:67",{"_index":290,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:72",{"_index":282,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:8",{"_index":280,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/dto/create",{"_index":59,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["src/culturas/dto/culturas.dto.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/dto/create",{"_index":98,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["src/fazendas/dto/fazendas.dto.ts",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/fazendas.controller.ts",{"_index":352,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.controller.ts:25",{"_index":370,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:39",{"_index":372,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:45",{"_index":359,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:51",{"_index":376,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:59",{"_index":363,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:69",{"_index":385,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:76",{"_index":379,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:84",{"_index":378,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.entity.ts",{"_index":335,"title":{},"body":{"entities/Fazenda.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.entity.ts:15",{"_index":344,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:18",{"_index":347,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:22",{"_index":346,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:25",{"_index":345,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:28",{"_index":339,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:31",{"_index":343,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:34",{"_index":337,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:37",{"_index":336,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:40",{"_index":338,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:43",{"_index":342,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.module.ts",{"_index":419,"title":{},"body":{"modules/FazendasModule.html":{}}}],["src/fazendas/fazendas.service.ts",{"_index":423,"title":{},"body":{"injectables/FazendasService.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.service.ts:11",{"_index":427,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:17",{"_index":431,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:21",{"_index":432,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:25",{"_index":437,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:36",{"_index":436,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:41",{"_index":429,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:45",{"_index":433,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:54",{"_index":430,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:63",{"_index":435,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/main.ts",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/produtores/dto/create",{"_index":127,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["src/produtores/dto/data",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/dto/produtores.dto.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/produtores.controller.ts",{"_index":473,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["src/produtores/produtores.controller.ts:24",{"_index":483,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:34",{"_index":486,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:40",{"_index":489,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:50",{"_index":487,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.entity.ts",{"_index":466,"title":{},"body":{"entities/Produtor.html":{},"coverage.html":{}}}],["src/produtores/produtores.entity.ts:12",{"_index":470,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:6",{"_index":467,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:9",{"_index":469,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.module.ts",{"_index":502,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["src/produtores/produtores.service.ts",{"_index":506,"title":{},"body":{"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["src/produtores/produtores.service.ts:13",{"_index":508,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:25",{"_index":509,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:29",{"_index":511,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:33",{"_index":510,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:7",{"_index":507,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["started",{"_index":578,"title":{"index.html":{}},"body":{}}],["statements",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":394,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["string",{"_index":80,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["string.base",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.empty",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.length",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.min",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uppercase",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uuid",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sucesso",{"_index":369,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["sucesso'})@apiresponse({status",{"_index":479,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["suma",{"_index":400,"title":{},"body":{"controllers/FazendasController.html":{}}}],["summary",{"_index":240,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["support",{"_index":638,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":639,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":568,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["synchronize",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["ter",{"_index":599,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":632,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":636,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":634,"title":{},"body":{"index.html":{}}}],["testes",{"_index":630,"title":{},"body":{"index.html":{}}}],["this.culturarepository",{"_index":328,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.create",{"_index":323,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.delete",{"_index":326,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.find",{"_index":303,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(cultura",{"_index":324,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(data",{"_index":325,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.fazendarepository.findone",{"_index":297,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.repo",{"_index":453,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.count",{"_index":451,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.delete",{"_index":450,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.find",{"_index":440,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.findone",{"_index":514,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["this.repo.findoneby",{"_index":460,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.save(data",{"_index":439,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.service.count",{"_index":408,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.countculturasbyrubro",{"_index":258,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.countfazendasbyestado",{"_index":411,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.create(body",{"_index":249,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findall",{"_index":250,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findbyfazendaid(fazendaid",{"_index":256,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.gettotalarea",{"_index":410,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.getusodosolodistribuicao(id",{"_index":413,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.remove(id",{"_index":263,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.update(body",{"_index":260,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["throw",{"_index":245,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["tipo",{"_index":383,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["todas",{"_index":371,"title":{},"body":{"controllers/FazendasController.html":{}}}],["todos",{"_index":484,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["total",{"_index":112,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["totalarea",{"_index":409,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["true",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{}}}],["type",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["typeof",{"_index":313,"title":{},"body":{"injectables/CulturasService.html":{}}}],["typeorm",{"_index":160,"title":{},"body":{"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["typeormmodule.forfeature([cultura",{"_index":270,"title":{},"body":{"modules/CulturasModule.html":{}}}],["typeormmodule.forfeature([fazenda",{"_index":422,"title":{},"body":{"modules/FazendasModule.html":{}}}],["typeormmodule.forfeature([produtor",{"_index":505,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["typeormmodule.forroot",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["técnica",{"_index":626,"title":{},"body":{"index.html":{}}}],["uf",{"_index":119,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ui",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":475,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":193,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":445,"title":{},"body":{"injectables/FazendasService.html":{}}}],["unique",{"_index":471,"title":{},"body":{"entities/Produtor.html":{}}}],["unitários",{"_index":631,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":189,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["unlicensed",{"_index":647,"title":{},"body":{"properties.html":{}}}],["up",{"_index":619,"title":{},"body":{"index.html":{}}}],["update",{"_index":177,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["update(@body",{"_index":259,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(body",{"_index":214,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(data",{"_index":291,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["username",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["uso",{"_index":606,"title":{},"body":{"index.html":{}}}],["usodosolo",{"_index":356,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(@param('id",{"_index":412,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(id",{"_index":380,"title":{},"body":{"controllers/FazendasController.html":{}}}],["utilizada",{"_index":73,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/CulturasService.html":{}}}],["uuid",{"_index":81,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uuidv4",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v20",{"_index":613,"title":{},"body":{"index.html":{}}}],["validator",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["validação",{"_index":592,"title":{},"body":{"index.html":{}}}],["value",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.length",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":649,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetación",{"_index":403,"title":{},"body":{"controllers/FazendasController.html":{}}}],["vegetação",{"_index":464,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["version",{"_index":644,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["válido",{"_index":135,"title":{},"body":{"classes/CreateProdutorDto.html":{},"miscellaneous/variables.html":{}}}],["várias",{"_index":600,"title":{},"body":{"index.html":{}}}],["y",{"_index":402,"title":{},"body":{"controllers/FazendasController.html":{}}}],["yarn",{"_index":614,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CulturasModule\n                        \n                        \n                            FazendasModule\n                        \n                        \n                            ProdutoresModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProdutoresModule } from './produtores/produtores.module';\nimport { FazendasModule } from './fazendas/fazendas.module';\nimport { CulturasModule } from './culturas/culturas.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST || 'localhost',\n      port: parseInt(process.env.DB_PORT ?? '5432', 10),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    ProdutoresModule,\n    FazendasModule,\n    CulturasModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCulturaDto.html":{"url":"classes/CreateCulturaDto.html","title":"class - CreateCulturaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCulturaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/dto/create-cultura.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área utilizada para a cultura (em hectares)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-da-fazenda', description: 'ID da fazenda relacionada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Soja', description: 'Nome do rubro cultivado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2024, description: 'Ano da safra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCulturaDto {\n  @ApiProperty({\n    example: 'uuid-da-fazenda',\n    description: 'ID da fazenda relacionada',\n  })\n  fazendaId: string;\n\n  @ApiProperty({ example: 'Soja', description: 'Nome do rubro cultivado' })\n  rubro: string;\n\n  @ApiProperty({\n    example: 50,\n    description: 'Área utilizada para a cultura (em hectares)',\n  })\n  area: number;\n\n  @ApiProperty({ example: 2024, description: 'Ano da safra' })\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFazendaDto.html":{"url":"classes/CreateFazendaDto.html","title":"class - CreateFazendaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFazendaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/dto/create-fazenda.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, description: 'Área total da fazenda em hectares'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que não pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Chapecó', description: 'Cidade da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'SC', description: 'Estado (UF)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Fazenda Boa Esperança', description: 'Nome da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-do-produtor', description: 'ID do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateFazendaDto {\n  @ApiProperty({ example: 'uuid-do-produtor', description: 'ID do produtor' })\n  produtorId: string;\n\n  @ApiProperty({\n    example: 'Fazenda Boa Esperança',\n    description: 'Nome da fazenda',\n  })\n  nome: string;\n\n  @ApiProperty({ example: 'Chapecó', description: 'Cidade da fazenda' })\n  cidade: string;\n\n  @ApiProperty({ example: 'SC', description: 'Estado (UF)' })\n  estado: string;\n\n  @ApiProperty({\n    example: 100,\n    description: 'Área total da fazenda em hectares',\n  })\n  areaTotal: number;\n\n  @ApiProperty({ example: 50, description: 'Área que pode ser semeada' })\n  areaAgricultavel: number;\n\n  @ApiProperty({ example: 50, description: 'Área que não pode ser semeada' })\n  areaVegetacao: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProdutorDto.html":{"url":"classes/CreateProdutorDto.html","title":"class - CreateProdutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProdutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/dto/create-produtor.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploCpf, description: 'CPF ou CNPJ válido do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploNome, description: 'Nome completo do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exemploCpf, exemploNome } from './data-generator';\n\nexport class CreateProdutorDto {\n  @ApiProperty({\n    example: exemploCpf,\n    description: 'CPF ou CNPJ válido do produtor',\n  })\n  identidade: string;\n\n  @ApiProperty({\n    example: exemploNome,\n    description: 'Nome completo do produtor',\n  })\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cultura.html":{"url":"entities/Cultura.html","title":"entity - Cultura","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cultura\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                    \n                                fazenda\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fazenda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fazenda\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, fazenda => fazenda.culturas, {eager: false})@JoinColumn({name: 'fazendaId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Entity()\nexport class Cultura {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  fazendaId: string;\n\n  @ManyToOne(() => Fazenda, (fazenda) => fazenda.culturas, { eager: false })\n  @JoinColumn({ name: 'fazendaId' })\n  fazenda: Fazenda;\n\n  @Column()\n  rubro: string;\n\n  @Column()\n  area: number;\n\n  @Column()\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CulturasController.html":{"url":"controllers/CulturasController.html","title":"controller - CulturasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CulturasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                culturas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                countByRubro\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findByFazenda\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByRubro()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-rubro')@ApiOperation({summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar culturas'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findByFazenda\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByFazenda(fazendaId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/fazenda')@ApiOperation({summary: 'Listar culturas de uma fazenda'})@ApiQuery({name: 'fazendaId', required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Remover uma cultura'})@ApiParam({name: 'id', required: true, description: 'ID da cultura a ser removida'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  Query,\n  Param,\n  BadRequestException,\n} from '@nestjs/common';\nimport { CulturasService } from './culturas.service';\nimport { culturaSchema } from './dto/culturas.dto';\nimport { CreateCulturaDto } from './dto/create-cultura.dto';\nimport {\n  ApiTags,\n  ApiBody,\n  ApiQuery,\n  ApiParam,\n  ApiOperation,\n} from '@nestjs/swagger';\n\n@ApiTags('Culturas')\n@Controller('culturas')\nexport class CulturasController {\n  constructor(private readonly service: CulturasService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async create(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar culturas' })\n  async findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('/fazenda')\n  @ApiOperation({ summary: 'Listar culturas de uma fazenda' })\n  @ApiQuery({ name: 'fazendaId', required: true })\n  async findByFazenda(@Query('fazendaId') fazendaId: string) {\n    if (!fazendaId) {\n      throw new BadRequestException('O parâmetro fazendaId é obrigatório.');\n    }\n    return this.service.findByFazendaId(fazendaId);\n  }\n\n  @Get('/count-by-rubro')\n  @ApiOperation({\n    summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)',\n  })\n  async countByRubro() {\n    const data = await this.service.countCulturasByRubro();\n    return data;\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async update(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Remover uma cultura' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'ID da cultura a ser removida',\n  })\n  async remove(@Param('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O parâmetro id é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CulturasModule.html":{"url":"modules/CulturasModule.html","title":"module - CulturasModule","body":"\n                   \n\n\n\n\n    Modules\n    CulturasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_CulturasModule_exports\n\n\n\n\nCulturasService \n\nCulturasService \n\n\n\nCulturasModule\n\nCulturasModule\n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/culturas/culturas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CulturasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Cultura } from './culturas.entity';\nimport { CulturasService } from './culturas.service';\nimport { CulturasController } from './culturas.controller';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Cultura, Fazenda])],\n  providers: [CulturasService],\n  controllers: [CulturasController],\n  exports: [CulturasService],\n})\nexport class CulturasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CulturasService.html":{"url":"injectables/CulturasService.html","title":"injectable - CulturasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CulturasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countCulturasByRubro\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByFazendaId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(culturaRepository: Repository, fazendaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/culturas/culturas.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        culturaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fazendaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countCulturasByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countCulturasByRubro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByFazendaId\n                        \n                    \n                \n            \n            \n                \nfindByFazendaId(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Cultura } from './culturas.entity';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Injectable()\nexport class CulturasService {\n  constructor(\n    @InjectRepository(Cultura)\n    private culturaRepository: Repository,\n\n    @InjectRepository(Fazenda)\n    private fazendaRepository: Repository,\n  ) {}\n\n  async create(data: Partial) {\n    const fazenda = await this.fazendaRepository.findOne({\n      where: { id: data.fazendaId },\n      relations: ['culturas'],\n    });\n\n    if (!fazenda) {\n      throw new BadRequestException('Fazenda não encontrada');\n    }\n\n    const culturasExistentes = await this.culturaRepository.find({\n      where: { fazenda: { id: data.fazendaId } },\n    });\n\n    const areaOcupadaNaSafra = culturasExistentes\n      .filter((c) => c.fazendaId === data.fazendaId && c.safra === data.safra)\n      .reduce((total, c) => total + c.area, 0);\n\n    if (typeof data.area !== 'number') {\n      throw new BadRequestException('Área da cultura deve ser informada');\n    }\n\n    if (areaOcupadaNaSafra + data.area > fazenda.areaTotal) {\n      throw new BadRequestException(\n        `Área total da fazenda (${fazenda.areaTotal}) excedida: área já utilizada (${areaOcupadaNaSafra}), nova cultura excede limite.`,\n      );\n    }\n\n    const cultura = this.culturaRepository.create({\n      ...data,\n      fazenda: fazenda,\n    });\n\n    return this.culturaRepository.save(cultura);\n  }\n\n  findAll() {\n    return this.culturaRepository.find();\n  }\n\n  findByFazendaId(fazendaId: string) {\n    return this.culturaRepository.find({\n      where: { fazenda: { id: fazendaId } },\n    });\n  }\n\n  update(data: Partial) {\n    return this.culturaRepository.save(data);\n  }\n\n  async remove(id: string) {\n    await this.culturaRepository.delete({ id });\n    return { deleted: true };\n  }\n\n  async countCulturasByRubro(): Promise {\n    return this.culturaRepository\n      .createQueryBuilder('cultura')\n      .select('cultura.rubro', 'rubro')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('cultura.rubro')\n      .getRawMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Fazenda.html":{"url":"entities/Fazenda.html","title":"entity - Fazenda","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Fazenda\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                culturas\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                produtor\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        culturas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cultura[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cultura => cultura.fazenda)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        produtor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Produtor\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: false})@JoinColumn({name: 'produtorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { Produtor } from '../produtores/produtores.entity';\nimport { Cultura } from '../culturas/culturas.entity';\n\n@Entity()\nexport class Fazenda {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  produtorId: string;\n\n  @ManyToOne(() => Produtor, { eager: false })\n  @JoinColumn({ name: 'produtorId' })\n  produtor: Produtor;\n\n  @Column()\n  nome: string;\n\n  @Column()\n  cidade: string;\n\n  @Column()\n  estado: string;\n\n  @Column()\n  areaTotal: number;\n\n  @Column()\n  areaAgricultavel: number;\n\n  @Column()\n  areaVegetacao: number;\n\n  @OneToMany(() => Cultura, (cultura) => cultura.fazenda)\n  culturas: Cultura[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FazendasController.html":{"url":"controllers/FazendasController.html","title":"controller - FazendasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FazendasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fazendas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Async\n                                countByEstado\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    Async\n                                usoDoSolo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Retorna a quantidade de fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByEstado()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-estado')@ApiOperation({summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova fazenda'})@ApiBody({type: CreateFazendaDto})@ApiResponse({status: 201, description: 'Fazenda criada com sucesso'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/total-area')@ApiOperation({summary: 'Retorna a área total registrada'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover uma fazenda'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma fazenda'})@ApiBody({type: CreateFazendaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        usoDoSolo\n                        \n                    \n                \n            \n            \n                \n                        \n                    usoDoSolo(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/uso-do-solo')@ApiOperation({summary: 'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n  Param,\n} from '@nestjs/common';\nimport { FazendasService } from './fazendas.service';\nimport { fazendaSchema } from './dto/fazendas.dto';\nimport { CreateFazendaDto } from './dto/create-fazenda.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Fazendas')\n@Controller('fazendas')\nexport class FazendasController {\n  constructor(private readonly service: FazendasService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  @ApiResponse({ status: 201, description: 'Fazenda criada com sucesso' })\n  async create(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    if (body.areaAgricultavel + body.areaVegetacao !== body.areaTotal) {\n      throw new BadRequestException(\n        'La suma de área agricultable y vegetación debe ser igual al área total',\n      );\n    }\n\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todas as fazendas' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: 'Retorna a quantidade de fazendas' })\n  async count() {\n    return this.service.count();\n  }\n\n  @Get('/total-area')\n  @ApiOperation({ summary: 'Retorna a área total registrada' })\n  async getTotalArea() {\n    return { totalArea: await this.service.getTotalArea() };\n  }\n\n  @Get('/count-by-estado')\n  @ApiOperation({\n    summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)',\n  })\n  async countByEstado() {\n    const data = await this.service.countFazendasByEstado();\n    return data;\n  }\n\n  @Get(':id/uso-do-solo')\n  @ApiOperation({\n    summary:\n      'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)',\n  })\n  async usoDoSolo(@Param('id') id: string) {\n    return this.service.getUsoDoSoloDistribuicao(id);\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  async update(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover uma fazenda' })\n  async remove(@Body('id') id: string) {\n    if (!id) throw new BadRequestException('O campo id é obrigatório');\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FazendasModule.html":{"url":"modules/FazendasModule.html","title":"module - FazendasModule","body":"\n                   \n\n\n\n\n    Modules\n    FazendasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\n\nFazendasService \n\nFazendasService \n\n\n\nFazendasModule\n\nFazendasModule\n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fazendas/fazendas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FazendasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Fazenda } from './fazendas.entity';\nimport { FazendasService } from './fazendas.service';\nimport { FazendasController } from './fazendas.controller';\nimport { Produtor } from '../produtores/produtores.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Fazenda, Produtor])],\n  providers: [FazendasService],\n  controllers: [FazendasController],\n  exports: [FazendasService, TypeOrmModule],\n})\nexport class FazendasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FazendasService.html":{"url":"injectables/FazendasService.html","title":"injectable - FazendasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FazendasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                countFazendasByEstado\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    Async\n                                getUsoDoSoloDistribuicao\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/fazendas/fazendas.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countFazendasByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countFazendasByEstado()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsoDoSoloDistribuicao\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsoDoSoloDistribuicao(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Fazenda } from './fazendas.entity';\n\n@Injectable()\nexport class FazendasService {\n  constructor(\n    @InjectRepository(Fazenda)\n    private readonly repo: Repository,\n  ) {}\n\n  create(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  async update(data: Partial) {\n    const areaAgricultavel = data.areaAgricultavel ?? 0;\n    const areaVegetacao = data.areaVegetacao ?? 0;\n    const soma = areaAgricultavel + areaVegetacao;\n    if (data.areaTotal !== undefined && soma > data.areaTotal) {\n      throw new BadRequestException('Soma das áreas inválida');\n    }\n\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n\n  async count(): Promise {\n    return this.repo.count();\n  }\n\n  async getTotalArea(): Promise {\n    const result = await this.repo\n      .createQueryBuilder('fazenda')\n      .select('SUM(fazenda.areaTotal)', 'totalArea')\n      .getRawOne();\n\n    return Number(result?.totalArea) || 0;\n  }\n\n  async countFazendasByEstado(): Promise {\n    return this.repo\n      .createQueryBuilder('fazenda')\n      .select('fazenda.estado', 'estado')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('fazenda.estado')\n      .getRawMany();\n  }\n\n  async getUsoDoSoloDistribuicao(fazendaId: string) {\n    const fazenda = await this.repo.findOneBy({ id: fazendaId });\n\n    if (!fazenda) {\n      throw new NotFoundException('Fazenda não encontrada');\n    }\n\n    return [\n      { tipo: 'Agricultável', area: fazenda.areaAgricultavel },\n      { tipo: 'Vegetação', area: fazenda.areaVegetacao },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Produtor.html":{"url":"entities/Produtor.html","title":"entity - Produtor","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Produtor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Produtor {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  identidade: string;\n\n  @Column()\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProdutoresController.html":{"url":"controllers/ProdutoresController.html","title":"controller - ProdutoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProdutoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                produtores\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateProdutorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um novo produtor'})@ApiResponse({status: 201, description: 'Produtor criado com sucesso'})@ApiResponse({status: 400, description: 'Dados inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateProdutorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtores'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover um produtor'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar um produtor existente'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ProdutoresService } from './produtores.service';\nimport { produtorSchema } from './dto/produtores.dto';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { CreateProdutorDto } from './dto/create-produtor.dto';\n\n@ApiTags('produtores')\n@Controller('produtores')\nexport class ProdutoresController {\n  constructor(private readonly service: ProdutoresService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar um novo produtor' })\n  @ApiResponse({ status: 201, description: 'Produtor criado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  async create(@Body() body: CreateProdutorDto) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todos os produtores' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar um produtor existente' })\n  async update(@Body() body: any /* : CreateProdutorDto */) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover um produtor' })\n  async remove(@Body('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O campo \"id\" é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProdutoresModule.html":{"url":"modules/ProdutoresModule.html","title":"module - ProdutoresModule","body":"\n                   \n\n\n\n\n    Modules\n    ProdutoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nProdutoresService \n\nProdutoresService \n\n\n\nProdutoresModule\n\nProdutoresModule\n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/produtores/produtores.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProdutoresController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Produtor } from './produtores.entity';\nimport { ProdutoresService } from './produtores.service';\nimport { ProdutoresController } from './produtores.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Produtor])],\n  providers: [ProdutoresService],\n  controllers: [ProdutoresController],\n  exports: [ProdutoresService, TypeOrmModule],\n})\nexport class ProdutoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProdutoresService.html":{"url":"injectables/ProdutoresService.html","title":"injectable - ProdutoresService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProdutoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/produtores/produtores.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Produtor } from './produtores.entity';\n\n@Injectable()\nexport class ProdutoresService {\n  constructor(\n    @InjectRepository(Produtor)\n    private readonly repo: Repository,\n  ) {}\n\n  async create(data: Partial) {\n    const existe = await this.repo.findOne({\n      where: { identidade: data.identidade },\n    });\n    if (existe) {\n      throw new BadRequestException(\n        'CPF/CNPJ já está cadastrado para outro produtor.',\n      );\n    }\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  update(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        generate-readme.ts\n            \n            function\n            generateReadme\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.controller.ts\n            \n            controller\n            CulturasController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/culturas/culturas.entity.ts\n            \n            entity\n            Cultura\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.service.ts\n            \n            injectable\n            CulturasService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/culturas/dto/create-cultura.dto.ts\n            \n            class\n            CreateCulturaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/culturas/dto/culturas.dto.ts\n            \n            variable\n            culturaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/dto/create-fazenda.dto.ts\n            \n            class\n            CreateFazendaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/fazendas/dto/fazendas.dto.ts\n            \n            variable\n            fazendaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.controller.ts\n            \n            controller\n            FazendasController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.entity.ts\n            \n            entity\n            Fazenda\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.service.ts\n            \n            injectable\n            FazendasService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/dto/create-produtor.dto.ts\n            \n            class\n            CreateProdutorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateRandomName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploNome\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/produtores.dto.ts\n            \n            variable\n            produtorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.controller.ts\n            \n            controller\n            ProdutoresController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/produtores/produtores.entity.ts\n            \n            entity\n            Produtor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.service.ts\n            \n            injectable\n            ProdutoresService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            cpf-cnpj-validator : ^1.0.3\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.24\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            generateRandomName   (src/.../data-generator.ts)\n                        \n                        \n                            generateReadme   (generate-readme.ts)\n                        \n                        \n                            generateValidCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            generateValidCpf   (src/.../data-generator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateRandomName\n                        \n                    \n                \n            \n            \n                \ngenerateRandomName()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCnpj\n                        \n                    \n                \n            \n            \n                \ngenerateValidCnpj()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCpf\n                        \n                    \n                \n            \n            \n                \ngenerateValidCpf()\n                \n            \n\n\n\n\n        \n    \n    generate-readme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateReadme\n                        \n                    \n                \n            \n            \n                \ngenerateReadme()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n🧑‍🌾 Produtores API\n\n\n  API RESTful construída com NestJS, TypeORM e PostgreSQL para gerenciamento de produtores rurais, fazendas e culturas agrícolas.\n\n\n\n  \n  \n  \n  \n\n\n\n📦 Funcionalidades\n\nCadastro, edição e exclusão de produtores rurais.\nValidação automática de CPF e CNPJ.\nControle de áreas:\nA soma das áreas agricultável e de vegetação não pode exceder a área total da fazenda.\n\n\nRegistro de múltiplas culturas por fazenda.\nRelacionamento:\nUm produtor pode ter várias fazendas.\nUma fazenda pode ter várias culturas por safra.\n\n\n\n📊 Dashboard\n\nTotal de fazendas cadastradas.\nTotal de hectares registrados.\nGráficos de pizza por:\nEstado.\nCultura plantada.\nUso do solo (agricultável e vegetação).\n\n\n\n\n🚀 Executando o Projeto Localmente\nPré-requisitos\n\nNode.js v20+\nYarn\nDocker\n\nInstalação\nExample :yarn installSubir com Docker\nExample :docker compose up --buildA aplicação será acessível em:\n\nAPI: http://localhost:3000\nDocumentação Swagger: http://localhost:3000/api\nDocumentação técnica (Compodoc): http://localhost:8080\n\nRodando Testes\nExample :# Testes unitários\nyarn test\n\n# Testes de integração\nyarn test:e2e\n\n# Cobertura\nyarn test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CulturasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FazendasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProdutoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_exports\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nCulturasService \n\nCulturasService \n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nFazendasService \n\nFazendasService \n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\nProdutoresService \n\nProdutoresService \n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            culturaSchema   (src/.../culturas.dto.ts)\n                        \n                        \n                            exemploCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            exemploCpf   (src/.../data-generator.ts)\n                        \n                        \n                            exemploNome   (src/.../data-generator.ts)\n                        \n                        \n                            fazendaSchema   (src/.../fazendas.dto.ts)\n                        \n                        \n                            produtorSchema   (src/.../produtores.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/culturas/dto/culturas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        culturaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  fazendaId: Joi.string().uuid({ version: 'uuidv4' }).required().messages({\n    'string.empty': 'O campo fazendaId é obrigatório.',\n    'string.uuid': 'O fazendaId deve ser um UUID válido.',\n  }),\n\n  rubro: Joi.string().trim().min(2).required().messages({\n    'string.empty': 'O campo rubro é obrigatório.',\n    'string.min': 'O rubro deve ter no mínimo 2 caracteres.',\n  }),\n\n  area: Joi.number().positive().required().messages({\n    'number.base': 'A área deve ser um número.',\n    'number.positive': 'A área deve ser um número positivo.',\n    'any.required': 'O campo área é obrigatório.',\n  }),\n\n  safra: Joi.number().integer().min(1900).max(2100).required().messages({\n    'number.base': 'A safra deve ser um número.',\n    'number.integer': 'A safra deve ser um número inteiro.',\n    'number.min': 'A safra deve ser maior ou igual a 1900.',\n    'number.max': 'A safra deve ser menor ou igual a 2100.',\n    'any.required': 'O campo safra é obrigatório.',\n  }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exemploCnpj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCnpj()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploCpf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCpf()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploNome\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateRandomName()\n                    \n                \n\n\n        \n    \n\n    src/fazendas/dto/fazendas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fazendaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  produtorId: Joi.string().uuid().required().messages({\n    'string.base': 'O campo produtorId deve ser uma string',\n    'string.empty': 'O campo produtorId é obrigatório',\n    'string.uuid': 'O campo produtorId deve ser um UUID válido',\n    'any.required': 'O campo produtorId é obrigatório',\n  }),\n  nome: Joi.string().min(3).required().messages({\n    'string.empty': 'O campo nome é obrigatório',\n    'string.min': 'O campo nome deve ter pelo menos {#limit} caracteres',\n  }),\n  cidade: Joi.string().required().messages({\n    'string.empty': 'O campo cidade é obrigatório',\n  }),\n  estado: Joi.string().length(2).uppercase().required().messages({\n    'string.empty': 'O campo estado é obrigatório',\n    'string.length': 'O campo estado deve conter exatamente 2 letras',\n    'string.uppercase': 'O campo estado deve estar em letras maiúsculas',\n  }),\n  areaTotal: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaTotal deve ser um número',\n    'number.integer': 'O campo areaTotal deve ser um número inteiro',\n    'number.positive': 'O campo areaTotal deve ser maior que 0',\n    'any.required': 'O campo areaTotal é obrigatório',\n  }),\n\n  areaAgricultavel: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaAgricultavel deve ser um número',\n    'number.integer': 'O campo areaAgricultavel deve ser um número inteiro',\n    'number.positive': 'O campo areaAgricultavel deve ser maior que 0',\n    'any.required': 'O campo areaAgricultavel é obrigatório',\n  }),\n  areaVegetacao: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaVegetacao deve ser um número',\n    'number.integer': 'O campo areaVegetacao deve ser um número inteiro',\n    'number.positive': 'O campo areaVegetacao deve ser maior que 0',\n    'any.required': 'O campo areaVegetacao é obrigatório',\n  }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/produtores.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        produtorSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  identidade: Joi.string()\n    .required()\n    .custom((value, helpers) => {\n      if (value.length \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
