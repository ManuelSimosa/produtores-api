var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.006,1,1.784]],["body/modules/AppModule.html",[0,1.664,1,3.481,2,1.44,3,1.44,4,1.812,5,1.812,6,1.44,7,1.812,8,1.812,9,2.755,10,2.755,11,2.922,12,0.043,13,2.922,14,2.922,15,2.347,16,1.812,17,1.612,18,0.497,19,0.497,20,0.427,21,3.366,22,2.658,23,0.783,24,0.929,25,2.052,26,1.291,27,3.366,28,3.366,29,3.366,30,3.366,31,0.652,32,4.837,33,3.366,34,3.366,35,3.366,36,3.366,37,3.366,38,4.361,39,3.366,40,3.366,41,2.088,42,3.366,43,0.497,44,0.237,45,0.031,46,0.031]],["title/classes/CreateCulturaDto.html",[44,0.206,47,1.784]],["body/classes/CreateCulturaDto.html",[12,0.042,18,0.449,19,0.449,20,0.385,23,0.449,31,0.952,43,0.449,44,0.214,45,0.029,46,0.029,47,2.485,48,1.853,49,4.196,50,2.488,51,0.517,52,1.564,53,2.476,54,2.203,55,2.759,56,3.125,57,2.646,58,1.691,59,3.436,60,3.337,61,2.101,62,1.952,63,3.337,64,2.85,65,1.402,66,2.85,67,2.85,68,1.211,69,3.04,70,1.077,71,2.485,72,2.841,73,1.077,74,1.126,75,4.078,76,3.04,77,4.078,78,2.195,79,4.078,80,3.04,81,4.078,82,4.078,83,3.04,84,3.583,85,1.301,86,2.997]],["title/classes/CreateFazendaDto.html",[44,0.206,87,1.784]],["body/classes/CreateFazendaDto.html",[12,0.042,18,0.37,19,0.37,20,0.318,23,0.37,31,0.99,43,0.37,44,0.177,45,0.026,46,0.026,48,1.527,51,0.426,52,1.368,57,2.675,58,1.759,59,3.574,60,3.704,61,2.148,62,2.38,66,2.492,67,2.492,68,1.26,70,1.145,71,2.174,72,2.675,73,1.145,74,0.984,78,2.574,84,3.654,85,1.072,86,3.117,87,2.174,88,4.279,89,2.05,90,2.531,91,2.902,92,2.531,93,3.342,94,2.29,95,2.902,96,3.162,97,3.704,98,2.435,99,4.525,100,2.505,101,3.566,102,2.174,103,2.505,104,2.174,105,2.505,106,3.566,107,2.505,108,3.566,109,3.566,110,2.505,111,3.566,112,3.566,113,2.505,114,1.249,115,2.505]],["title/classes/CreateProdutorDto.html",[44,0.206,116,1.784]],["body/classes/CreateProdutorDto.html",[12,0.042,18,0.519,19,0.519,20,0.446,23,0.662,31,0.868,43,0.519,44,0.248,45,0.032,46,0.032,48,2.142,51,0.597,52,1.719,58,1.542,59,3.133,61,1.994,68,1.105,70,1.139,78,2.413,84,3.45,85,1.504,86,2.733,114,1.435,116,2.733,117,4.041,118,2.876,119,3.009,120,4.041,121,3.45,122,3.133,123,3.133,124,3.133,125,3.669,126,3.515,127,3.45,128,4.483,129,3.515,130,1.683,131,3.515]],["title/entities/Cultura.html",[65,1.006,132,1.252]],["body/entities/Cultura.html",[12,0.043,18,0.461,19,0.461,20,0.396,23,0.613,31,1.03,43,0.461,44,0.22,45,0.03,46,0.03,51,0.53,52,1.591,53,2.508,54,2.476,55,2.508,56,2.841,57,2.673,58,1.829,65,1.427,68,1.31,70,1.165,73,1.222,74,1.286,132,1.775,133,1.902,134,2.553,135,3.899,136,3.12,137,2.553,138,4.149,139,3.395,140,2.553,141,3.12,142,3.12,143,2.899,144,3.12,145,3.12,146,3.12,147,2.18,148,3.395,149,3.395,150,1.196,151,2.18,152,2.553,153,1.196]],["title/controllers/CulturasController.html",[154,1.252,155,1.784]],["body/controllers/CulturasController.html",[12,0.043,18,0.279,19,0.279,20,0.239,23,0.628,24,0.521,31,0.868,41,1.888,43,0.279,44,0.133,45,0.021,46,0.021,47,3.125,51,0.321,54,2.148,55,1.016,58,1.543,61,1.109,65,1.462,68,1.105,70,0.982,72,1.557,73,0.413,74,1.33,85,0.808,98,1.557,130,1.385,153,1.72,154,0.808,155,1.763,156,0.808,157,1.545,158,1.319,159,2.846,160,1.385,161,2.63,162,3.943,163,1.385,164,1.888,165,2.893,166,1.385,167,1.385,168,2.368,169,1.888,170,2.368,171,1.763,172,2.368,173,3.135,174,2.368,175,2.368,176,2.022,177,1.888,178,2.148,179,2.148,180,1.319,181,1.319,182,2.022,183,2.936,184,2.022,185,2.893,186,1.888,187,1.888,188,1.888,189,2.971,190,1.319,191,2.755,192,1.888,193,1.888,194,1.888,195,1.888,196,3.227,197,1.888,198,0.904,199,1.888,200,2.022,201,1.888,202,2.893,203,1.888,204,1.319,205,1.319,206,2.022,207,1.888,208,1.319,209,2.022,210,2.022,211,1.888,212,1.545,213,0.904,214,1.385,215,1.545,216,1.319,217,1.888,218,1.319,219,1.888,220,1.319,221,2.879,222,2.893,223,2.893,224,3.263,225,1.888,226,1.888,227,1.319,228,1.016,229,1.319,230,3.135,231,1.319,232,1.684,233,2.755,234,2.893,235,1.888,236,1.687,237,2.368,238,2.148,239,1.319,240,1.319,241,1.888,242,1.888,243,2.022,244,2.893,245,1.763,246,1.888,247,1.016,248,1.888,249,1.319,250,1.319,251,1.888,252,1.888,253,1.319]],["title/modules/CulturasModule.html",[0,1.006,11,1.575]],["body/modules/CulturasModule.html",[0,1.691,2,1.491,3,1.491,4,1.875,5,1.875,6,1.491,7,2.646,8,2.646,11,2.998,12,0.043,15,2.399,16,1.875,17,1.668,18,0.515,19,0.515,20,0.442,22,2.123,23,0.809,24,0.962,25,2.123,26,1.336,43,0.515,44,0.246,45,0.032,46,0.032,65,1.198,73,0.976,151,2.435,155,2.997,156,1.908,214,2.783,215,2.851,254,2.851,255,2.851,256,2.851,257,3.484,258,2.851,259,3.484,260,3.484]],["title/injectables/CulturasService.html",[214,1.401,261,1.252]],["body/injectables/CulturasService.html",[12,0.043,18,0.31,19,0.31,20,0.266,23,0.658,24,0.58,26,0.805,31,0.862,41,1.005,43,0.31,44,0.148,45,0.023,46,0.023,51,0.357,54,1.501,55,1.13,57,1.13,62,1.501,63,1.719,65,1.432,68,1.193,70,1.023,72,1.688,73,1.09,74,1.229,98,1.13,102,1.911,104,1.28,130,1.797,150,0.805,151,1.467,153,1.708,159,1.28,160,1.501,161,2.436,163,1.501,164,1.993,166,1.501,167,1.501,178,2.237,179,1.501,184,1.467,187,2.133,188,2.133,198,1.501,213,1.501,214,1.501,232,1.993,235,1.797,236,1.606,238,2.237,247,2.02,258,1.719,261,1.342,262,1.28,263,1.719,264,4.163,265,3.136,266,2.191,267,2.1,268,3.384,269,3.753,270,2.1,271,3.136,272,2.1,273,2.566,274,2.191,275,3.265,276,2.1,277,2.1,278,3.136,279,2.1,280,2.1,281,2.191,282,2.1,283,1.467,284,2.1,285,2.191,286,1.719,287,2.1,288,3.753,289,2.1,290,2.1,291,1.719,292,3.136,293,3.753,294,3.753,295,2.1,296,2.1,297,2.1,298,2.1,299,2.1,300,2.1,301,2.1,302,1.13,303,2.1,304,3.136,305,2.1,306,1.719,307,2.1,308,3.136,309,2.1,310,1.719,311,2.1,312,2.1,313,2.1,314,2.1,315,2.1,316,2.1,317,1.467,318,2.1,319,2.1,320,2.1,321,1.719,322,1.467,323,2.1,324,1.719]],["title/entities/Fazenda.html",[73,0.641,132,1.252]],["body/entities/Fazenda.html",[12,0.043,18,0.398,19,0.398,20,0.342,23,0.639,31,1.061,43,0.398,44,0.19,45,0.027,46,0.027,51,0.458,52,1.441,57,2.74,58,1.885,65,1.751,68,1.35,70,1.2,73,0.823,74,1.193,78,2.327,90,2.635,91,3.021,92,2.635,93,3.021,94,2.07,95,3.436,114,1.442,132,1.608,133,1.644,135,3.982,137,2.207,139,3.075,140,2.207,143,2.626,147,1.885,148,3.075,149,3.075,150,1.034,152,2.207,153,1.034,159,2.635,325,2.207,326,2.697,327,2.697,328,2.697,329,2.697,330,2.697,331,3.757,332,2.697,333,2.697,334,2.697,335,2.697,336,2.697,337,2.697,338,3.757,339,2.207,340,2.697]],["title/controllers/FazendasController.html",[154,1.252,341,1.784]],["body/controllers/FazendasController.html",[12,0.043,18,0.247,19,0.247,20,0.212,23,0.594,24,0.463,31,0.827,43,0.247,44,0.118,45,0.019,46,0.019,51,0.285,53,1.755,58,1.592,61,1.011,62,1.771,68,1.141,70,0.936,73,1.068,74,1.179,85,0.717,87,2.972,94,0.802,98,0.902,102,1.988,130,1.263,153,1.418,154,0.717,156,0.717,158,1.171,160,1.263,161,2.627,163,1.263,164,1.771,166,1.263,167,1.263,168,2.159,170,3.79,171,1.608,172,2.159,173,3.667,175,3.027,176,2.585,178,2.217,179,2.14,180,1.171,181,1.171,182,1.843,183,2.604,184,1.843,187,1.771,188,1.771,189,2.811,190,1.171,191,1.843,198,0.802,200,1.843,204,1.171,205,1.171,206,1.843,208,1.843,209,1.843,210,1.843,212,1.371,213,0.802,218,1.171,220,1.171,221,2.669,224,3.329,227,1.171,228,0.902,229,1.171,230,3.236,231,1.171,232,1.562,233,2.585,235,1.771,236,1.583,237,2.159,238,2.217,239,1.171,240,1.171,243,1.171,245,1.021,247,1.419,249,1.171,250,1.171,253,1.171,322,2.585,341,1.608,342,1.371,343,3.292,344,3.699,345,3.027,346,2.637,347,1.676,348,3.027,349,1.676,350,1.676,351,3.027,352,2.637,353,1.676,354,2.637,355,1.676,356,2.159,357,2.637,358,1.843,359,2.159,360,1.676,361,2.637,362,1.676,363,2.637,364,1.676,365,2.637,366,1.676,367,1.371,368,1.676,369,1.676,370,1.676,371,2.637,372,1.676,373,2.159,374,2.669,375,1.676,376,1.263,377,1.371,378,1.171,379,1.676,380,1.676,381,2.159,382,1.676,383,1.676,384,1.371,385,2.637,386,1.676,387,1.676,388,1.676,389,1.676,390,1.676,391,1.676,392,1.676,393,1.676,394,1.676,395,1.371,396,1.676,397,1.676,398,1.676,399,1.371,400,1.676,401,1.676,402,1.676,403,1.676,404,1.371,405,1.171]],["title/modules/FazendasModule.html",[0,1.006,13,1.575]],["body/modules/FazendasModule.html",[0,1.691,2,1.491,3,1.491,4,1.875,5,1.875,6,1.491,7,2.646,8,2.646,12,0.043,13,2.998,15,2.399,16,1.875,17,1.668,18,0.515,19,0.515,20,0.442,22,2.123,23,0.809,24,0.962,25,2.717,26,1.336,43,0.515,44,0.246,45,0.032,46,0.032,73,0.763,114,1.231,156,1.908,339,2.851,341,2.997,376,2.783,377,2.851,406,2.851,407,2.851,408,2.851,409,3.484,410,2.851,411,3.484,412,3.484]],["title/injectables/FazendasService.html",[261,1.252,376,1.401]],["body/injectables/FazendasService.html",[12,0.043,18,0.315,19,0.315,20,0.27,23,0.619,24,0.588,26,0.817,31,0.868,41,1.02,43,0.315,44,0.15,45,0.023,46,0.023,51,0.362,53,1.706,54,1.517,68,1.258,70,1.029,73,0.829,74,1.045,90,1.932,92,1.932,94,1.02,104,1.298,130,1.517,150,0.817,153,1.718,160,1.517,161,2.68,163,1.517,164,2.007,166,1.517,167,1.517,178,2.393,179,1.812,187,2.146,188,2.146,198,1.517,213,1.02,228,1.146,232,2.146,235,1.517,236,1.356,238,2.393,247,2.037,261,1.356,262,1.298,266,2.215,268,2.929,273,3.844,274,2.215,275,3.283,281,2.215,283,1.488,285,1.488,286,1.743,291,1.743,302,2.037,317,1.488,321,1.743,322,3.132,324,1.743,345,3.431,373,2.594,376,1.517,399,1.743,410,1.743,413,1.743,414,4.192,415,3.169,416,1.743,417,2.13,418,2.594,419,2.13,420,2.13,421,2.13,422,2.13,423,2.13,424,3.169,425,2.13,426,2.13,427,2.13,428,2.13,429,2.594,430,1.743,431,2.13,432,2.13,433,2.594,434,3.169,435,2.13,436,2.13,437,1.743,438,1.743,439,2.13,440,1.743,441,2.13,442,2.13,443,3.169,444,3.169,445,2.13,446,2.13,447,2.13,448,2.13,449,2.13,450,2.13,451,2.13,452,1.743,453,2.13,454,1.743,455,2.13]],["title/entities/Produtor.html",[114,0.808,132,1.252]],["body/entities/Produtor.html",[12,0.042,18,0.548,19,0.548,20,0.47,23,0.548,31,0.98,41,2.222,43,0.548,44,0.262,45,0.033,46,0.033,51,0.631,52,1.779,58,1.741,68,1.247,70,1.22,74,1.397,114,1.281,119,3.086,120,4.143,132,1.986,133,2.262,135,3.707,143,3.243,147,2.593,150,1.423,456,3.037,457,3.711,458,3.711,459,3.711,460,3.711,461,3.711]],["title/controllers/ProdutoresController.html",[154,1.252,462,1.784]],["body/controllers/ProdutoresController.html",[12,0.043,18,0.338,19,0.338,20,0.29,23,0.682,24,0.632,31,0.764,43,0.338,44,0.161,45,0.024,46,0.024,51,0.389,58,1.493,61,1.664,68,1.069,70,0.865,74,1.198,85,0.98,114,1.374,116,2.814,153,1.514,154,0.98,156,0.98,158,1.6,160,1.6,161,2.492,163,1.6,164,2.078,166,1.6,167,1.6,178,2.078,179,1.89,180,1.6,181,1.6,182,2.336,187,1.89,188,1.89,189,3.226,190,1.6,191,2.336,198,1.096,200,2.336,204,1.6,205,1.6,206,2.336,208,2.336,209,2.336,210,2.336,213,1.096,218,1.6,220,1.6,224,3.226,227,1.6,228,1.232,229,1.6,230,3.033,231,1.6,232,1.6,233,3.033,235,1.89,236,1.689,238,2.078,239,1.6,240,1.6,243,1.6,245,1.395,249,1.6,250,1.6,253,1.6,356,2.735,358,2.336,359,1.873,367,1.873,381,3.231,384,2.735,404,1.873,405,1.6,462,2.037,463,1.873,464,3.231,465,3.369,466,3.342,467,2.289,468,3.342,469,2.289,470,3.342,471,3.342,472,3.342,473,2.289,474,3.342,475,3.342,476,2.289,477,2.289,478,3.342,479,2.289,480,1.6,481,1.873,482,1.6,483,2.289,484,2.289,485,2.289,486,2.289,487,3.342,488,3.342]],["title/modules/ProdutoresModule.html",[0,1.006,14,1.575]],["body/modules/ProdutoresModule.html",[0,1.707,2,1.522,3,1.522,4,1.914,5,1.914,6,1.522,7,2.672,8,2.672,12,0.042,14,3.012,15,2.431,16,1.914,17,1.703,18,0.525,19,0.525,20,0.451,22,2.168,23,0.796,24,0.982,25,2.168,26,1.364,43,0.525,44,0.251,45,0.032,46,0.032,114,0.982,156,1.933,462,3.026,480,2.777,481,2.911,489,2.911,490,2.911,491,2.911,492,3.556,493,2.911,494,3.556,495,3.556,496,3.556]],["title/injectables/ProdutoresService.html",[261,1.252,480,1.401]],["body/injectables/ProdutoresService.html",[12,0.043,18,0.414,19,0.414,20,0.356,23,0.702,24,0.774,26,1.076,31,0.921,41,1.343,43,0.414,44,0.198,45,0.028,46,0.028,51,0.477,64,1.96,68,1.228,70,0.967,74,1.065,114,1.065,119,1.71,130,1.848,150,1.076,153,1.823,160,1.848,161,2.467,163,1.848,164,2.277,166,1.848,167,1.848,178,2.277,179,1.848,187,2.277,188,2.277,198,1.848,213,1.343,228,1.51,232,1.343,235,1.343,236,1.2,238,2.277,247,2.078,261,1.652,262,1.71,266,2.698,268,3.323,274,2.698,275,3.601,281,2.698,283,1.96,285,1.96,310,2.296,317,1.96,416,2.296,418,3.159,429,3.159,430,2.296,440,2.296,480,1.848,493,2.296,497,2.296,498,2.805,499,2.805,500,2.805,501,2.805,502,2.805,503,2.805,504,3.86,505,2.805,506,2.805,507,2.805,508,2.805,509,2.805,510,2.805]],["title/coverage.html",[511,2.777]],["body/coverage.html",[6,1.235,12,0.043,20,0.366,31,0.559,44,0.316,45,0.028,46,0.028,47,1.759,49,2.362,50,2.362,65,0.993,73,0.632,87,1.759,88,2.362,89,2.362,114,0.797,116,1.759,117,2.362,118,2.362,121,2.017,127,2.017,132,1.917,134,2.362,154,1.917,155,1.759,157,2.362,214,1.382,216,2.017,236,1.235,261,1.917,263,2.362,302,3.173,325,2.362,341,1.759,342,2.362,376,1.382,378,2.017,413,2.362,456,2.362,462,1.759,463,2.362,480,1.382,482,2.017,497,2.362,511,2.017,512,2.362,513,2.886,514,2.886,515,2.362,516,2.362,517,5.037,518,2.362,519,5.722,520,2.886,521,3.937,522,3.937,523,2.362,524,5.198,525,2.362,526,2.886,527,2.886,528,2.362,529,2.886,530,3.633,531,3.633,532,2.017,533,2.017,534,2.017,535,2.362,536,2.362,537,2.886,538,2.886,539,2.886]],["title/dependencies.html",[3,1.504,540,2.008]],["body/dependencies.html",[3,1.671,12,0.043,24,1.078,26,1.497,45,0.034,46,0.034,71,2.38,85,1.671,122,2.729,124,2.729,150,1.497,541,3.905,542,3.905,543,5.18,544,3.905,545,3.905,546,3.905,547,3.905,548,4.789,549,3.905,550,3.905,551,3.905,552,3.905,553,3.905,554,3.905,555,3.905,556,3.905,557,3.905,558,3.905,559,3.905,560,3.905,561,3.905,562,3.905,563,3.905,564,3.905]],["title/miscellaneous/functions.html",[565,1.495,566,2.876]],["body/miscellaneous/functions.html",[6,2.272,12,0.036,45,0.036,46,0.036,51,0.703,515,4.058,516,4.058,518,4.346,528,3.384,530,2.89,531,3.848,532,3.711,533,3.711,534,3.711,565,2.52,566,3.384,567,4.135,568,4.346]],["title/index.html",[51,0.417,569,2.454,570,2.454]],["body/index.html",[12,0.041,17,1.63,45,0.024,46,0.024,56,1.431,61,0.9,62,1.917,64,1.64,65,0.807,67,1.64,72,1.263,73,0.746,86,2.677,94,1.124,96,1.64,97,2.786,102,2.677,104,1.431,114,0.94,122,1.64,123,2.799,124,1.64,150,0.9,159,2.441,171,2.441,173,3.398,174,2.786,176,1.64,183,1.431,302,1.832,343,2.786,348,1.921,351,3.816,358,2.379,374,1.921,433,1.921,437,1.921,438,1.921,452,2.786,454,2.786,464,3.278,465,2.379,511,1.64,512,1.921,571,2.347,572,2.347,573,2.347,574,3.404,575,2.347,576,2.347,577,2.347,578,2.347,579,3.404,580,3.404,581,2.347,582,2.347,583,4.392,584,2.347,585,2.347,586,4.005,587,2.347,588,4.392,589,2.347,590,2.347,591,3.404,592,2.347,593,2.347,594,2.347,595,2.347,596,2.347,597,1.921,598,2.347,599,2.347,600,2.347,601,2.347,602,2.347,603,1.921,604,2.347,605,3.404,606,3.404,607,2.347,608,2.347,609,2.347,610,1.921,611,2.347,612,2.347,613,2.347,614,2.347,615,2.347,616,2.347,617,2.347,618,2.347,619,2.347,620,2.347,621,3.404,622,2.347,623,5.138,624,2.347,625,5.017,626,2.347,627,2.347,628,2.347,629,3.404,630,2.347,631,3.404,632,2.347,633,4.005,634,2.347,635,3.404,636,2.347,637,2.347,638,2.347,639,2.347,640,2.347,641,4.005,642,4.005,643,2.347,644,3.404,645,2.347,646,2.347,647,2.347,648,2.347,649,2.347,650,3.404,651,3.404,652,2.347,653,2.347,654,2.347,655,2.347,656,2.347,657,3.404,658,4.392,659,2.347,660,2.347,661,2.347,662,2.347,663,2.347,664,2.347,665,2.347,666,3.404,667,2.347,668,2.347,669,2.347,670,2.347,671,2.347,672,2.347,673,2.347,674,2.347,675,2.347,676,2.347,677,2.347,678,1.921,679,2.347,680,2.347,681,2.347]],["title/modules.html",[2,1.701]],["body/modules.html",[1,2.62,2,1.84,11,2.313,12,0.036,13,2.313,14,2.313,45,0.036,46,0.036,682,5.576,683,5.576,684,5.576,685,5.576]],["title/overview.html",[686,3.252]],["body/overview.html",[0,1.188,1,3.433,2,1.478,3,1.478,4,1.859,5,1.859,6,1.478,7,1.859,8,1.859,9,2.827,10,2.827,11,2.943,12,0.041,13,2.943,14,2.943,15,2.386,16,1.859,17,1.654,45,0.032,46,0.032,48,2.105,133,2.105,156,1.478,214,2.662,254,2.827,255,2.827,256,2.827,262,2.105,376,2.662,406,2.827,407,2.827,408,2.827,480,2.662,489,2.827,490,2.827,491,2.827,686,2.827,687,3.454,688,5.166]],["title/properties.html",[52,1.348,540,2.008]],["body/properties.html",[12,0.042,45,0.037,46,0.037,52,1.71,61,1.71,678,3.649,689,3.649,690,4.459,691,4.459,692,4.459]],["title/miscellaneous/variables.html",[565,1.495,693,2.876]],["body/miscellaneous/variables.html",[12,0.042,45,0.021,46,0.021,51,0.325,53,1.03,54,1.699,55,1.91,56,2.749,62,1.699,66,1.338,70,0.419,71,2.163,78,1.91,90,2.608,91,2.99,92,2.608,93,2.044,94,1.902,95,2.99,96,2.48,98,2.964,119,1.167,121,2.044,123,2.044,125,2.394,127,2.044,171,3.494,183,1.167,196,3.502,216,2.044,245,3.181,302,1.91,306,4.599,378,2.044,395,2.394,405,3.983,465,3.647,482,2.044,523,1.567,525,1.567,530,1.338,531,2.776,532,1.338,533,1.338,534,1.338,535,2.394,536,1.567,565,1.167,568,2.904,597,1.567,603,1.567,610,2.394,689,1.567,693,1.567,694,1.915,695,1.915,696,1.915,697,4.511,698,4.511,699,3.549,700,3.549,701,1.915,702,3.972,703,4.511,704,2.925,705,1.915,706,1.915,707,2.925,708,1.915,709,2.925,710,2.925,711,2.925,712,1.915,713,4.279,714,5.06,715,3.972,716,1.915,717,4.511,718,1.915,719,1.915,720,1.915,721,3.972,722,3.972,723,1.915,724,3.972,725,1.915,726,1.915,727,1.915,728,1.915,729,1.915,730,1.915,731,1.915,732,1.915,733,1.915,734,1.915,735,1.915,736,1.915,737,1.915,738,1.915,739,2.925,740,1.915,741,1.915,742,3.549,743,1.915,744,1.915,745,1.915]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":302,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":690,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":605,"title":{},"body":{"index.html":{}}}],["1.0.3",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":101,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["11.0.0",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["1900",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["201",{"_index":356,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["2024",{"_index":81,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["2100",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":688,"title":{},"body":{"overview.html":{}}}],["4",{"_index":687,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":470,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["5.0.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":60,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{}}}],["5432",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["addselect('count",{"_index":321,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["agricultable",{"_index":391,"title":{},"body":{"controllers/FazendasController.html":{}}}],["agricultável",{"_index":452,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["agrícolas",{"_index":589,"title":{},"body":{"index.html":{}}}],["al",{"_index":396,"title":{},"body":{"controllers/FazendasController.html":{}}}],["allowing",{"_index":673,"title":{},"body":{"index.html":{}}}],["ano",{"_index":82,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["any.required",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":580,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":221,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["apioperation",{"_index":224,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apiparam",{"_index":223,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiproperty",{"_index":84,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiproperty({example",{"_index":59,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiquery",{"_index":222,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiresponse",{"_index":381,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags",{"_index":220,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags('culturas",{"_index":225,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apitags('fazendas",{"_index":382,"title":{},"body":{"controllers/FazendasController.html":{}}}],["apitags('produtores",{"_index":485,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["application",{"_index":642,"title":{},"body":{"index.html":{}}}],["applications",{"_index":579,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":53,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["area')@apioperation({summary",{"_index":364,"title":{},"body":{"controllers/FazendasController.html":{}}}],["areaagricultavel",{"_index":90,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["areaocupadanasafra",{"_index":294,"title":{},"body":{"injectables/CulturasService.html":{}}}],["areatotal",{"_index":91,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["areavegetacao",{"_index":92,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["associado",{"_index":604,"title":{},"body":{"index.html":{}}}],["async",{"_index":161,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["atualizar",{"_index":206,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["author",{"_index":692,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":247,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["aws",{"_index":661,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":213,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["badrequestexception('cpf/cnpj",{"_index":507,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["badrequestexception('fazenda",{"_index":290,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception('la",{"_index":389,"title":{},"body":{"controllers/FazendasController.html":{}}}],["badrequestexception('o",{"_index":243,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["badrequestexception('soma",{"_index":436,"title":{},"body":{"injectables/FazendasService.html":{}}}],["badrequestexception('área",{"_index":305,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception(error.details[0].message",{"_index":488,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["badrequestexception(error.message",{"_index":237,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["based",{"_index":656,"title":{},"body":{"index.html":{}}}],["boa",{"_index":111,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["body",{"_index":189,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["body.areaagricultavel",{"_index":386,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areatotal",{"_index":388,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areavegetacao",{"_index":387,"title":{},"body":{"controllers/FazendasController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":685,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":682,"title":{},"body":{"modules.html":{}}}],["building",{"_index":574,"title":{},"body":{"index.html":{}}}],["c",{"_index":300,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.area",{"_index":301,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.fazendaid",{"_index":296,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.safra",{"_index":297,"title":{},"body":{"injectables/CulturasService.html":{}}}],["cadastradas",{"_index":613,"title":{},"body":{"index.html":{}}}],["cadastrado",{"_index":509,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["cadastro",{"_index":592,"title":{},"body":{"index.html":{}}}],["campo",{"_index":405,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["caracteres",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chapec",{"_index":106,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["check",{"_index":650,"title":{},"body":{"index.html":{}}}],["cidade",{"_index":93,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":44,"title":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["classes",{"_index":48,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"overview.html":{}}}],["clicks",{"_index":672,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":655,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_culturasmodule",{"_index":254,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_exports",{"_index":256,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_providers",{"_index":255,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule",{"_index":406,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_exports",{"_index":407,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_providers",{"_index":408,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule",{"_index":489,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_exports",{"_index":490,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_providers",{"_index":491,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cnpj",{"_index":124,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["column",{"_index":135,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["column({unique",{"_index":458,"title":{},"body":{"entities/Produtor.html":{}}}],["com",{"_index":358,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"index.html":{}}}],["completo",{"_index":128,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["const",{"_index":232,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["constructor",{"_index":266,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["constructor(culturarepository",{"_index":267,"title":{},"body":{"injectables/CulturasService.html":{}}}],["constructor(private",{"_index":227,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["constructor(repo",{"_index":416,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["construída",{"_index":582,"title":{},"body":{"index.html":{}}}],["conter",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":154,"title":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["controller('culturas",{"_index":226,"title":{},"body":{"controllers/CulturasController.html":{}}}],["controller('fazendas",{"_index":383,"title":{},"body":{"controllers/FazendasController.html":{}}}],["controller('produtores",{"_index":486,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["controllers",{"_index":156,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["count",{"_index":322,"title":{},"body":{"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["countbyestado",{"_index":344,"title":{},"body":{"controllers/FazendasController.html":{}}}],["countbyrubro",{"_index":162,"title":{},"body":{"controllers/CulturasController.html":{}}}],["countculturasbyrubro",{"_index":264,"title":{},"body":{"injectables/CulturasService.html":{}}}],["countfazendasbyestado",{"_index":414,"title":{},"body":{"injectables/FazendasService.html":{}}}],["coverage",{"_index":511,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":122,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["create",{"_index":163,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["create(@body",{"_index":231,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(body",{"_index":180,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(data",{"_index":274,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["createculturadto",{"_index":47,"title":{"classes/CreateCulturaDto.html":{}},"body":{"classes/CreateCulturaDto.html":{},"controllers/CulturasController.html":{},"coverage.html":{}}}],["createfazendadto",{"_index":87,"title":{"classes/CreateFazendaDto.html":{}},"body":{"classes/CreateFazendaDto.html":{},"controllers/FazendasController.html":{},"coverage.html":{}}}],["createfazendadto})@apiresponse({status",{"_index":355,"title":{},"body":{"controllers/FazendasController.html":{}}}],["createprodutordto",{"_index":116,"title":{"classes/CreateProdutorDto.html":{}},"body":{"classes/CreateProdutorDto.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["createquerybuilder('cultura",{"_index":319,"title":{},"body":{"injectables/CulturasService.html":{}}}],["createquerybuilder('fazenda",{"_index":444,"title":{},"body":{"injectables/FazendasService.html":{}}}],["criada",{"_index":357,"title":{},"body":{"controllers/FazendasController.html":{}}}],["criado",{"_index":468,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["criar",{"_index":182,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["cultivado",{"_index":79,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura",{"_index":65,"title":{"entities/Cultura.html":{}},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"coverage.html":{},"index.html":{}}}],["cultura'})@apibody({type",{"_index":185,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura'})@apiparam({name",{"_index":201,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto",{"_index":219,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto.ts",{"_index":50,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["cultura.dto.ts:11",{"_index":69,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:14",{"_index":83,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:5",{"_index":76,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:8",{"_index":80,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.fazenda",{"_index":331,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturarepository",{"_index":271,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturas",{"_index":159,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"index.html":{}}}],["culturas.controller",{"_index":259,"title":{},"body":{"modules/CulturasModule.html":{}}}],["culturas.entity",{"_index":258,"title":{},"body":{"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["culturas.service",{"_index":215,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{}}}],["culturas/culturas.entity",{"_index":340,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturas/culturas.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["culturaschema",{"_index":216,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["culturaschema.validate(body",{"_index":234,"title":{},"body":{"controllers/CulturasController.html":{}}}],["culturascontroller",{"_index":155,"title":{"controllers/CulturasController.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"coverage.html":{}}}],["culturasexistentes",{"_index":292,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturasmodule",{"_index":11,"title":{"modules/CulturasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules.html":{},"overview.html":{}}}],["culturasservice",{"_index":214,"title":{"injectables/CulturasService.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"coverage.html":{},"overview.html":{}}}],["custom((value",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":72,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"index.html":{}}}],["dados",{"_index":471,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["das",{"_index":437,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["dashboard",{"_index":612,"title":{},"body":{"index.html":{}}}],["data",{"_index":130,"title":{},"body":{"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["data.area",{"_index":304,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.areaagricultavel",{"_index":431,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areatotal",{"_index":434,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areavegetacao",{"_index":432,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.fazendaid",{"_index":288,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.identidade",{"_index":506,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["data.safra",{"_index":298,"title":{},"body":{"injectables/CulturasService.html":{}}}],["database",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":173,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["debe",{"_index":394,"title":{},"body":{"controllers/FazendasController.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{}}}],["default",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":68,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["delete",{"_index":208,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["delete(':id",{"_index":251,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":199,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete()@apioperation({summary",{"_index":367,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["deleted",{"_index":317,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":641,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":660,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":651,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":671,"title":{},"body":{"index.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"index.html":{},"properties.html":{}}}],["deve",{"_index":306,"title":{},"body":{"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":626,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":512,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentação",{"_index":618,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":218,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["dto/culturas.dto",{"_index":217,"title":{},"body":{"controllers/CulturasController.html":{}}}],["dto/fazendas.dto",{"_index":379,"title":{},"body":{"controllers/FazendasController.html":{}}}],["dto/produtores.dto",{"_index":483,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["e",{"_index":588,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":636,"title":{},"body":{"index.html":{}}}],["eager",{"_index":139,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["edição",{"_index":593,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":575,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":648,"title":{},"body":{"index.html":{}}}],["em",{"_index":66,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"miscellaneous/variables.html":{}}}],["encontrada",{"_index":291,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["ensure",{"_index":646,"title":{},"body":{"index.html":{}}}],["entities",{"_index":133,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"overview.html":{}}}],["entity",{"_index":132,"title":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"coverage.html":{}}}],["error",{"_index":233,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["esperança",{"_index":112,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["est",{"_index":508,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["estado",{"_index":94,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estado')@apioperation({summary",{"_index":350,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estados",{"_index":352,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estar",{"_index":603,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":86,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"index.html":{}}}],["exatamente",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excede",{"_index":311,"title":{},"body":{"injectables/CulturasService.html":{}}}],["excedida",{"_index":309,"title":{},"body":{"injectables/CulturasService.html":{}}}],["exclusão",{"_index":594,"title":{},"body":{"index.html":{}}}],["exemplocnpj",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplocpf",{"_index":121,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplonome",{"_index":127,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exibir",{"_index":611,"title":{},"body":{"index.html":{}}}],["existe",{"_index":504,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["existente",{"_index":478,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["export",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["express",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":152,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["false})@joincolumn({name",{"_index":140,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["fast",{"_index":664,"title":{},"body":{"index.html":{}}}],["fazenda",{"_index":73,"title":{"entities/Fazenda.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"index.html":{}}}],["fazenda'})@apibody({type",{"_index":354,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda'})@apiquery({name",{"_index":195,"title":{},"body":{"controllers/CulturasController.html":{}}}],["fazenda.areaagricultavel",{"_index":453,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.areatotal",{"_index":308,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazenda.areavegetacao",{"_index":455,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.culturas",{"_index":138,"title":{},"body":{"entities/Cultura.html":{}}}],["fazenda.dto",{"_index":380,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda.dto.ts",{"_index":89,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["fazenda.dto.ts:11",{"_index":107,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:14",{"_index":110,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:17",{"_index":103,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:20",{"_index":100,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:23",{"_index":105,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:5",{"_index":115,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:8",{"_index":113,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazendaid",{"_index":54,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["fazendarepository",{"_index":269,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazendas",{"_index":343,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["fazendas.controller",{"_index":411,"title":{},"body":{"modules/FazendasModule.html":{}}}],["fazendas.entity",{"_index":410,"title":{},"body":{"modules/FazendasModule.html":{},"injectables/FazendasService.html":{}}}],["fazendas.service",{"_index":377,"title":{},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{}}}],["fazendas/fazendas.entity",{"_index":151,"title":{},"body":{"entities/Cultura.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["fazendas/fazendas.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["fazendaschema",{"_index":378,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fazendaschema.validate(body",{"_index":385,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazendascontroller",{"_index":341,"title":{"controllers/FazendasController.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"coverage.html":{}}}],["fazendasmodule",{"_index":13,"title":{"modules/FazendasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FazendasModule.html":{},"modules.html":{},"overview.html":{}}}],["fazendasservice",{"_index":376,"title":{"injectables/FazendasService.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"overview.html":{}}}],["features",{"_index":675,"title":{},"body":{"index.html":{}}}],["few",{"_index":666,"title":{},"body":{"index.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["filter(c",{"_index":295,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findall",{"_index":164,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["findbyfazenda",{"_index":165,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(@query('fazendaid",{"_index":242,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(fazendaid",{"_index":193,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazendaid",{"_index":265,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findbyfazendaid(fazendaid",{"_index":278,"title":{},"body":{"injectables/CulturasService.html":{}}}],["focus",{"_index":674,"title":{},"body":{"index.html":{}}}],["fornecido",{"_index":596,"title":{},"body":{"index.html":{}}}],["framework",{"_index":573,"title":{},"body":{"index.html":{}}}],["funcionalidades",{"_index":590,"title":{},"body":{"index.html":{}}}],["function",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":566,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":669,"title":{},"body":{"index.html":{}}}],["garantir",{"_index":599,"title":{},"body":{"index.html":{}}}],["generate",{"_index":515,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generaterandomname",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatereadme",{"_index":518,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatevalidcnpj",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatevalidcpf",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generator",{"_index":131,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["generator.ts",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gerenciar",{"_index":585,"title":{},"body":{"index.html":{}}}],["get('/count",{"_index":168,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["get('/fazenda",{"_index":241,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/fazenda')@apioperation({summary",{"_index":194,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/total",{"_index":363,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get(':id/uso",{"_index":371,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count",{"_index":397,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count')@apioperation({summary",{"_index":347,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get()@apioperation({summary",{"_index":190,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["getrawmany",{"_index":324,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["getrawone",{"_index":446,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getting",{"_index":569,"title":{"index.html":{}},"body":{}}],["gettotalarea",{"_index":345,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao",{"_index":415,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao(fazendaid",{"_index":424,"title":{},"body":{"injectables/FazendasService.html":{}}}],["groupby('cultura.rubro",{"_index":323,"title":{},"body":{"injectables/CulturasService.html":{}}}],["groupby('fazenda.estado",{"_index":449,"title":{},"body":{"injectables/FazendasService.html":{}}}],["gráfica",{"_index":619,"title":{},"body":{"index.html":{}}}],["gráfico",{"_index":175,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["gráficos",{"_index":615,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["hectares",{"_index":67,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"index.html":{}}}],["helpers",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:8080/index.html",{"_index":620,"title":{},"body":{"index.html":{}}}],["id",{"_index":74,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["identidade",{"_index":119,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["igual",{"_index":395,"title":{},"body":{"controllers/FazendasController.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["informada",{"_index":307,"title":{},"body":{"injectables/CulturasService.html":{}}}],["information",{"_index":653,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":677,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":261,"title":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["injectables",{"_index":262,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"overview.html":{}}}],["injectrepository",{"_index":283,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["injectrepository(cultura",{"_index":284,"title":{},"body":{"injectables/CulturasService.html":{}}}],["injectrepository(fazenda",{"_index":286,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["injectrepository(produtor",{"_index":503,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["install",{"_index":668,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":624,"title":{},"body":{"index.html":{}}}],["integer",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inteiro",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inválida",{"_index":439,"title":{},"body":{"injectables/FazendasService.html":{}}}],["inválidos",{"_index":472,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["j",{"_index":310,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/ProdutoresService.html":{}}}],["joi.number",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().integer().positive().required().messages",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().length(2).uppercase().required().messages",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().min(3).required().messages",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required().messages",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uuid().required().messages",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":149,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["key",{"_index":643,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["letras",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":678,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":681,"title":{},"body":{"index.html":{}}}],["limit",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limite",{"_index":312,"title":{},"body":{"injectables/CulturasService.html":{}}}],["listar",{"_index":191,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["localhost",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["looking",{"_index":654,"title":{},"body":{"index.html":{}}}],["maior",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mais",{"_index":606,"title":{},"body":{"index.html":{}}}],["maiúsculas",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makes",{"_index":662,"title":{},"body":{"index.html":{}}}],["managing",{"_index":676,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":148,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["manytoone(undefined",{"_index":137,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["mapeamento",{"_index":172,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["matching",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":658,"title":{},"body":{"index.html":{}}}],["max(2100",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menor",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menos",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messages",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":160,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["min(1900",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min(2",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":565,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":680,"title":{},"body":{"index.html":{}}}],["mode",{"_index":629,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":652,"title":{},"body":{"index.html":{}}}],["mínimo",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":153,"title":{},"body":{"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["nest",{"_index":679,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":583,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":670,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":85,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["new",{"_index":236,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["node.js",{"_index":572,"title":{},"body":{"index.html":{}}}],["nome",{"_index":78,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["nomeprodutor",{"_index":120,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{}}}],["notfoundexception",{"_index":428,"title":{},"body":{"injectables/FazendasService.html":{}}}],["notfoundexception('fazenda",{"_index":451,"title":{},"body":{"injectables/FazendasService.html":{}}}],["nova",{"_index":184,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{}}}],["novo",{"_index":466,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["number",{"_index":57,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{}}}],["number(result?.totalarea",{"_index":447,"title":{},"body":{"injectables/FazendasService.html":{}}}],["number.base",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.integer",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.max",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.min",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.positive",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["não",{"_index":104,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"index.html":{}}}],["número",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o",{"_index":171,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obrigatório",{"_index":245,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["official",{"_index":659,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":338,"title":{},"body":{"entities/Fazenda.html":{}}}],["onetomany(undefined",{"_index":330,"title":{},"body":{"entities/Fazenda.html":{}}}],["optional",{"_index":188,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["os",{"_index":475,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["ou",{"_index":123,"title":{},"body":{"classes/CreateProdutorDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"index.html":{},"overview.html":{}}}],["outro",{"_index":510,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["overview",{"_index":686,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":540,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":64,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/ProdutoresService.html":{},"index.html":{}}}],["param",{"_index":212,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["parameters",{"_index":187,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["partial",{"_index":275,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["parâmetro",{"_index":244,"title":{},"body":{"controllers/CulturasController.html":{}}}],["password",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["pelo",{"_index":597,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["permitir",{"_index":591,"title":{},"body":{"index.html":{}}}],["pg",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["pizza",{"_index":176,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["plantada",{"_index":616,"title":{},"body":{"index.html":{}}}],["plantadas",{"_index":174,"title":{},"body":{"controllers/CulturasController.html":{},"index.html":{}}}],["platform",{"_index":657,"title":{},"body":{"index.html":{}}}],["pode",{"_index":97,"title":{},"body":{"classes/CreateFazendaDto.html":{},"index.html":{}}}],["por",{"_index":351,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["port",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["positive",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["positivo",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possible",{"_index":649,"title":{},"body":{"index.html":{}}}],["post",{"_index":209,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["post()@apioperation({summary",{"_index":181,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["postgres",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":584,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":158,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["primarygeneratedcolumn",{"_index":147,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":143,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["private",{"_index":285,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["production",{"_index":631,"title":{},"body":{"index.html":{}}}],["produtor",{"_index":114,"title":{"entities/Produtor.html":{}},"body":{"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"modules/FazendasModule.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"index.html":{}}}],["produtor'})@apiresponse({status",{"_index":467,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto",{"_index":484,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto.ts",{"_index":118,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["produtor.dto.ts:15",{"_index":129,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtor.dto.ts:9",{"_index":126,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtores",{"_index":464,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{}}}],["produtores.controller",{"_index":494,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["produtores.entity",{"_index":493,"title":{},"body":{"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["produtores.service",{"_index":481,"title":{},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{}}}],["produtores/produtores.entity",{"_index":339,"title":{},"body":{"entities/Fazenda.html":{},"modules/FazendasModule.html":{}}}],["produtores/produtores.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["produtorescontroller",{"_index":462,"title":{"controllers/ProdutoresController.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{}}}],["produtoresmodule",{"_index":14,"title":{"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["produtoresservice",{"_index":480,"title":{"injectables/ProdutoresService.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"overview.html":{}}}],["produtoresservice,typeormmodule",{"_index":496,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["produtorid",{"_index":95,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["produtorschema",{"_index":482,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["produtorschema.validate(body",{"_index":487,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["progressive",{"_index":571,"title":{},"body":{"index.html":{}}}],["project",{"_index":621,"title":{},"body":{"index.html":{}}}],["promise",{"_index":273,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["properties",{"_index":52,"title":{"properties.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"properties.html":{}}}],["propriedade",{"_index":608,"title":{},"body":{"index.html":{}}}],["propriedades",{"_index":607,"title":{},"body":{"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["put",{"_index":210,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["put()@apioperation({summary",{"_index":205,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["quantidade",{"_index":348,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["que",{"_index":96,"title":{},"body":{"classes/CreateFazendaDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":211,"title":{},"body":{"controllers/CulturasController.html":{}}}],["rea",{"_index":62,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["readme.ts",{"_index":516,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readonly",{"_index":228,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["ready",{"_index":640,"title":{},"body":{"index.html":{}}}],["reas",{"_index":438,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["reduce((total",{"_index":299,"title":{},"body":{"injectables/CulturasService.html":{}}}],["reflect",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["registrada",{"_index":365,"title":{},"body":{"controllers/FazendasController.html":{}}}],["registrados",{"_index":614,"title":{},"body":{"index.html":{}}}],["registro",{"_index":601,"title":{},"body":{"index.html":{}}}],["relacionada",{"_index":75,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["relations",{"_index":289,"title":{},"body":{"injectables/CulturasService.html":{}}}],["remove",{"_index":166,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remove(@body('id",{"_index":404,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["remove(@param('id",{"_index":252,"title":{},"body":{"controllers/CulturasController.html":{}}}],["remove(id",{"_index":198,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remover",{"_index":200,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["removida",{"_index":202,"title":{},"body":{"controllers/CulturasController.html":{}}}],["repo",{"_index":418,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["repository",{"_index":268,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["required",{"_index":196,"title":{},"body":{"controllers/CulturasController.html":{},"miscellaneous/variables.html":{}}}],["requiring",{"_index":665,"title":{},"body":{"index.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["restful",{"_index":581,"title":{},"body":{"index.html":{}}}],["result",{"_index":442,"title":{},"body":{"injectables/FazendasService.html":{}}}],["results",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":170,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["return",{"_index":238,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["returns",{"_index":178,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["rubro",{"_index":55,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["rubro')@apioperation({summary",{"_index":169,"title":{},"body":{"controllers/CulturasController.html":{}}}],["run",{"_index":625,"title":{},"body":{"index.html":{}}}],["runs",{"_index":647,"title":{},"body":{"index.html":{}}}],["rurais",{"_index":586,"title":{},"body":{"index.html":{}}}],["rural",{"_index":609,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["safra",{"_index":56,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sc",{"_index":108,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["scalable",{"_index":576,"title":{},"body":{"index.html":{}}}],["select('cultura.rubro",{"_index":320,"title":{},"body":{"injectables/CulturasService.html":{}}}],["select('fazenda.estado",{"_index":448,"title":{},"body":{"injectables/FazendasService.html":{}}}],["select('sum(fazenda.areatotal",{"_index":445,"title":{},"body":{"injectables/FazendasService.html":{}}}],["semeada",{"_index":99,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ser",{"_index":98,"title":{},"body":{"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":577,"title":{},"body":{"index.html":{}}}],["service",{"_index":229,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["setup",{"_index":622,"title":{},"body":{"index.html":{}}}],["side",{"_index":578,"title":{},"body":{"index.html":{}}}],["simple",{"_index":667,"title":{},"body":{"index.html":{}}}],["soja",{"_index":77,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["solo",{"_index":374,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["solo')@apioperation({summary",{"_index":372,"title":{},"body":{"controllers/FazendasController.html":{}}}],["soma",{"_index":433,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["src/.../culturas.dto.ts",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":568,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fazendas.dto.ts",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../produtores.dto.ts",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/culturas/culturas.controller.ts",{"_index":157,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{}}}],["src/culturas/culturas.controller.ts:25",{"_index":186,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:33",{"_index":192,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:40",{"_index":197,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:49",{"_index":177,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:57",{"_index":207,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:66",{"_index":203,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.entity.ts",{"_index":134,"title":{},"body":{"entities/Cultura.html":{},"coverage.html":{}}}],["src/culturas/culturas.entity.ts:13",{"_index":144,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:16",{"_index":142,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:20",{"_index":141,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:23",{"_index":145,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:26",{"_index":136,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:29",{"_index":146,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.module.ts",{"_index":257,"title":{},"body":{"modules/CulturasModule.html":{}}}],["src/culturas/culturas.service.ts",{"_index":263,"title":{},"body":{"injectables/CulturasService.html":{},"coverage.html":{}}}],["src/culturas/culturas.service.ts:17",{"_index":276,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:53",{"_index":277,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:57",{"_index":279,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:61",{"_index":282,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:65",{"_index":280,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:70",{"_index":272,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:8",{"_index":270,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/dto/create",{"_index":49,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["src/culturas/dto/culturas.dto.ts",{"_index":523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/dto/create",{"_index":88,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["src/fazendas/dto/fazendas.dto.ts",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/fazendas.controller.ts",{"_index":342,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.controller.ts:25",{"_index":360,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:37",{"_index":362,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:43",{"_index":349,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:49",{"_index":366,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:55",{"_index":353,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:62",{"_index":375,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:69",{"_index":369,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:77",{"_index":368,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.entity.ts",{"_index":325,"title":{},"body":{"entities/Fazenda.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.entity.ts:11",{"_index":337,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:15",{"_index":336,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:18",{"_index":335,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:21",{"_index":329,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:24",{"_index":333,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:27",{"_index":327,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:30",{"_index":326,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:33",{"_index":328,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:36",{"_index":332,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:8",{"_index":334,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.module.ts",{"_index":409,"title":{},"body":{"modules/FazendasModule.html":{}}}],["src/fazendas/fazendas.service.ts",{"_index":413,"title":{},"body":{"injectables/FazendasService.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.service.ts:13",{"_index":421,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:17",{"_index":422,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:21",{"_index":427,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:32",{"_index":426,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:37",{"_index":419,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:41",{"_index":423,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:50",{"_index":420,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:59",{"_index":425,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:7",{"_index":417,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/main.ts",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/produtores/dto/create",{"_index":117,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["src/produtores/dto/data",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/dto/produtores.dto.ts",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/produtores.controller.ts",{"_index":463,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["src/produtores/produtores.controller.ts:24",{"_index":473,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:34",{"_index":476,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:40",{"_index":479,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:50",{"_index":477,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.entity.ts",{"_index":456,"title":{},"body":{"entities/Produtor.html":{},"coverage.html":{}}}],["src/produtores/produtores.entity.ts:12",{"_index":460,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:6",{"_index":457,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:9",{"_index":459,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.module.ts",{"_index":492,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["src/produtores/produtores.service.ts",{"_index":497,"title":{},"body":{"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["src/produtores/produtores.service.ts:13",{"_index":499,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:21",{"_index":500,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:25",{"_index":502,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:29",{"_index":501,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:7",{"_index":498,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["start",{"_index":627,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":630,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":632,"title":{},"body":{"index.html":{}}}],["started",{"_index":570,"title":{"index.html":{}},"body":{}}],["statements",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":384,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["steps",{"_index":644,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":663,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["string.base",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.empty",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.length",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.min",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uppercase",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uuid",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suas",{"_index":587,"title":{},"body":{"index.html":{}}}],["sucesso",{"_index":359,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["sucesso'})@apiresponse({status",{"_index":469,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["suma",{"_index":390,"title":{},"body":{"controllers/FazendasController.html":{}}}],["summary",{"_index":230,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["support",{"_index":683,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":684,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":645,"title":{},"body":{"index.html":{}}}],["ter",{"_index":610,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":635,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":638,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":637,"title":{},"body":{"index.html":{}}}],["tests",{"_index":633,"title":{},"body":{"index.html":{}}}],["this.culturarepository",{"_index":318,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.create",{"_index":313,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.delete",{"_index":316,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.find",{"_index":293,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(cultura",{"_index":314,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(data",{"_index":315,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.fazendarepository.findone",{"_index":287,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.repo",{"_index":443,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.count",{"_index":441,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.delete",{"_index":440,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.find",{"_index":430,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.findone",{"_index":505,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["this.repo.findoneby",{"_index":450,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.save(data",{"_index":429,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.service.count",{"_index":398,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.countculturasbyrubro",{"_index":248,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.countfazendasbyestado",{"_index":401,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.create(body",{"_index":239,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findall",{"_index":240,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findbyfazendaid(fazendaid",{"_index":246,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.gettotalarea",{"_index":400,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.getusodosolodistribuicao(id",{"_index":403,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.remove(id",{"_index":253,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.update(body",{"_index":250,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["throw",{"_index":235,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["tipo",{"_index":373,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["todas",{"_index":361,"title":{},"body":{"controllers/FazendasController.html":{}}}],["todos",{"_index":474,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["total",{"_index":102,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["totalarea",{"_index":399,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["trim",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{}}}],["type",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["typeof",{"_index":303,"title":{},"body":{"injectables/CulturasService.html":{}}}],["typeorm",{"_index":150,"title":{},"body":{"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["typeormmodule.forfeature([cultura",{"_index":260,"title":{},"body":{"modules/CulturasModule.html":{}}}],["typeormmodule.forfeature([fazenda",{"_index":412,"title":{},"body":{"modules/FazendasModule.html":{}}}],["typeormmodule.forfeature([produtor",{"_index":495,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["typeormmodule.forroot",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["uf",{"_index":109,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ui",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["ultrapasse",{"_index":600,"title":{},"body":{"index.html":{}}}],["um",{"_index":465,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":183,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":435,"title":{},"body":{"injectables/FazendasService.html":{}}}],["unique",{"_index":461,"title":{},"body":{"entities/Produtor.html":{}}}],["unit",{"_index":634,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":179,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["unlicensed",{"_index":691,"title":{},"body":{"properties.html":{}}}],["update",{"_index":167,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["update(@body",{"_index":249,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(body",{"_index":204,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(data",{"_index":281,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["username",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["uso",{"_index":617,"title":{},"body":{"index.html":{}}}],["usodosolo",{"_index":346,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(@param('id",{"_index":402,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(id",{"_index":370,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usuário",{"_index":598,"title":{},"body":{"index.html":{}}}],["utilizada",{"_index":63,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/CulturasService.html":{}}}],["uuid",{"_index":71,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uuidv4",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validar",{"_index":595,"title":{},"body":{"index.html":{}}}],["validator",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.length",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":693,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetación",{"_index":393,"title":{},"body":{"controllers/FazendasController.html":{}}}],["vegetação",{"_index":454,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["version",{"_index":689,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["válido",{"_index":125,"title":{},"body":{"classes/CreateProdutorDto.html":{},"miscellaneous/variables.html":{}}}],["várias",{"_index":602,"title":{},"body":{"index.html":{}}}],["watch",{"_index":628,"title":{},"body":{"index.html":{}}}],["y",{"_index":392,"title":{},"body":{"controllers/FazendasController.html":{}}}],["yarn",{"_index":623,"title":{},"body":{"index.html":{}}}],["you're",{"_index":639,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CulturasModule\n                        \n                        \n                            FazendasModule\n                        \n                        \n                            ProdutoresModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProdutoresModule } from './produtores/produtores.module';\nimport { FazendasModule } from './fazendas/fazendas.module';\nimport { CulturasModule } from './culturas/culturas.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      port: 5432,\n      username: 'postgres',\n      password: 'password',\n      database: 'postgres',\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    ProdutoresModule,\n    FazendasModule,\n    CulturasModule,\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCulturaDto.html":{"url":"classes/CreateCulturaDto.html","title":"class - CreateCulturaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCulturaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/dto/create-cultura.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área utilizada para a cultura (em hectares)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-da-fazenda', description: 'ID da fazenda relacionada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Soja', description: 'Nome do rubro cultivado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2024, description: 'Ano da safra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCulturaDto {\n  @ApiProperty({ example: 'uuid-da-fazenda', description: 'ID da fazenda relacionada' })\n  fazendaId: string;\n\n  @ApiProperty({ example: 'Soja', description: 'Nome do rubro cultivado' })\n  rubro: string;\n\n  @ApiProperty({ example: 50, description: 'Área utilizada para a cultura (em hectares)' })\n  area: number;\n\n  @ApiProperty({ example: 2024, description: 'Ano da safra' })\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFazendaDto.html":{"url":"classes/CreateFazendaDto.html","title":"class - CreateFazendaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFazendaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/dto/create-fazenda.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, description: 'Área total da fazenda em hectares'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que não pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Chapecó', description: 'Cidade da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'SC', description: 'Estado (UF)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Fazenda Boa Esperança', description: 'Nome da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-do-produtor', description: 'ID do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateFazendaDto {\n  @ApiProperty({ example: 'uuid-do-produtor', description: 'ID do produtor' })\n  produtorId: string;\n\n  @ApiProperty({ example: 'Fazenda Boa Esperança', description: 'Nome da fazenda' })\n  nome: string;\n\n  @ApiProperty({ example: 'Chapecó', description: 'Cidade da fazenda' })\n  cidade: string;\n\n  @ApiProperty({ example: 'SC', description: 'Estado (UF)' })\n  estado: string;\n\n  @ApiProperty({ example: 100, description: 'Área total da fazenda em hectares' })\n  areaTotal: number;\n\n  @ApiProperty({ example: 50, description: 'Área que pode ser semeada' })\n  areaAgricultavel: number;\n\n  @ApiProperty({ example: 50, description: 'Área que não pode ser semeada' })\n  areaVegetacao: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProdutorDto.html":{"url":"classes/CreateProdutorDto.html","title":"class - CreateProdutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProdutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/dto/create-produtor.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploCpf, description: 'CPF ou CNPJ válido do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploNome, description: 'Nome completo do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exemploCpf, exemploNome } from './data-generator';\n\nexport class CreateProdutorDto {\n  @ApiProperty({\n    example: exemploCpf,\n    description: 'CPF ou CNPJ válido do produtor',\n  })\n  identidade: string;\n\n  @ApiProperty({\n    example: exemploNome,\n    description: 'Nome completo do produtor',\n  })\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cultura.html":{"url":"entities/Cultura.html","title":"entity - Cultura","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cultura\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                    \n                                fazenda\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fazenda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fazenda\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, fazenda => fazenda.culturas, {eager: false})@JoinColumn({name: 'fazendaId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Entity()\nexport class Cultura {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  fazendaId: string;\n\n  @ManyToOne(() => Fazenda, fazenda => fazenda.culturas, { eager: false })\n  @JoinColumn({ name: 'fazendaId' })\n  fazenda: Fazenda;\n\n  @Column()\n  rubro: string;\n\n  @Column()\n  area: number;\n\n  @Column()\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CulturasController.html":{"url":"controllers/CulturasController.html","title":"controller - CulturasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CulturasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                culturas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                countByRubro\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findByFazenda\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByRubro()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-rubro')@ApiOperation({summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar culturas'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findByFazenda\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByFazenda(fazendaId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/fazenda')@ApiOperation({summary: 'Listar culturas de uma fazenda'})@ApiQuery({name: 'fazendaId', required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Remover uma cultura'})@ApiParam({name: 'id', required: true, description: 'ID da cultura a ser removida'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  Query,\n  Param,\n  BadRequestException\n} from '@nestjs/common';\nimport { CulturasService } from './culturas.service';\nimport { culturaSchema } from './dto/culturas.dto';\nimport { CreateCulturaDto } from './dto/create-cultura.dto';\nimport { ApiTags, ApiBody, ApiQuery, ApiParam, ApiOperation } from '@nestjs/swagger';\n\n@ApiTags('Culturas')\n@Controller('culturas')\nexport class CulturasController {\n  constructor(private readonly service: CulturasService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async create(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar culturas' })\n  async findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('/fazenda')\n  @ApiOperation({ summary: 'Listar culturas de uma fazenda' })\n  @ApiQuery({ name: 'fazendaId', required: true })\n  async findByFazenda(@Query('fazendaId') fazendaId: string) {\n    if (!fazendaId) {\n      throw new BadRequestException('O parâmetro fazendaId é obrigatório.');\n    }\n    return this.service.findByFazendaId(fazendaId);\n  }\n\n  @Get('/count-by-rubro')\n  @ApiOperation({ summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)' })\n  async countByRubro() {\n    const data = await this.service.countCulturasByRubro();\n    return data;\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async update(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Remover uma cultura' })\n  @ApiParam({ name: 'id', required: true, description: 'ID da cultura a ser removida' })\n  async remove(@Param('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O parâmetro id é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CulturasModule.html":{"url":"modules/CulturasModule.html","title":"module - CulturasModule","body":"\n                   \n\n\n\n\n    Modules\n    CulturasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_CulturasModule_exports\n\n\n\n\nCulturasService \n\nCulturasService \n\n\n\nCulturasModule\n\nCulturasModule\n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/culturas/culturas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CulturasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Cultura } from './culturas.entity';\nimport { CulturasService } from './culturas.service';\nimport { CulturasController } from './culturas.controller';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Cultura, Fazenda])],\n  providers: [CulturasService],\n  controllers: [CulturasController],\n  exports: [CulturasService],\n})\nexport class CulturasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CulturasService.html":{"url":"injectables/CulturasService.html","title":"injectable - CulturasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CulturasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countCulturasByRubro\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByFazendaId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(culturaRepository: Repository, fazendaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/culturas/culturas.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        culturaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fazendaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countCulturasByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countCulturasByRubro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByFazendaId\n                        \n                    \n                \n            \n            \n                \nfindByFazendaId(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Cultura } from './culturas.entity';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Injectable()\nexport class CulturasService {\n  constructor(\n    @InjectRepository(Cultura)\n    private culturaRepository: Repository,\n\n    @InjectRepository(Fazenda)\n    private fazendaRepository: Repository,\n  ) { }\n\n  async create(data: Partial) {\n    const fazenda = await this.fazendaRepository.findOne({\n      where: { id: data.fazendaId },\n      relations: ['culturas'],\n    });\n\n    if (!fazenda) {\n      throw new BadRequestException('Fazenda não encontrada');\n    }\n\n    const culturasExistentes = await this.culturaRepository.find({\n      where: { fazenda: { id: data.fazendaId } },\n    });\n\n    const areaOcupadaNaSafra = culturasExistentes\n      .filter(c => c.fazendaId === data.fazendaId && c.safra === data.safra)\n      .reduce((total, c) => total + c.area, 0);\n\n    if (typeof data.area !== 'number') {\n      throw new BadRequestException('Área da cultura deve ser informada');\n    }\n\n    if (areaOcupadaNaSafra + data.area > fazenda.areaTotal) {\n      throw new BadRequestException(\n        `Área total da fazenda (${fazenda.areaTotal}) excedida: área já utilizada (${areaOcupadaNaSafra}), nova cultura excede limite.`,\n      );\n    }\n\n    const cultura = this.culturaRepository.create({\n      ...data,\n      fazenda: fazenda,\n    });\n\n    return this.culturaRepository.save(cultura);\n  }\n\n  findAll() {\n    return this.culturaRepository.find();\n  }\n\n  findByFazendaId(fazendaId: string) {\n    return this.culturaRepository.find({ where: { fazenda: { id: fazendaId } } });\n  }\n\n  update(data: Partial) {\n    return this.culturaRepository.save(data);\n  }\n\n  async remove(id: string) {\n    await this.culturaRepository.delete({ id });\n    return { deleted: true };\n  }\n\n  async countCulturasByRubro(): Promise {\n    return this.culturaRepository\n      .createQueryBuilder('cultura')\n      .select('cultura.rubro', 'rubro')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('cultura.rubro')\n      .getRawMany();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Fazenda.html":{"url":"entities/Fazenda.html","title":"entity - Fazenda","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Fazenda\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                culturas\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                produtor\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        culturas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cultura[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cultura => cultura.fazenda)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        produtor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Produtor\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: false})@JoinColumn({name: 'produtorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, JoinColumn, ManyToOne, OneToMany } from 'typeorm';\nimport { Produtor } from '../produtores/produtores.entity';\nimport { Cultura } from '../culturas/culturas.entity';\n\n@Entity()\nexport class Fazenda {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  produtorId: string;\n\n  @ManyToOne(() => Produtor, { eager: false })\n  @JoinColumn({ name: 'produtorId' })\n  produtor: Produtor;\n\n  @Column()\n  nome: string;\n\n  @Column()\n  cidade: string;\n\n  @Column()\n  estado: string;\n\n  @Column()\n  areaTotal: number;\n\n  @Column()\n  areaAgricultavel: number;\n\n  @Column()\n  areaVegetacao: number;\n\n  @OneToMany(() => Cultura, cultura => cultura.fazenda)\n  culturas: Cultura[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FazendasController.html":{"url":"controllers/FazendasController.html","title":"controller - FazendasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FazendasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fazendas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Async\n                                countByEstado\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    Async\n                                usoDoSolo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Retorna a quantidade de fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByEstado()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-estado')@ApiOperation({summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova fazenda'})@ApiBody({type: CreateFazendaDto})@ApiResponse({status: 201, description: 'Fazenda criada com sucesso'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/total-area')@ApiOperation({summary: 'Retorna a área total registrada'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover uma fazenda'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma fazenda'})@ApiBody({type: CreateFazendaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        usoDoSolo\n                        \n                    \n                \n            \n            \n                \n                        \n                    usoDoSolo(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/uso-do-solo')@ApiOperation({summary: 'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n  Param\n} from '@nestjs/common';\nimport { FazendasService } from './fazendas.service';\nimport { fazendaSchema } from './dto/fazendas.dto';\nimport { CreateFazendaDto } from './dto/create-fazenda.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Fazendas')\n@Controller('fazendas')\nexport class FazendasController {\n  constructor(private readonly service: FazendasService) { }\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  @ApiResponse({ status: 201, description: 'Fazenda criada com sucesso' })\n  async create(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    if (body.areaAgricultavel + body.areaVegetacao !== body.areaTotal) {\n      throw new BadRequestException('La suma de área agricultable y vegetación debe ser igual al área total');\n    }\n\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todas as fazendas' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: 'Retorna a quantidade de fazendas' })\n  async count() {\n    return this.service.count();\n  }\n\n  @Get('/total-area')\n  @ApiOperation({ summary: 'Retorna a área total registrada' })\n  async getTotalArea() {\n    return { totalArea: await this.service.getTotalArea() };\n  }\n\n  @Get('/count-by-estado')\n  @ApiOperation({ summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)' })\n  async countByEstado() {\n    const data = await this.service.countFazendasByEstado();\n    return data;\n  }\n\n  @Get(':id/uso-do-solo')\n    @ApiOperation({ summary: 'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)' })\n  async usoDoSolo(@Param('id') id: string) {\n    return this.service.getUsoDoSoloDistribuicao(id);\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  async update(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover uma fazenda' })\n  async remove(@Body('id') id: string) {\n    if (!id) throw new BadRequestException('O campo id é obrigatório');\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FazendasModule.html":{"url":"modules/FazendasModule.html","title":"module - FazendasModule","body":"\n                   \n\n\n\n\n    Modules\n    FazendasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\n\nFazendasService \n\nFazendasService \n\n\n\nFazendasModule\n\nFazendasModule\n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fazendas/fazendas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FazendasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Fazenda } from './fazendas.entity';\nimport { FazendasService } from './fazendas.service';\nimport { FazendasController } from './fazendas.controller';\nimport { Produtor } from '../produtores/produtores.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Fazenda, Produtor])],\n  providers: [FazendasService],\n  controllers: [FazendasController],\n  exports: [FazendasService, TypeOrmModule],\n})\nexport class FazendasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FazendasService.html":{"url":"injectables/FazendasService.html","title":"injectable - FazendasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FazendasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                countFazendasByEstado\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    Async\n                                getUsoDoSoloDistribuicao\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/fazendas/fazendas.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countFazendasByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countFazendasByEstado()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsoDoSoloDistribuicao\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsoDoSoloDistribuicao(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Fazenda } from './fazendas.entity';\n\n@Injectable()\nexport class FazendasService {\n  constructor(\n    @InjectRepository(Fazenda)\n    private readonly repo: Repository,\n  ) { }\n\n  create(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  async update(data: Partial) {\n    const areaAgricultavel = data.areaAgricultavel ?? 0;\n    const areaVegetacao = data.areaVegetacao ?? 0;\n    const soma = areaAgricultavel + areaVegetacao;\n    if (data.areaTotal !== undefined && soma > data.areaTotal) {\n      throw new BadRequestException('Soma das áreas inválida');\n    }\n\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n\n  async count(): Promise {\n    return this.repo.count();\n  }\n\n  async getTotalArea(): Promise {\n    const result = await this.repo\n      .createQueryBuilder('fazenda')\n      .select('SUM(fazenda.areaTotal)', 'totalArea')\n      .getRawOne();\n\n    return Number(result?.totalArea) || 0;\n  }\n\n  async countFazendasByEstado(): Promise {\n    return this.repo\n      .createQueryBuilder('fazenda')\n      .select('fazenda.estado', 'estado')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('fazenda.estado')\n      .getRawMany();\n  }\n\n  async getUsoDoSoloDistribuicao(fazendaId: string) {\n    const fazenda = await this.repo.findOneBy({ id: fazendaId });\n\n    if (!fazenda) {\n      throw new NotFoundException('Fazenda não encontrada');\n    }\n\n    return [\n      { tipo: 'Agricultável', area: fazenda.areaAgricultavel },\n      { tipo: 'Vegetação', area: fazenda.areaVegetacao },\n    ];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Produtor.html":{"url":"entities/Produtor.html","title":"entity - Produtor","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Produtor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Produtor {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true }) \n  identidade: string;\n\n  @Column()\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProdutoresController.html":{"url":"controllers/ProdutoresController.html","title":"controller - ProdutoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProdutoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                produtores\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateProdutorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um novo produtor'})@ApiResponse({status: 201, description: 'Produtor criado com sucesso'})@ApiResponse({status: 400, description: 'Dados inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateProdutorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtores'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover um produtor'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar um produtor existente'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ProdutoresService } from './produtores.service';\nimport { produtorSchema } from './dto/produtores.dto';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { CreateProdutorDto } from './dto/create-produtor.dto';\n\n@ApiTags('produtores')\n@Controller('produtores')\nexport class ProdutoresController {\n  constructor(private readonly service: ProdutoresService) { }\n\n  @Post()\n  @ApiOperation({ summary: 'Criar um novo produtor' })\n  @ApiResponse({ status: 201, description: 'Produtor criado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  async create(@Body() body: CreateProdutorDto) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todos os produtores' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar um produtor existente' })\n  async update(@Body() body: any /* : CreateProdutorDto */) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover um produtor' })\n  async remove(@Body('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O campo \"id\" é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProdutoresModule.html":{"url":"modules/ProdutoresModule.html","title":"module - ProdutoresModule","body":"\n                   \n\n\n\n\n    Modules\n    ProdutoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nProdutoresService \n\nProdutoresService \n\n\n\nProdutoresModule\n\nProdutoresModule\n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/produtores/produtores.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProdutoresController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Produtor } from './produtores.entity';\nimport { ProdutoresService } from './produtores.service';\nimport { ProdutoresController } from './produtores.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Produtor])],\n  providers: [ProdutoresService],\n  controllers: [ProdutoresController],\n  exports: [ProdutoresService,TypeOrmModule],\n})\nexport class ProdutoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProdutoresService.html":{"url":"injectables/ProdutoresService.html","title":"injectable - ProdutoresService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProdutoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/produtores/produtores.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Produtor } from './produtores.entity';\n\n@Injectable()\nexport class ProdutoresService {\n  constructor(\n    @InjectRepository(Produtor)\n    private readonly repo: Repository,\n  ) { }\n\n  async create(data: Partial) {\n    const existe = await this.repo.findOne({ where: { identidade: data.identidade } });\n    if (existe) {\n      throw new BadRequestException('CPF/CNPJ já está cadastrado para outro produtor.');\n    }\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  update(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        generate-readme.ts\n            \n            function\n            generateReadme\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.controller.ts\n            \n            controller\n            CulturasController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/culturas/culturas.entity.ts\n            \n            entity\n            Cultura\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.service.ts\n            \n            injectable\n            CulturasService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/culturas/dto/create-cultura.dto.ts\n            \n            class\n            CreateCulturaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/culturas/dto/culturas.dto.ts\n            \n            variable\n            culturaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/dto/create-fazenda.dto.ts\n            \n            class\n            CreateFazendaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/fazendas/dto/fazendas.dto.ts\n            \n            variable\n            fazendaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.controller.ts\n            \n            controller\n            FazendasController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.entity.ts\n            \n            entity\n            Fazenda\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.service.ts\n            \n            injectable\n            FazendasService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/dto/create-produtor.dto.ts\n            \n            class\n            CreateProdutorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateRandomName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploNome\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/produtores.dto.ts\n            \n            variable\n            produtorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.controller.ts\n            \n            controller\n            ProdutoresController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/produtores/produtores.entity.ts\n            \n            entity\n            Produtor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.service.ts\n            \n            injectable\n            ProdutoresService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            cpf-cnpj-validator : ^1.0.3\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.24\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            generateRandomName   (src/.../data-generator.ts)\n                        \n                        \n                            generateReadme   (generate-readme.ts)\n                        \n                        \n                            generateValidCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            generateValidCpf   (src/.../data-generator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateRandomName\n                        \n                    \n                \n            \n            \n                \ngenerateRandomName()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCnpj\n                        \n                    \n                \n            \n            \n                \ngenerateValidCnpj()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCpf\n                        \n                    \n                \n            \n            \n                \ngenerateValidCpf()\n                \n            \n\n\n\n\n        \n    \n    generate-readme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateReadme\n                        \n                    \n                \n            \n            \n                \ngenerateReadme()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\n🧑‍🌾 Produtores API\nAPI RESTful construída com NestJS + TypeORM + PostgreSQL para gerenciar produtores rurais, suas fazendas e culturas agrícolas.\n📦 Funcionalidades\n\nPermitir o cadastro, edição e exclusão de produtores rurais.\n\nValidar o CPF ou CNPJ fornecido pelo usuário.\n\nGarantir que a soma das áreas agricultável e de vegetação não ultrapasse a área total da fazenda.\n\nPermitir o registro de várias culturas plantadas por fazenda do produtor.\n\nUm produtor pode estar associado a 0, 1 ou mais propriedades rurais.\n\nUma propriedade rural pode ter 0, 1 ou mais culturas plantadas por safra.\n\nExibir um dashboard com:\n\nTotal de fazendas cadastradas (quantidade).\nTotal de hectares registrados (área total).\nGráficos de pizza:\nPor estado.\nPor cultura plantada.\nPor uso do solo (área agricultável e vegetação).\n\n\n\n\nDocumentação gráfica: http://localhost:8080/index.html\n\n\nProject setup\nExample :$ yarn installCompile and run the project\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodRun tests\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ yarn install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CulturasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FazendasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProdutoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_exports\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nCulturasService \n\nCulturasService \n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nFazendasService \n\nFazendasService \n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\nProdutoresService \n\nProdutoresService \n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            culturaSchema   (src/.../culturas.dto.ts)\n                        \n                        \n                            exemploCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            exemploCpf   (src/.../data-generator.ts)\n                        \n                        \n                            exemploNome   (src/.../data-generator.ts)\n                        \n                        \n                            fazendaSchema   (src/.../fazendas.dto.ts)\n                        \n                        \n                            produtorSchema   (src/.../produtores.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/culturas/dto/culturas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        culturaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  fazendaId: Joi.string()\n    .uuid({ version: 'uuidv4' })\n    .required()\n    .messages({\n      'string.empty': 'O campo fazendaId é obrigatório.',\n      'string.uuid': 'O fazendaId deve ser um UUID válido.',\n    }),\n\n  rubro: Joi.string()\n    .trim()\n    .min(2)\n    .required()\n    .messages({\n      'string.empty': 'O campo rubro é obrigatório.',\n      'string.min': 'O rubro deve ter no mínimo 2 caracteres.',\n    }),\n\n  area: Joi.number()\n    .positive()\n    .required()\n    .messages({\n      'number.base': 'A área deve ser um número.',\n      'number.positive': 'A área deve ser um número positivo.',\n      'any.required': 'O campo área é obrigatório.',\n    }),\n\n  safra: Joi.number()\n    .integer()\n    .min(1900)\n    .max(2100)\n    .required()\n    .messages({\n      'number.base': 'A safra deve ser um número.',\n      'number.integer': 'A safra deve ser um número inteiro.',\n      'number.min': 'A safra deve ser maior ou igual a 1900.',\n      'number.max': 'A safra deve ser menor ou igual a 2100.',\n      'any.required': 'O campo safra é obrigatório.',\n    }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exemploCnpj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCnpj()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploCpf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCpf()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploNome\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateRandomName()\n                    \n                \n\n\n        \n    \n\n    src/fazendas/dto/fazendas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fazendaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  produtorId: Joi.string().uuid().required().messages({\n    'string.base': 'O campo produtorId deve ser uma string',\n    'string.empty': 'O campo produtorId é obrigatório',\n    'string.uuid': 'O campo produtorId deve ser um UUID válido',\n    'any.required': 'O campo produtorId é obrigatório',\n  }),\n  nome: Joi.string().min(3).required().messages({\n    'string.empty': 'O campo nome é obrigatório',\n    'string.min': 'O campo nome deve ter pelo menos {#limit} caracteres',\n  }),\n  cidade: Joi.string().required().messages({\n    'string.empty': 'O campo cidade é obrigatório',\n  }),\n  estado: Joi.string().length(2).uppercase().required().messages({\n    'string.empty': 'O campo estado é obrigatório',\n    'string.length': 'O campo estado deve conter exatamente 2 letras',\n    'string.uppercase': 'O campo estado deve estar em letras maiúsculas',\n  }),\n  areaTotal: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaTotal deve ser um número',\n    'number.integer': 'O campo areaTotal deve ser um número inteiro',\n    'number.positive': 'O campo areaTotal deve ser maior que 0',\n    'any.required': 'O campo areaTotal é obrigatório',\n  }),\n\n  areaAgricultavel: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaAgricultavel deve ser um número',\n    'number.integer': 'O campo areaAgricultavel deve ser um número inteiro',\n    'number.positive': 'O campo areaAgricultavel deve ser maior que 0',\n    'any.required': 'O campo areaAgricultavel é obrigatório',\n  }),\n  areaVegetacao: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaVegetacao deve ser um número',\n    'number.integer': 'O campo areaVegetacao deve ser um número inteiro',\n    'number.positive': 'O campo areaVegetacao deve ser maior que 0',\n    'any.required': 'O campo areaVegetacao é obrigatório',\n  }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/produtores.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        produtorSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  identidade: Joi.string()\n    .required()\n    .custom((value, helpers) => {\n      if (value.length \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
