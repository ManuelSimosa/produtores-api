var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.006,1,1.784]],["body/modules/AppModule.html",[0,1.638,1,3.461,2,1.395,3,1.395,4,1.754,5,1.754,6,1.395,7,1.754,8,1.754,9,2.667,10,2.667,11,2.897,12,0.043,13,2.897,14,2.897,15,2.298,16,1.754,17,1.56,18,0.481,19,0.481,20,0.413,21,3.259,22,2.602,23,0.795,24,0.899,25,1.986,26,1.25,27,3.259,28,3.259,29,3.259,30,3.259,31,2.667,32,3.259,33,3.259,34,2.28,35,3.259,36,0.631,37,3.259,38,3.259,39,3.259,40,3.259,41,3.259,42,3.259,43,3.259,44,3.259,45,3.259,46,3.259,47,3.259,48,3.259,49,3.259,50,3.259,51,3.259,52,0.481,53,0.23,54,0.031,55,0.031]],["title/classes/CreateCulturaDto.html",[53,0.206,56,1.784]],["body/classes/CreateCulturaDto.html",[12,0.042,18,0.45,19,0.45,20,0.386,23,0.45,36,0.952,52,0.45,53,0.215,54,0.029,55,0.029,56,2.487,57,1.855,58,4.198,59,2.491,60,0.517,61,1.565,62,2.477,63,2.204,64,2.76,65,3.126,66,2.647,67,1.692,68,3.437,69,3.34,70,2.102,71,1.954,72,3.34,73,2.852,74,1.403,75,2.852,76,2.852,77,1.212,78,3.044,79,1.077,80,2.487,81,2.842,82,1.077,83,1.126,84,4.081,85,3.044,86,4.081,87,2.196,88,4.081,89,3.044,90,4.081,91,4.081,92,3.044,93,3.584,94,1.302,95,2.998]],["title/classes/CreateFazendaDto.html",[53,0.206,96,1.784]],["body/classes/CreateFazendaDto.html",[12,0.042,18,0.37,19,0.37,20,0.318,23,0.37,36,0.991,52,0.37,53,0.177,54,0.026,55,0.026,57,1.529,60,0.426,61,1.369,66,2.676,67,1.76,68,3.576,69,3.706,70,2.148,71,2.381,75,2.495,76,2.495,77,1.261,79,1.145,80,2.176,81,2.676,82,1.145,83,0.985,87,2.575,93,3.655,94,1.073,95,3.119,96,2.176,97,4.28,98,2.053,99,2.533,100,2.905,101,2.533,102,3.344,103,2.291,104,2.905,105,3.164,106,3.706,107,2.437,108,4.528,109,2.508,110,3.57,111,2.176,112,2.508,113,2.176,114,2.508,115,3.57,116,2.508,117,3.57,118,3.57,119,2.508,120,3.57,121,3.57,122,2.508,123,1.25,124,2.508]],["title/classes/CreateProdutorDto.html",[53,0.206,125,1.784]],["body/classes/CreateProdutorDto.html",[12,0.042,18,0.519,19,0.519,20,0.446,23,0.662,36,0.868,52,0.519,53,0.248,54,0.032,55,0.032,57,2.144,60,0.598,61,1.72,67,1.543,68,3.135,70,1.995,77,1.105,79,1.139,87,2.414,93,3.451,94,1.505,95,2.734,123,1.436,125,2.734,126,4.042,127,2.879,128,3.01,129,4.042,130,3.451,131,3.135,132,3.135,133,3.135,134,3.671,135,3.517,136,3.451,137,4.485,138,3.517,139,1.684,140,3.517]],["title/entities/Cultura.html",[74,1.006,141,1.252]],["body/entities/Cultura.html",[12,0.043,18,0.461,19,0.461,20,0.396,23,0.613,36,1.03,52,0.461,53,0.22,54,0.03,55,0.03,60,0.531,61,1.592,62,2.51,63,2.477,64,2.51,65,2.842,66,2.675,67,1.829,74,1.428,77,1.31,79,1.165,82,1.222,83,1.287,141,1.777,142,1.903,143,2.556,144,3.9,145,3.123,146,2.556,147,4.151,148,3.398,149,2.556,150,3.123,151,3.123,152,2.901,153,3.123,154,3.123,155,3.123,156,2.182,157,3.398,158,3.398,159,1.198,160,2.182,161,2.556,162,1.198]],["title/controllers/CulturasController.html",[163,1.252,164,1.784]],["body/controllers/CulturasController.html",[12,0.043,18,0.279,19,0.279,20,0.24,23,0.628,24,0.522,34,1.89,36,0.869,52,0.279,53,0.133,54,0.021,55,0.021,56,3.126,60,0.321,63,2.149,64,1.018,67,1.544,70,1.111,74,1.463,77,1.106,79,0.983,81,1.559,82,0.414,83,1.33,94,0.809,107,1.559,139,1.387,162,1.721,163,0.809,164,1.766,165,0.809,166,1.547,167,1.321,168,2.848,169,1.387,170,2.631,171,3.946,172,1.387,173,1.89,174,2.897,175,1.387,176,1.387,177,2.371,178,1.891,179,2.371,180,1.766,181,2.371,182,3.137,183,2.371,184,2.371,185,2.024,186,1.891,187,2.149,188,2.149,189,1.321,190,1.321,191,2.024,192,2.938,193,2.024,194,2.897,195,1.891,196,1.89,197,1.89,198,2.973,199,1.321,200,2.758,201,1.891,202,1.891,203,1.891,204,1.891,205,3.23,206,1.891,207,0.905,208,1.891,209,2.024,210,1.891,211,2.897,212,1.891,213,1.321,214,1.321,215,2.024,216,1.891,217,1.321,218,2.024,219,2.024,220,1.891,221,1.547,222,0.905,223,1.387,224,1.547,225,1.321,226,1.891,227,1.321,228,1.891,229,1.321,230,2.882,231,2.897,232,2.897,233,3.265,234,1.891,235,1.891,236,1.321,237,1.018,238,1.321,239,3.137,240,1.321,241,1.686,242,2.758,243,2.897,244,1.89,245,1.689,246,2.371,247,2.149,248,1.321,249,1.321,250,1.891,251,1.891,252,2.024,253,2.897,254,1.766,255,1.891,256,1.018,257,1.891,258,1.321,259,1.321,260,1.891,261,1.891,262,1.321]],["title/modules/CulturasModule.html",[0,1.006,11,1.575]],["body/modules/CulturasModule.html",[0,1.692,2,1.492,3,1.492,4,1.876,5,1.876,6,1.492,7,2.647,8,2.647,11,2.999,12,0.043,15,2.401,16,1.876,17,1.669,18,0.515,19,0.515,20,0.442,22,2.125,23,0.81,24,0.962,25,2.125,26,1.337,52,0.515,53,0.246,54,0.032,55,0.032,74,1.199,82,0.977,160,2.436,164,2.998,165,1.909,223,2.784,224,2.853,263,2.853,264,2.853,265,2.853,266,3.486,267,2.853,268,3.486,269,3.486]],["title/injectables/CulturasService.html",[223,1.401,270,1.252]],["body/injectables/CulturasService.html",[12,0.043,18,0.311,19,0.311,20,0.267,23,0.658,24,0.581,26,0.806,34,1.007,36,0.863,52,0.311,53,0.148,54,0.023,55,0.023,60,0.357,63,1.503,64,1.132,66,1.132,71,1.503,72,1.721,74,1.433,77,1.194,79,1.024,81,1.69,82,1.091,83,1.23,107,1.132,111,1.914,113,1.282,139,1.799,159,0.806,160,1.47,162,1.709,168,1.282,169,1.503,170,2.437,172,1.503,173,1.995,175,1.503,176,1.503,187,2.239,188,1.503,193,1.47,196,2.134,197,2.134,207,1.503,222,1.503,223,1.503,241,1.995,244,1.799,245,1.608,247,2.239,256,2.022,267,1.721,270,1.344,271,1.282,272,1.721,273,4.166,274,3.14,275,2.194,276,2.103,277,3.386,278,3.757,279,2.103,280,3.14,281,2.103,282,2.57,283,2.194,284,3.267,285,2.103,286,2.103,287,3.14,288,2.103,289,2.103,290,2.194,291,2.103,292,1.47,293,2.103,294,2.194,295,1.721,296,2.103,297,3.757,298,2.103,299,2.103,300,1.721,301,3.14,302,3.757,303,3.757,304,2.103,305,2.103,306,2.103,307,2.103,308,2.103,309,2.103,310,2.103,311,1.132,312,2.103,313,3.14,314,2.103,315,1.721,316,2.103,317,3.14,318,2.103,319,1.721,320,2.103,321,2.103,322,2.103,323,2.103,324,2.103,325,2.103,326,1.47,327,2.103,328,2.103,329,2.103,330,1.721,331,1.47,332,2.103,333,1.721]],["title/entities/Fazenda.html",[82,0.641,141,1.252]],["body/entities/Fazenda.html",[12,0.043,18,0.399,19,0.399,20,0.342,23,0.639,36,1.061,52,0.399,53,0.19,54,0.027,55,0.027,60,0.459,61,1.442,66,2.741,67,1.885,74,1.752,77,1.35,79,1.201,82,0.824,83,1.194,87,2.328,99,2.637,100,3.023,101,2.637,102,3.023,103,2.071,104,3.437,123,1.442,141,1.609,142,1.646,144,3.982,146,2.21,148,3.078,149,2.21,152,2.628,156,1.887,157,3.078,158,3.078,159,1.036,161,2.21,162,1.036,168,2.637,334,2.21,335,2.701,336,2.701,337,2.701,338,2.701,339,2.701,340,3.76,341,2.701,342,2.701,343,2.701,344,2.701,345,2.701,346,2.701,347,3.76,348,2.21,349,2.701]],["title/controllers/FazendasController.html",[163,1.252,350,1.784]],["body/controllers/FazendasController.html",[12,0.043,18,0.248,19,0.248,20,0.213,23,0.595,24,0.463,36,0.828,52,0.248,53,0.118,54,0.019,55,0.019,60,0.285,62,1.757,67,1.594,70,1.013,71,1.773,77,1.142,79,0.936,82,1.069,83,1.18,94,0.718,96,2.974,103,0.804,107,0.904,111,1.99,139,1.265,162,1.42,163,0.718,165,0.718,167,1.173,169,1.265,170,2.627,172,1.265,173,1.773,175,1.265,176,1.265,177,2.162,179,3.792,180,1.61,181,2.162,182,3.668,184,3.03,185,2.587,187,2.218,188,2.142,189,1.173,190,1.173,191,1.846,192,2.606,193,1.846,196,1.773,197,1.773,198,2.814,199,1.173,200,1.846,207,0.804,209,1.846,213,1.173,214,1.173,215,1.846,217,1.846,218,1.846,219,1.846,221,1.374,222,0.804,227,1.173,229,1.173,230,2.672,233,3.331,236,1.173,237,0.904,238,1.173,239,3.238,240,1.173,241,1.563,242,2.587,244,1.773,245,1.584,246,2.162,247,2.218,248,1.173,249,1.173,252,1.173,254,1.023,256,1.421,258,1.173,259,1.173,262,1.173,331,2.587,350,1.61,351,1.374,352,3.295,353,3.703,354,3.03,355,2.641,356,1.679,357,3.03,358,1.679,359,1.679,360,3.03,361,2.641,362,1.679,363,2.641,364,1.679,365,2.162,366,2.641,367,1.846,368,2.162,369,1.679,370,2.641,371,1.679,372,2.641,373,1.679,374,2.641,375,1.679,376,1.374,377,1.679,378,1.679,379,1.679,380,2.641,381,1.679,382,2.162,383,2.672,384,1.679,385,1.265,386,1.374,387,1.173,388,1.679,389,1.679,390,2.162,391,1.679,392,1.679,393,1.374,394,2.641,395,1.679,396,1.679,397,1.679,398,1.679,399,1.679,400,1.679,401,1.679,402,1.679,403,1.679,404,1.374,405,1.679,406,1.679,407,1.679,408,1.374,409,1.679,410,1.679,411,1.679,412,1.679,413,1.374,414,1.173]],["title/modules/FazendasModule.html",[0,1.006,13,1.575]],["body/modules/FazendasModule.html",[0,1.692,2,1.492,3,1.492,4,1.876,5,1.876,6,1.492,7,2.647,8,2.647,12,0.043,13,2.999,15,2.401,16,1.876,17,1.669,18,0.515,19,0.515,20,0.442,22,2.125,23,0.81,24,0.962,25,2.719,26,1.337,52,0.515,53,0.246,54,0.032,55,0.032,82,0.764,123,1.231,165,1.909,348,2.853,350,2.998,385,2.784,386,2.853,415,2.853,416,2.853,417,2.853,418,3.486,419,2.853,420,3.486,421,3.486]],["title/injectables/FazendasService.html",[270,1.252,385,1.401]],["body/injectables/FazendasService.html",[12,0.043,18,0.315,19,0.315,20,0.27,23,0.62,24,0.589,26,0.818,34,1.021,36,0.868,52,0.315,53,0.15,54,0.023,55,0.023,60,0.362,62,1.708,63,1.519,77,1.259,79,1.029,82,0.83,83,1.046,99,1.934,101,1.934,103,1.021,113,1.3,139,1.519,159,0.818,162,1.719,169,1.519,170,2.68,172,1.519,173,2.009,175,1.519,176,1.519,187,2.394,188,1.814,196,2.147,197,2.147,207,1.519,222,1.021,237,1.148,241,2.147,244,1.519,245,1.358,247,2.394,256,2.039,270,1.358,271,1.3,275,2.217,277,2.932,282,3.847,283,2.217,284,3.285,290,2.217,292,1.491,294,1.491,295,1.746,300,1.746,311,2.039,326,1.491,330,1.746,331,3.134,333,1.746,354,3.433,382,2.597,385,1.519,408,1.746,419,1.746,422,1.746,423,4.195,424,3.173,425,1.746,426,2.133,427,2.597,428,2.133,429,2.133,430,2.133,431,2.133,432,2.133,433,3.173,434,2.133,435,2.133,436,2.133,437,2.133,438,2.597,439,1.746,440,2.133,441,2.133,442,2.597,443,3.173,444,2.133,445,2.133,446,1.746,447,1.746,448,2.133,449,1.746,450,2.133,451,2.133,452,3.173,453,3.173,454,2.133,455,2.133,456,2.133,457,2.133,458,2.133,459,2.133,460,2.133,461,1.746,462,2.133,463,1.746,464,2.133]],["title/entities/Produtor.html",[123,0.808,141,1.252]],["body/entities/Produtor.html",[12,0.042,18,0.548,19,0.548,20,0.471,23,0.548,34,2.223,36,0.98,52,0.548,53,0.262,54,0.033,55,0.033,60,0.631,61,1.78,67,1.742,77,1.248,79,1.22,83,1.398,123,1.281,128,3.087,129,4.144,141,1.986,142,2.263,144,3.707,152,3.244,156,2.595,159,1.424,465,3.039,466,3.713,467,3.713,468,3.713,469,3.713,470,3.713]],["title/controllers/ProdutoresController.html",[163,1.252,471,1.784]],["body/controllers/ProdutoresController.html",[12,0.043,18,0.339,19,0.339,20,0.291,23,0.682,24,0.633,36,0.765,52,0.339,53,0.162,54,0.024,55,0.024,60,0.39,67,1.494,70,1.666,77,1.07,79,0.865,83,1.199,94,0.981,123,1.375,125,2.815,162,1.515,163,0.981,165,0.981,167,1.602,169,1.602,170,2.493,172,1.602,173,2.08,175,1.602,176,1.602,187,2.08,188,1.892,189,1.602,190,1.602,191,2.338,196,1.892,197,1.892,198,3.228,199,1.602,200,2.338,207,1.098,209,2.338,213,1.602,214,1.602,215,2.338,217,2.338,218,2.338,219,2.338,222,1.098,227,1.602,229,1.602,233,3.228,236,1.602,237,1.234,238,1.602,239,3.035,240,1.602,241,1.602,242,3.035,244,1.892,245,1.691,247,2.08,248,1.602,249,1.602,252,1.602,254,1.397,258,1.602,259,1.602,262,1.602,365,2.738,367,2.338,368,1.876,376,1.876,390,3.233,393,2.738,413,1.876,414,1.602,471,2.039,472,1.876,473,3.233,474,3.37,475,3.346,476,2.292,477,3.346,478,2.292,479,3.346,480,3.346,481,3.346,482,2.292,483,3.346,484,3.346,485,2.292,486,2.292,487,3.346,488,2.292,489,1.602,490,1.876,491,1.602,492,2.292,493,2.292,494,2.292,495,2.292,496,3.346,497,3.346]],["title/modules/ProdutoresModule.html",[0,1.006,14,1.575]],["body/modules/ProdutoresModule.html",[0,1.708,2,1.523,3,1.523,4,1.915,5,1.915,6,1.523,7,2.673,8,2.673,12,0.042,14,3.013,15,2.432,16,1.915,17,1.704,18,0.526,19,0.526,20,0.451,22,2.169,23,0.796,24,0.982,25,2.169,26,1.365,52,0.526,53,0.251,54,0.032,55,0.032,123,0.982,165,1.934,471,3.027,489,2.777,490,2.913,498,2.913,499,2.913,500,2.913,501,3.559,502,2.913,503,3.559,504,3.559,505,3.559]],["title/injectables/ProdutoresService.html",[270,1.252,489,1.401]],["body/injectables/ProdutoresService.html",[12,0.043,18,0.415,19,0.415,20,0.356,23,0.703,24,0.775,26,1.077,34,1.345,36,0.921,52,0.415,53,0.198,54,0.028,55,0.028,60,0.477,73,1.962,77,1.229,79,0.967,83,1.066,123,1.066,128,1.712,139,1.85,159,1.077,162,1.824,169,1.85,170,2.468,172,1.85,173,2.278,175,1.85,176,1.85,187,2.278,188,1.85,196,2.278,197,2.278,207,1.85,222,1.345,237,1.511,241,1.345,244,1.345,245,1.202,247,2.278,256,2.079,270,1.653,271,1.712,275,2.7,277,3.325,283,2.7,284,3.602,290,2.7,292,1.962,294,1.962,319,2.298,326,1.962,425,2.298,427,3.162,438,3.162,439,2.298,449,2.298,489,1.85,502,2.298,506,2.298,507,2.808,508,2.808,509,2.808,510,2.808,511,2.808,512,2.808,513,3.864,514,2.808,515,2.808,516,2.808,517,2.808,518,2.808,519,2.808]],["title/coverage.html",[520,2.777]],["body/coverage.html",[6,1.237,12,0.043,20,0.366,36,0.559,53,0.316,54,0.028,55,0.028,56,1.761,58,2.365,59,2.365,74,0.994,82,0.633,96,1.761,97,2.365,98,2.365,123,0.798,125,1.761,126,2.365,127,2.365,130,2.019,136,2.019,141,1.918,143,2.365,163,1.918,164,1.761,166,2.365,223,1.383,225,2.019,245,1.237,270,1.918,272,2.365,311,3.173,334,2.365,350,1.761,351,2.365,385,1.383,387,2.019,422,2.365,465,2.365,471,1.761,472,2.365,489,1.383,491,2.019,506,2.365,520,2.019,521,2.365,522,2.889,523,2.889,524,2.365,525,2.365,526,5.039,527,2.365,528,5.723,529,2.889,530,3.94,531,3.94,532,2.365,533,5.2,534,2.365,535,2.889,536,2.889,537,2.365,538,2.889,539,3.634,540,3.634,541,2.019,542,2.019,543,2.019,544,2.365,545,2.365,546,2.889,547,2.889,548,2.889]],["title/dependencies.html",[3,1.504,549,2.008]],["body/dependencies.html",[3,1.672,12,0.043,24,1.078,26,1.498,31,3.198,54,0.034,55,0.034,80,2.381,94,1.672,131,2.73,133,2.73,159,1.498,550,3.907,551,3.907,552,5.181,553,3.907,554,3.907,555,3.907,556,4.79,557,3.907,558,3.907,559,3.907,560,3.907,561,3.907,562,3.907,563,3.907,564,3.907,565,3.907,566,3.907,567,3.907,568,3.907,569,3.907,570,3.907,571,3.907,572,3.907]],["title/miscellaneous/functions.html",[573,1.495,574,2.876]],["body/miscellaneous/functions.html",[6,2.273,12,0.036,54,0.036,55,0.036,60,0.703,524,4.059,525,4.059,527,4.347,537,3.385,539,2.891,540,3.848,541,3.711,542,3.711,543,3.711,573,2.521,574,3.385,575,4.136,576,4.347]],["title/index.html",[60,0.417,577,2.454,578,2.454]],["body/index.html",[12,0.041,17,1.632,54,0.024,55,0.024,65,1.433,70,0.901,71,1.919,73,1.643,74,0.808,76,1.643,81,1.265,82,0.746,95,2.679,103,1.126,105,1.643,106,2.789,111,2.679,113,1.433,123,0.94,131,1.643,132,2.801,133,1.643,159,0.901,168,2.443,180,2.443,182,3.4,183,2.789,185,1.643,192,1.433,311,1.834,352,2.789,357,1.924,360,3.819,367,2.381,383,1.924,442,1.924,446,1.924,447,1.924,461,2.789,463,2.789,473,3.28,474,2.381,520,1.643,521,1.924,579,2.351,580,2.351,581,2.351,582,3.407,583,2.351,584,2.351,585,2.351,586,2.351,587,3.407,588,3.407,589,2.351,590,2.351,591,4.395,592,2.351,593,2.351,594,4.008,595,2.351,596,4.395,597,2.351,598,2.351,599,3.407,600,2.351,601,2.351,602,2.351,603,2.351,604,2.351,605,1.924,606,2.351,607,2.351,608,2.351,609,2.351,610,2.351,611,1.924,612,2.351,613,3.407,614,3.407,615,2.351,616,2.351,617,2.351,618,1.924,619,2.351,620,2.351,621,2.351,622,2.351,623,2.351,624,2.351,625,2.351,626,2.351,627,2.351,628,2.351,629,3.407,630,2.351,631,5.14,632,2.351,633,5.019,634,2.351,635,2.351,636,2.351,637,3.407,638,2.351,639,3.407,640,2.351,641,4.008,642,2.351,643,3.407,644,2.351,645,2.351,646,2.351,647,2.351,648,2.351,649,4.008,650,4.008,651,2.351,652,3.407,653,2.351,654,2.351,655,2.351,656,2.351,657,2.351,658,3.407,659,3.407,660,2.351,661,2.351,662,2.351,663,2.351,664,2.351,665,3.407,666,4.395,667,2.351,668,2.351,669,2.351,670,2.351,671,2.351,672,2.351,673,2.351,674,3.407,675,2.351,676,2.351,677,2.351,678,2.351,679,2.351,680,2.351,681,2.351,682,2.351,683,2.351,684,2.351,685,2.351,686,1.924,687,2.351,688,2.351,689,2.351]],["title/modules.html",[2,1.701]],["body/modules.html",[1,2.621,2,1.84,11,2.314,12,0.036,13,2.314,14,2.314,54,0.036,55,0.036,690,5.577,691,5.577,692,5.577,693,5.577]],["title/overview.html",[694,3.252]],["body/overview.html",[0,1.189,1,3.433,2,1.479,3,1.479,4,1.86,5,1.86,6,1.479,7,1.86,8,1.86,9,2.829,10,2.829,11,2.943,12,0.041,13,2.943,14,2.943,15,2.387,16,1.86,17,1.655,54,0.032,55,0.032,57,2.107,142,2.107,165,1.479,223,2.663,263,2.829,264,2.829,265,2.829,271,2.107,385,2.663,415,2.829,416,2.829,417,2.829,489,2.663,498,2.829,499,2.829,500,2.829,694,2.829,695,3.456,696,5.168]],["title/properties.html",[61,1.348,549,2.008]],["body/properties.html",[12,0.042,54,0.037,55,0.037,61,1.71,70,1.71,686,3.65,697,3.65,698,4.46,699,4.46,700,4.46]],["title/miscellaneous/variables.html",[573,1.495,701,2.876]],["body/miscellaneous/variables.html",[12,0.042,54,0.021,55,0.021,60,0.326,62,1.032,63,1.701,64,1.912,65,2.751,71,1.701,75,1.34,79,0.42,80,2.165,87,1.912,99,2.61,100,2.993,101,2.61,102,2.047,103,1.904,104,2.993,105,2.483,107,2.964,128,1.169,130,2.047,132,2.047,134,2.397,136,2.047,180,3.495,192,1.169,205,3.505,225,2.047,254,3.182,311,1.912,315,4.6,387,2.047,404,2.397,414,3.984,474,3.648,491,2.047,532,1.57,534,1.57,539,1.34,540,2.779,541,1.34,542,1.34,543,1.34,544,2.397,545,1.57,573,1.169,576,2.907,605,1.57,611,1.57,618,2.397,697,1.57,701,1.57,702,1.918,703,1.918,704,1.918,705,4.514,706,4.514,707,3.552,708,3.552,709,1.918,710,3.976,711,4.514,712,2.929,713,1.918,714,1.918,715,2.929,716,1.918,717,2.929,718,2.929,719,2.929,720,1.918,721,4.282,722,5.062,723,3.976,724,1.918,725,4.514,726,1.918,727,1.918,728,1.918,729,3.976,730,3.976,731,1.918,732,3.976,733,1.918,734,1.918,735,1.918,736,1.918,737,1.918,738,1.918,739,1.918,740,1.918,741,1.918,742,1.918,743,1.918,744,1.918,745,1.918,746,1.918,747,2.929,748,1.918,749,1.918,750,3.552,751,1.918,752,1.918,753,1.918]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":311,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":698,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":613,"title":{},"body":{"index.html":{}}}],["1.0.3",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["100",{"_index":110,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["11.0.0",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["1900",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["201",{"_index":365,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["2024",{"_index":90,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["2100",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":696,"title":{},"body":{"overview.html":{}}}],["4",{"_index":695,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":479,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["5.0.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":69,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{}}}],["5432",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["addselect('count",{"_index":330,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["agricultable",{"_index":400,"title":{},"body":{"controllers/FazendasController.html":{}}}],["agricultável",{"_index":461,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["agrícolas",{"_index":597,"title":{},"body":{"index.html":{}}}],["al",{"_index":405,"title":{},"body":{"controllers/FazendasController.html":{}}}],["allowing",{"_index":681,"title":{},"body":{"index.html":{}}}],["ano",{"_index":91,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["any.required",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":588,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":230,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["apioperation",{"_index":233,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apiparam",{"_index":232,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiproperty",{"_index":93,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiproperty({example",{"_index":68,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiquery",{"_index":231,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiresponse",{"_index":390,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags",{"_index":229,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags('culturas",{"_index":234,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apitags('fazendas",{"_index":391,"title":{},"body":{"controllers/FazendasController.html":{}}}],["apitags('produtores",{"_index":494,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["application",{"_index":650,"title":{},"body":{"index.html":{}}}],["applications",{"_index":587,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":62,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["area')@apioperation({summary",{"_index":373,"title":{},"body":{"controllers/FazendasController.html":{}}}],["areaagricultavel",{"_index":99,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["areaocupadanasafra",{"_index":303,"title":{},"body":{"injectables/CulturasService.html":{}}}],["areatotal",{"_index":100,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["areavegetacao",{"_index":101,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["associado",{"_index":612,"title":{},"body":{"index.html":{}}}],["async",{"_index":170,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["atualizar",{"_index":215,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["author",{"_index":700,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":256,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["aws",{"_index":669,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":222,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["badrequestexception('cpf/cnpj",{"_index":516,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["badrequestexception('fazenda",{"_index":299,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception('la",{"_index":398,"title":{},"body":{"controllers/FazendasController.html":{}}}],["badrequestexception('o",{"_index":252,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["badrequestexception('soma",{"_index":445,"title":{},"body":{"injectables/FazendasService.html":{}}}],["badrequestexception('área",{"_index":314,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception(error.details[0].message",{"_index":497,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["badrequestexception(error.message",{"_index":246,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["based",{"_index":664,"title":{},"body":{"index.html":{}}}],["boa",{"_index":120,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["body",{"_index":198,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["body.areaagricultavel",{"_index":395,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areatotal",{"_index":397,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areavegetacao",{"_index":396,"title":{},"body":{"controllers/FazendasController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":693,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":690,"title":{},"body":{"modules.html":{}}}],["building",{"_index":582,"title":{},"body":{"index.html":{}}}],["c",{"_index":309,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.area",{"_index":310,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.fazendaid",{"_index":305,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.safra",{"_index":306,"title":{},"body":{"injectables/CulturasService.html":{}}}],["cadastradas",{"_index":621,"title":{},"body":{"index.html":{}}}],["cadastrado",{"_index":518,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["cadastro",{"_index":600,"title":{},"body":{"index.html":{}}}],["campo",{"_index":414,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["caracteres",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chapec",{"_index":115,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["check",{"_index":658,"title":{},"body":{"index.html":{}}}],["cidade",{"_index":102,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":53,"title":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["classes",{"_index":57,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"overview.html":{}}}],["clicks",{"_index":680,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":663,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_culturasmodule",{"_index":263,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_exports",{"_index":265,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_providers",{"_index":264,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule",{"_index":415,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_exports",{"_index":416,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_providers",{"_index":417,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule",{"_index":498,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_exports",{"_index":499,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_providers",{"_index":500,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cnpj",{"_index":133,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["column",{"_index":144,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["column({unique",{"_index":467,"title":{},"body":{"entities/Produtor.html":{}}}],["com",{"_index":367,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"index.html":{}}}],["completo",{"_index":137,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["configmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":241,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["constructor",{"_index":275,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["constructor(culturarepository",{"_index":276,"title":{},"body":{"injectables/CulturasService.html":{}}}],["constructor(private",{"_index":236,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["constructor(repo",{"_index":425,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["construída",{"_index":590,"title":{},"body":{"index.html":{}}}],["conter",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":163,"title":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["controller('culturas",{"_index":235,"title":{},"body":{"controllers/CulturasController.html":{}}}],["controller('fazendas",{"_index":392,"title":{},"body":{"controllers/FazendasController.html":{}}}],["controller('produtores",{"_index":495,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["controllers",{"_index":165,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["count",{"_index":331,"title":{},"body":{"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["countbyestado",{"_index":353,"title":{},"body":{"controllers/FazendasController.html":{}}}],["countbyrubro",{"_index":171,"title":{},"body":{"controllers/CulturasController.html":{}}}],["countculturasbyrubro",{"_index":273,"title":{},"body":{"injectables/CulturasService.html":{}}}],["countfazendasbyestado",{"_index":423,"title":{},"body":{"injectables/FazendasService.html":{}}}],["coverage",{"_index":520,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":131,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["create",{"_index":172,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["create(@body",{"_index":240,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(body",{"_index":189,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(data",{"_index":283,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["createculturadto",{"_index":56,"title":{"classes/CreateCulturaDto.html":{}},"body":{"classes/CreateCulturaDto.html":{},"controllers/CulturasController.html":{},"coverage.html":{}}}],["createfazendadto",{"_index":96,"title":{"classes/CreateFazendaDto.html":{}},"body":{"classes/CreateFazendaDto.html":{},"controllers/FazendasController.html":{},"coverage.html":{}}}],["createfazendadto})@apiresponse({status",{"_index":364,"title":{},"body":{"controllers/FazendasController.html":{}}}],["createprodutordto",{"_index":125,"title":{"classes/CreateProdutorDto.html":{}},"body":{"classes/CreateProdutorDto.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["createquerybuilder('cultura",{"_index":328,"title":{},"body":{"injectables/CulturasService.html":{}}}],["createquerybuilder('fazenda",{"_index":453,"title":{},"body":{"injectables/FazendasService.html":{}}}],["criada",{"_index":366,"title":{},"body":{"controllers/FazendasController.html":{}}}],["criado",{"_index":477,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["criar",{"_index":191,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["cultivado",{"_index":88,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura",{"_index":74,"title":{"entities/Cultura.html":{}},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"coverage.html":{},"index.html":{}}}],["cultura'})@apibody({type",{"_index":194,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura'})@apiparam({name",{"_index":210,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto",{"_index":228,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto.ts",{"_index":59,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["cultura.dto.ts:11",{"_index":78,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:14",{"_index":92,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:5",{"_index":85,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:8",{"_index":89,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.fazenda",{"_index":340,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturarepository",{"_index":280,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturas",{"_index":168,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"index.html":{}}}],["culturas.controller",{"_index":268,"title":{},"body":{"modules/CulturasModule.html":{}}}],["culturas.entity",{"_index":267,"title":{},"body":{"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["culturas.service",{"_index":224,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{}}}],["culturas/culturas.entity",{"_index":349,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturas/culturas.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["culturaschema",{"_index":225,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["culturaschema.validate(body",{"_index":243,"title":{},"body":{"controllers/CulturasController.html":{}}}],["culturascontroller",{"_index":164,"title":{"controllers/CulturasController.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"coverage.html":{}}}],["culturasexistentes",{"_index":301,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturasmodule",{"_index":11,"title":{"modules/CulturasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules.html":{},"overview.html":{}}}],["culturasservice",{"_index":223,"title":{"injectables/CulturasService.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"coverage.html":{},"overview.html":{}}}],["custom((value",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":81,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"index.html":{}}}],["dados",{"_index":480,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["das",{"_index":446,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["dashboard",{"_index":620,"title":{},"body":{"index.html":{}}}],["data",{"_index":139,"title":{},"body":{"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["data.area",{"_index":313,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.areaagricultavel",{"_index":440,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areatotal",{"_index":443,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areavegetacao",{"_index":441,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.fazendaid",{"_index":297,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.identidade",{"_index":515,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["data.safra",{"_index":307,"title":{},"body":{"injectables/CulturasService.html":{}}}],["database",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":182,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["debe",{"_index":403,"title":{},"body":{"controllers/FazendasController.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["decorators",{"_index":67,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{}}}],["default",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":77,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["delete",{"_index":217,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["delete(':id",{"_index":260,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":208,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete()@apioperation({summary",{"_index":376,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["deleted",{"_index":326,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":649,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":668,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":659,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":679,"title":{},"body":{"index.html":{}}}],["description",{"_index":70,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"index.html":{},"properties.html":{}}}],["deve",{"_index":315,"title":{},"body":{"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":634,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":521,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentação",{"_index":626,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":227,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["dto/culturas.dto",{"_index":226,"title":{},"body":{"controllers/CulturasController.html":{}}}],["dto/fazendas.dto",{"_index":388,"title":{},"body":{"controllers/FazendasController.html":{}}}],["dto/produtores.dto",{"_index":492,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["e",{"_index":596,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":644,"title":{},"body":{"index.html":{}}}],["eager",{"_index":148,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["edição",{"_index":601,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":583,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":656,"title":{},"body":{"index.html":{}}}],["em",{"_index":75,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"miscellaneous/variables.html":{}}}],["encontrada",{"_index":300,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["ensure",{"_index":654,"title":{},"body":{"index.html":{}}}],["entities",{"_index":142,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"overview.html":{}}}],["entity",{"_index":141,"title":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"coverage.html":{}}}],["error",{"_index":242,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["esperança",{"_index":121,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["est",{"_index":517,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["estado",{"_index":103,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estado')@apioperation({summary",{"_index":359,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estados",{"_index":361,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estar",{"_index":611,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":95,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"index.html":{}}}],["exatamente",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excede",{"_index":320,"title":{},"body":{"injectables/CulturasService.html":{}}}],["excedida",{"_index":318,"title":{},"body":{"injectables/CulturasService.html":{}}}],["exclusão",{"_index":602,"title":{},"body":{"index.html":{}}}],["exemplocnpj",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplocpf",{"_index":130,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplonome",{"_index":136,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exibir",{"_index":619,"title":{},"body":{"index.html":{}}}],["existe",{"_index":513,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["existente",{"_index":487,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["export",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["express",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":161,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["false})@joincolumn({name",{"_index":149,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["fast",{"_index":672,"title":{},"body":{"index.html":{}}}],["fazenda",{"_index":82,"title":{"entities/Fazenda.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"index.html":{}}}],["fazenda'})@apibody({type",{"_index":363,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda'})@apiquery({name",{"_index":204,"title":{},"body":{"controllers/CulturasController.html":{}}}],["fazenda.areaagricultavel",{"_index":462,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.areatotal",{"_index":317,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazenda.areavegetacao",{"_index":464,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.culturas",{"_index":147,"title":{},"body":{"entities/Cultura.html":{}}}],["fazenda.dto",{"_index":389,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda.dto.ts",{"_index":98,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["fazenda.dto.ts:11",{"_index":116,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:14",{"_index":119,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:17",{"_index":112,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:20",{"_index":109,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:23",{"_index":114,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:5",{"_index":124,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:8",{"_index":122,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazendaid",{"_index":63,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["fazendarepository",{"_index":278,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazendas",{"_index":352,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["fazendas.controller",{"_index":420,"title":{},"body":{"modules/FazendasModule.html":{}}}],["fazendas.entity",{"_index":419,"title":{},"body":{"modules/FazendasModule.html":{},"injectables/FazendasService.html":{}}}],["fazendas.service",{"_index":386,"title":{},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{}}}],["fazendas/fazendas.entity",{"_index":160,"title":{},"body":{"entities/Cultura.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["fazendas/fazendas.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["fazendaschema",{"_index":387,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fazendaschema.validate(body",{"_index":394,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazendascontroller",{"_index":350,"title":{"controllers/FazendasController.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"coverage.html":{}}}],["fazendasmodule",{"_index":13,"title":{"modules/FazendasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FazendasModule.html":{},"modules.html":{},"overview.html":{}}}],["fazendasservice",{"_index":385,"title":{"injectables/FazendasService.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"overview.html":{}}}],["features",{"_index":683,"title":{},"body":{"index.html":{}}}],["few",{"_index":674,"title":{},"body":{"index.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["filter(c",{"_index":304,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findall",{"_index":173,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["findbyfazenda",{"_index":174,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(@query('fazendaid",{"_index":251,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(fazendaid",{"_index":202,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazendaid",{"_index":274,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findbyfazendaid(fazendaid",{"_index":287,"title":{},"body":{"injectables/CulturasService.html":{}}}],["focus",{"_index":682,"title":{},"body":{"index.html":{}}}],["fornecido",{"_index":604,"title":{},"body":{"index.html":{}}}],["framework",{"_index":581,"title":{},"body":{"index.html":{}}}],["funcionalidades",{"_index":598,"title":{},"body":{"index.html":{}}}],["function",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":574,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":677,"title":{},"body":{"index.html":{}}}],["garantir",{"_index":607,"title":{},"body":{"index.html":{}}}],["generate",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generaterandomname",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatereadme",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatevalidcnpj",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatevalidcpf",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generator",{"_index":140,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["generator.ts",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gerenciar",{"_index":593,"title":{},"body":{"index.html":{}}}],["get('/count",{"_index":177,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["get('/fazenda",{"_index":250,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/fazenda')@apioperation({summary",{"_index":203,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/total",{"_index":372,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get(':id/uso",{"_index":380,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count",{"_index":406,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count')@apioperation({summary",{"_index":356,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get()@apioperation({summary",{"_index":199,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["getrawmany",{"_index":333,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["getrawone",{"_index":455,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getting",{"_index":577,"title":{"index.html":{}},"body":{}}],["gettotalarea",{"_index":354,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao",{"_index":424,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao(fazendaid",{"_index":433,"title":{},"body":{"injectables/FazendasService.html":{}}}],["groupby('cultura.rubro",{"_index":332,"title":{},"body":{"injectables/CulturasService.html":{}}}],["groupby('fazenda.estado",{"_index":458,"title":{},"body":{"injectables/FazendasService.html":{}}}],["gráfica",{"_index":627,"title":{},"body":{"index.html":{}}}],["gráfico",{"_index":184,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["gráficos",{"_index":623,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["hectares",{"_index":76,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"index.html":{}}}],["helpers",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:8080/index.html",{"_index":628,"title":{},"body":{"index.html":{}}}],["id",{"_index":83,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["identidade",{"_index":128,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["igual",{"_index":404,"title":{},"body":{"controllers/FazendasController.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["index",{"_index":60,"title":{"index.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["informada",{"_index":316,"title":{},"body":{"injectables/CulturasService.html":{}}}],["information",{"_index":661,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":685,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":270,"title":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["injectables",{"_index":271,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"overview.html":{}}}],["injectrepository",{"_index":292,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["injectrepository(cultura",{"_index":293,"title":{},"body":{"injectables/CulturasService.html":{}}}],["injectrepository(fazenda",{"_index":295,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["injectrepository(produtor",{"_index":512,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["install",{"_index":676,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":632,"title":{},"body":{"index.html":{}}}],["integer",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inteiro",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inválida",{"_index":448,"title":{},"body":{"injectables/FazendasService.html":{}}}],["inválidos",{"_index":481,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["isglobal",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["j",{"_index":319,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/ProdutoresService.html":{}}}],["joi.number",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().integer().positive().required().messages",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().length(2).uppercase().required().messages",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().min(3).required().messages",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required().messages",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uuid().required().messages",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":158,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["key",{"_index":651,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["letras",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":686,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":689,"title":{},"body":{"index.html":{}}}],["limit",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limite",{"_index":321,"title":{},"body":{"injectables/CulturasService.html":{}}}],["listar",{"_index":200,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["looking",{"_index":662,"title":{},"body":{"index.html":{}}}],["maior",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mais",{"_index":614,"title":{},"body":{"index.html":{}}}],["maiúsculas",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makes",{"_index":670,"title":{},"body":{"index.html":{}}}],["managing",{"_index":684,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":157,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["manytoone(undefined",{"_index":146,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["mapeamento",{"_index":181,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["matching",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":666,"title":{},"body":{"index.html":{}}}],["max(2100",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menor",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menos",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messages",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":169,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["min(1900",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min(2",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":573,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":688,"title":{},"body":{"index.html":{}}}],["mode",{"_index":637,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":660,"title":{},"body":{"index.html":{}}}],["mínimo",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":162,"title":{},"body":{"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["nest",{"_index":687,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":591,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":678,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":94,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["new",{"_index":245,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["node.js",{"_index":580,"title":{},"body":{"index.html":{}}}],["nome",{"_index":87,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["nomeprodutor",{"_index":129,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{}}}],["notfoundexception",{"_index":437,"title":{},"body":{"injectables/FazendasService.html":{}}}],["notfoundexception('fazenda",{"_index":460,"title":{},"body":{"injectables/FazendasService.html":{}}}],["nova",{"_index":193,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{}}}],["novo",{"_index":475,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["number",{"_index":66,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{}}}],["number(result?.totalarea",{"_index":456,"title":{},"body":{"injectables/FazendasService.html":{}}}],["number.base",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.integer",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.max",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.min",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.positive",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["não",{"_index":113,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"index.html":{}}}],["número",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o",{"_index":180,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obrigatório",{"_index":254,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["official",{"_index":667,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":347,"title":{},"body":{"entities/Fazenda.html":{}}}],["onetomany(undefined",{"_index":339,"title":{},"body":{"entities/Fazenda.html":{}}}],["optional",{"_index":197,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["os",{"_index":484,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["ou",{"_index":132,"title":{},"body":{"classes/CreateProdutorDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"index.html":{},"overview.html":{}}}],["outro",{"_index":519,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["overview",{"_index":694,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":549,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":73,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/ProdutoresService.html":{},"index.html":{}}}],["param",{"_index":221,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["parameters",{"_index":196,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["parseint(process.env.db_port",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["partial",{"_index":284,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["parâmetro",{"_index":253,"title":{},"body":{"controllers/CulturasController.html":{}}}],["password",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["pelo",{"_index":605,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["permitir",{"_index":599,"title":{},"body":{"index.html":{}}}],["pg",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["pizza",{"_index":185,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["plantada",{"_index":624,"title":{},"body":{"index.html":{}}}],["plantadas",{"_index":183,"title":{},"body":{"controllers/CulturasController.html":{},"index.html":{}}}],["platform",{"_index":665,"title":{},"body":{"index.html":{}}}],["pode",{"_index":106,"title":{},"body":{"classes/CreateFazendaDto.html":{},"index.html":{}}}],["por",{"_index":360,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["port",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["positive",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["positivo",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possible",{"_index":657,"title":{},"body":{"index.html":{}}}],["post",{"_index":218,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["post()@apioperation({summary",{"_index":190,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["postgres",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":592,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":167,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["primarygeneratedcolumn",{"_index":156,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":152,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["private",{"_index":294,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["process.env.db_database",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":639,"title":{},"body":{"index.html":{}}}],["produtor",{"_index":123,"title":{"entities/Produtor.html":{}},"body":{"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"modules/FazendasModule.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"index.html":{}}}],["produtor'})@apiresponse({status",{"_index":476,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto",{"_index":493,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto.ts",{"_index":127,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["produtor.dto.ts:15",{"_index":138,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtor.dto.ts:9",{"_index":135,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtores",{"_index":473,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{}}}],["produtores.controller",{"_index":503,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["produtores.entity",{"_index":502,"title":{},"body":{"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["produtores.service",{"_index":490,"title":{},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{}}}],["produtores/produtores.entity",{"_index":348,"title":{},"body":{"entities/Fazenda.html":{},"modules/FazendasModule.html":{}}}],["produtores/produtores.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["produtorescontroller",{"_index":471,"title":{"controllers/ProdutoresController.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{}}}],["produtoresmodule",{"_index":14,"title":{"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["produtoresservice",{"_index":489,"title":{"injectables/ProdutoresService.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"overview.html":{}}}],["produtoresservice,typeormmodule",{"_index":505,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["produtorid",{"_index":104,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["produtorschema",{"_index":491,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["produtorschema.validate(body",{"_index":496,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["progressive",{"_index":579,"title":{},"body":{"index.html":{}}}],["project",{"_index":629,"title":{},"body":{"index.html":{}}}],["promise",{"_index":282,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["properties",{"_index":61,"title":{"properties.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"properties.html":{}}}],["propriedade",{"_index":616,"title":{},"body":{"index.html":{}}}],["propriedades",{"_index":615,"title":{},"body":{"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["put",{"_index":219,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["put()@apioperation({summary",{"_index":214,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["quantidade",{"_index":357,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["que",{"_index":105,"title":{},"body":{"classes/CreateFazendaDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":220,"title":{},"body":{"controllers/CulturasController.html":{}}}],["rea",{"_index":71,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["readme.ts",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readonly",{"_index":237,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["ready",{"_index":648,"title":{},"body":{"index.html":{}}}],["reas",{"_index":447,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["reduce((total",{"_index":308,"title":{},"body":{"injectables/CulturasService.html":{}}}],["reflect",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["registrada",{"_index":374,"title":{},"body":{"controllers/FazendasController.html":{}}}],["registrados",{"_index":622,"title":{},"body":{"index.html":{}}}],["registro",{"_index":609,"title":{},"body":{"index.html":{}}}],["relacionada",{"_index":84,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["relations",{"_index":298,"title":{},"body":{"injectables/CulturasService.html":{}}}],["remove",{"_index":175,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remove(@body('id",{"_index":413,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["remove(@param('id",{"_index":261,"title":{},"body":{"controllers/CulturasController.html":{}}}],["remove(id",{"_index":207,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remover",{"_index":209,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["removida",{"_index":211,"title":{},"body":{"controllers/CulturasController.html":{}}}],["repo",{"_index":427,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["repository",{"_index":277,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["required",{"_index":205,"title":{},"body":{"controllers/CulturasController.html":{},"miscellaneous/variables.html":{}}}],["requiring",{"_index":673,"title":{},"body":{"index.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["restful",{"_index":589,"title":{},"body":{"index.html":{}}}],["result",{"_index":451,"title":{},"body":{"injectables/FazendasService.html":{}}}],["results",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":179,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["return",{"_index":247,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["returns",{"_index":187,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["rubro",{"_index":64,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["rubro')@apioperation({summary",{"_index":178,"title":{},"body":{"controllers/CulturasController.html":{}}}],["run",{"_index":633,"title":{},"body":{"index.html":{}}}],["runs",{"_index":655,"title":{},"body":{"index.html":{}}}],["rurais",{"_index":594,"title":{},"body":{"index.html":{}}}],["rural",{"_index":617,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["safra",{"_index":65,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sc",{"_index":117,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["scalable",{"_index":584,"title":{},"body":{"index.html":{}}}],["select('cultura.rubro",{"_index":329,"title":{},"body":{"injectables/CulturasService.html":{}}}],["select('fazenda.estado",{"_index":457,"title":{},"body":{"injectables/FazendasService.html":{}}}],["select('sum(fazenda.areatotal",{"_index":454,"title":{},"body":{"injectables/FazendasService.html":{}}}],["semeada",{"_index":108,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ser",{"_index":107,"title":{},"body":{"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":585,"title":{},"body":{"index.html":{}}}],["service",{"_index":238,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["setup",{"_index":630,"title":{},"body":{"index.html":{}}}],["side",{"_index":586,"title":{},"body":{"index.html":{}}}],["simple",{"_index":675,"title":{},"body":{"index.html":{}}}],["soja",{"_index":86,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["solo",{"_index":383,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["solo')@apioperation({summary",{"_index":381,"title":{},"body":{"controllers/FazendasController.html":{}}}],["soma",{"_index":442,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["src/.../culturas.dto.ts",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fazendas.dto.ts",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../produtores.dto.ts",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/culturas/culturas.controller.ts",{"_index":166,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{}}}],["src/culturas/culturas.controller.ts:25",{"_index":195,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:33",{"_index":201,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:40",{"_index":206,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:49",{"_index":186,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:57",{"_index":216,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:66",{"_index":212,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.entity.ts",{"_index":143,"title":{},"body":{"entities/Cultura.html":{},"coverage.html":{}}}],["src/culturas/culturas.entity.ts:13",{"_index":153,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:16",{"_index":151,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:20",{"_index":150,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:23",{"_index":154,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:26",{"_index":145,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:29",{"_index":155,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.module.ts",{"_index":266,"title":{},"body":{"modules/CulturasModule.html":{}}}],["src/culturas/culturas.service.ts",{"_index":272,"title":{},"body":{"injectables/CulturasService.html":{},"coverage.html":{}}}],["src/culturas/culturas.service.ts:17",{"_index":285,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:53",{"_index":286,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:57",{"_index":288,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:61",{"_index":291,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:65",{"_index":289,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:70",{"_index":281,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:8",{"_index":279,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/dto/create",{"_index":58,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["src/culturas/dto/culturas.dto.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/dto/create",{"_index":97,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["src/fazendas/dto/fazendas.dto.ts",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/fazendas.controller.ts",{"_index":351,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.controller.ts:25",{"_index":369,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:37",{"_index":371,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:43",{"_index":358,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:49",{"_index":375,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:55",{"_index":362,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:62",{"_index":384,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:69",{"_index":378,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:77",{"_index":377,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.entity.ts",{"_index":334,"title":{},"body":{"entities/Fazenda.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.entity.ts:11",{"_index":346,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:15",{"_index":345,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:18",{"_index":344,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:21",{"_index":338,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:24",{"_index":342,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:27",{"_index":336,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:30",{"_index":335,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:33",{"_index":337,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:36",{"_index":341,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:8",{"_index":343,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.module.ts",{"_index":418,"title":{},"body":{"modules/FazendasModule.html":{}}}],["src/fazendas/fazendas.service.ts",{"_index":422,"title":{},"body":{"injectables/FazendasService.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.service.ts:13",{"_index":430,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:17",{"_index":431,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:21",{"_index":436,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:32",{"_index":435,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:37",{"_index":428,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:41",{"_index":432,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:50",{"_index":429,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:59",{"_index":434,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:7",{"_index":426,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/main.ts",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/produtores/dto/create",{"_index":126,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["src/produtores/dto/data",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/dto/produtores.dto.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/produtores.controller.ts",{"_index":472,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["src/produtores/produtores.controller.ts:24",{"_index":482,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:34",{"_index":485,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:40",{"_index":488,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:50",{"_index":486,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.entity.ts",{"_index":465,"title":{},"body":{"entities/Produtor.html":{},"coverage.html":{}}}],["src/produtores/produtores.entity.ts:12",{"_index":469,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:6",{"_index":466,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:9",{"_index":468,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.module.ts",{"_index":501,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["src/produtores/produtores.service.ts",{"_index":506,"title":{},"body":{"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["src/produtores/produtores.service.ts:13",{"_index":508,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:21",{"_index":509,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:25",{"_index":511,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:29",{"_index":510,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:7",{"_index":507,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["start",{"_index":635,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":638,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":640,"title":{},"body":{"index.html":{}}}],["started",{"_index":578,"title":{"index.html":{}},"body":{}}],["statements",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":393,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["steps",{"_index":652,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":671,"title":{},"body":{"index.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["string.base",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.empty",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.length",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.min",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uppercase",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uuid",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suas",{"_index":595,"title":{},"body":{"index.html":{}}}],["sucesso",{"_index":368,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["sucesso'})@apiresponse({status",{"_index":478,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["suma",{"_index":399,"title":{},"body":{"controllers/FazendasController.html":{}}}],["summary",{"_index":239,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["support",{"_index":691,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":692,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":653,"title":{},"body":{"index.html":{}}}],["ter",{"_index":618,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":643,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":646,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":645,"title":{},"body":{"index.html":{}}}],["tests",{"_index":641,"title":{},"body":{"index.html":{}}}],["this.culturarepository",{"_index":327,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.create",{"_index":322,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.delete",{"_index":325,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.find",{"_index":302,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(cultura",{"_index":323,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(data",{"_index":324,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.fazendarepository.findone",{"_index":296,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.repo",{"_index":452,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.count",{"_index":450,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.delete",{"_index":449,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.find",{"_index":439,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.findone",{"_index":514,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["this.repo.findoneby",{"_index":459,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.save(data",{"_index":438,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.service.count",{"_index":407,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.countculturasbyrubro",{"_index":257,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.countfazendasbyestado",{"_index":410,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.create(body",{"_index":248,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findall",{"_index":249,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findbyfazendaid(fazendaid",{"_index":255,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.gettotalarea",{"_index":409,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.getusodosolodistribuicao(id",{"_index":412,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.remove(id",{"_index":262,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.update(body",{"_index":259,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["throw",{"_index":244,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["tipo",{"_index":382,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["todas",{"_index":370,"title":{},"body":{"controllers/FazendasController.html":{}}}],["todos",{"_index":483,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["total",{"_index":111,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["totalarea",{"_index":408,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["trim",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{}}}],["type",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["typeof",{"_index":312,"title":{},"body":{"injectables/CulturasService.html":{}}}],["typeorm",{"_index":159,"title":{},"body":{"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["typeormmodule.forfeature([cultura",{"_index":269,"title":{},"body":{"modules/CulturasModule.html":{}}}],["typeormmodule.forfeature([fazenda",{"_index":421,"title":{},"body":{"modules/FazendasModule.html":{}}}],["typeormmodule.forfeature([produtor",{"_index":504,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["typeormmodule.forroot",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["uf",{"_index":118,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ui",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["ultrapasse",{"_index":608,"title":{},"body":{"index.html":{}}}],["um",{"_index":474,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":192,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":444,"title":{},"body":{"injectables/FazendasService.html":{}}}],["unique",{"_index":470,"title":{},"body":{"entities/Produtor.html":{}}}],["unit",{"_index":642,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":188,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["unlicensed",{"_index":699,"title":{},"body":{"properties.html":{}}}],["update",{"_index":176,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["update(@body",{"_index":258,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(body",{"_index":213,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(data",{"_index":290,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["username",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["uso",{"_index":625,"title":{},"body":{"index.html":{}}}],["usodosolo",{"_index":355,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(@param('id",{"_index":411,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(id",{"_index":379,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usuário",{"_index":606,"title":{},"body":{"index.html":{}}}],["utilizada",{"_index":72,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/CulturasService.html":{}}}],["uuid",{"_index":80,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uuidv4",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validar",{"_index":603,"title":{},"body":{"index.html":{}}}],["validator",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.length",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":701,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetación",{"_index":402,"title":{},"body":{"controllers/FazendasController.html":{}}}],["vegetação",{"_index":463,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["version",{"_index":697,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["válido",{"_index":134,"title":{},"body":{"classes/CreateProdutorDto.html":{},"miscellaneous/variables.html":{}}}],["várias",{"_index":610,"title":{},"body":{"index.html":{}}}],["watch",{"_index":636,"title":{},"body":{"index.html":{}}}],["y",{"_index":401,"title":{},"body":{"controllers/FazendasController.html":{}}}],["yarn",{"_index":631,"title":{},"body":{"index.html":{}}}],["you're",{"_index":647,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CulturasModule\n                        \n                        \n                            FazendasModule\n                        \n                        \n                            ProdutoresModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProdutoresModule } from './produtores/produtores.module';\nimport { FazendasModule } from './fazendas/fazendas.module';\nimport { CulturasModule } from './culturas/culturas.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT ?? '5432', 10),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    ProdutoresModule,\n    FazendasModule,\n    CulturasModule,\n  ],\n})\nexport class AppModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCulturaDto.html":{"url":"classes/CreateCulturaDto.html","title":"class - CreateCulturaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCulturaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/dto/create-cultura.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área utilizada para a cultura (em hectares)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-da-fazenda', description: 'ID da fazenda relacionada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Soja', description: 'Nome do rubro cultivado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2024, description: 'Ano da safra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCulturaDto {\n  @ApiProperty({ example: 'uuid-da-fazenda', description: 'ID da fazenda relacionada' })\n  fazendaId: string;\n\n  @ApiProperty({ example: 'Soja', description: 'Nome do rubro cultivado' })\n  rubro: string;\n\n  @ApiProperty({ example: 50, description: 'Área utilizada para a cultura (em hectares)' })\n  area: number;\n\n  @ApiProperty({ example: 2024, description: 'Ano da safra' })\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFazendaDto.html":{"url":"classes/CreateFazendaDto.html","title":"class - CreateFazendaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFazendaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/dto/create-fazenda.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, description: 'Área total da fazenda em hectares'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que não pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Chapecó', description: 'Cidade da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'SC', description: 'Estado (UF)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Fazenda Boa Esperança', description: 'Nome da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-do-produtor', description: 'ID do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateFazendaDto {\n  @ApiProperty({ example: 'uuid-do-produtor', description: 'ID do produtor' })\n  produtorId: string;\n\n  @ApiProperty({ example: 'Fazenda Boa Esperança', description: 'Nome da fazenda' })\n  nome: string;\n\n  @ApiProperty({ example: 'Chapecó', description: 'Cidade da fazenda' })\n  cidade: string;\n\n  @ApiProperty({ example: 'SC', description: 'Estado (UF)' })\n  estado: string;\n\n  @ApiProperty({ example: 100, description: 'Área total da fazenda em hectares' })\n  areaTotal: number;\n\n  @ApiProperty({ example: 50, description: 'Área que pode ser semeada' })\n  areaAgricultavel: number;\n\n  @ApiProperty({ example: 50, description: 'Área que não pode ser semeada' })\n  areaVegetacao: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProdutorDto.html":{"url":"classes/CreateProdutorDto.html","title":"class - CreateProdutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProdutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/dto/create-produtor.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploCpf, description: 'CPF ou CNPJ válido do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploNome, description: 'Nome completo do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exemploCpf, exemploNome } from './data-generator';\n\nexport class CreateProdutorDto {\n  @ApiProperty({\n    example: exemploCpf,\n    description: 'CPF ou CNPJ válido do produtor',\n  })\n  identidade: string;\n\n  @ApiProperty({\n    example: exemploNome,\n    description: 'Nome completo do produtor',\n  })\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cultura.html":{"url":"entities/Cultura.html","title":"entity - Cultura","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cultura\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                    \n                                fazenda\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fazenda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fazenda\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, fazenda => fazenda.culturas, {eager: false})@JoinColumn({name: 'fazendaId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Entity()\nexport class Cultura {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  fazendaId: string;\n\n  @ManyToOne(() => Fazenda, fazenda => fazenda.culturas, { eager: false })\n  @JoinColumn({ name: 'fazendaId' })\n  fazenda: Fazenda;\n\n  @Column()\n  rubro: string;\n\n  @Column()\n  area: number;\n\n  @Column()\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CulturasController.html":{"url":"controllers/CulturasController.html","title":"controller - CulturasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CulturasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                culturas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                countByRubro\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findByFazenda\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByRubro()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-rubro')@ApiOperation({summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar culturas'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findByFazenda\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByFazenda(fazendaId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/fazenda')@ApiOperation({summary: 'Listar culturas de uma fazenda'})@ApiQuery({name: 'fazendaId', required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Remover uma cultura'})@ApiParam({name: 'id', required: true, description: 'ID da cultura a ser removida'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  Query,\n  Param,\n  BadRequestException\n} from '@nestjs/common';\nimport { CulturasService } from './culturas.service';\nimport { culturaSchema } from './dto/culturas.dto';\nimport { CreateCulturaDto } from './dto/create-cultura.dto';\nimport { ApiTags, ApiBody, ApiQuery, ApiParam, ApiOperation } from '@nestjs/swagger';\n\n@ApiTags('Culturas')\n@Controller('culturas')\nexport class CulturasController {\n  constructor(private readonly service: CulturasService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async create(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar culturas' })\n  async findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('/fazenda')\n  @ApiOperation({ summary: 'Listar culturas de uma fazenda' })\n  @ApiQuery({ name: 'fazendaId', required: true })\n  async findByFazenda(@Query('fazendaId') fazendaId: string) {\n    if (!fazendaId) {\n      throw new BadRequestException('O parâmetro fazendaId é obrigatório.');\n    }\n    return this.service.findByFazendaId(fazendaId);\n  }\n\n  @Get('/count-by-rubro')\n  @ApiOperation({ summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)' })\n  async countByRubro() {\n    const data = await this.service.countCulturasByRubro();\n    return data;\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async update(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Remover uma cultura' })\n  @ApiParam({ name: 'id', required: true, description: 'ID da cultura a ser removida' })\n  async remove(@Param('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O parâmetro id é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CulturasModule.html":{"url":"modules/CulturasModule.html","title":"module - CulturasModule","body":"\n                   \n\n\n\n\n    Modules\n    CulturasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_CulturasModule_exports\n\n\n\n\nCulturasService \n\nCulturasService \n\n\n\nCulturasModule\n\nCulturasModule\n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/culturas/culturas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CulturasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Cultura } from './culturas.entity';\nimport { CulturasService } from './culturas.service';\nimport { CulturasController } from './culturas.controller';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Cultura, Fazenda])],\n  providers: [CulturasService],\n  controllers: [CulturasController],\n  exports: [CulturasService],\n})\nexport class CulturasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CulturasService.html":{"url":"injectables/CulturasService.html","title":"injectable - CulturasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CulturasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countCulturasByRubro\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByFazendaId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(culturaRepository: Repository, fazendaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/culturas/culturas.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        culturaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fazendaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countCulturasByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countCulturasByRubro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByFazendaId\n                        \n                    \n                \n            \n            \n                \nfindByFazendaId(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Cultura } from './culturas.entity';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Injectable()\nexport class CulturasService {\n  constructor(\n    @InjectRepository(Cultura)\n    private culturaRepository: Repository,\n\n    @InjectRepository(Fazenda)\n    private fazendaRepository: Repository,\n  ) { }\n\n  async create(data: Partial) {\n    const fazenda = await this.fazendaRepository.findOne({\n      where: { id: data.fazendaId },\n      relations: ['culturas'],\n    });\n\n    if (!fazenda) {\n      throw new BadRequestException('Fazenda não encontrada');\n    }\n\n    const culturasExistentes = await this.culturaRepository.find({\n      where: { fazenda: { id: data.fazendaId } },\n    });\n\n    const areaOcupadaNaSafra = culturasExistentes\n      .filter(c => c.fazendaId === data.fazendaId && c.safra === data.safra)\n      .reduce((total, c) => total + c.area, 0);\n\n    if (typeof data.area !== 'number') {\n      throw new BadRequestException('Área da cultura deve ser informada');\n    }\n\n    if (areaOcupadaNaSafra + data.area > fazenda.areaTotal) {\n      throw new BadRequestException(\n        `Área total da fazenda (${fazenda.areaTotal}) excedida: área já utilizada (${areaOcupadaNaSafra}), nova cultura excede limite.`,\n      );\n    }\n\n    const cultura = this.culturaRepository.create({\n      ...data,\n      fazenda: fazenda,\n    });\n\n    return this.culturaRepository.save(cultura);\n  }\n\n  findAll() {\n    return this.culturaRepository.find();\n  }\n\n  findByFazendaId(fazendaId: string) {\n    return this.culturaRepository.find({ where: { fazenda: { id: fazendaId } } });\n  }\n\n  update(data: Partial) {\n    return this.culturaRepository.save(data);\n  }\n\n  async remove(id: string) {\n    await this.culturaRepository.delete({ id });\n    return { deleted: true };\n  }\n\n  async countCulturasByRubro(): Promise {\n    return this.culturaRepository\n      .createQueryBuilder('cultura')\n      .select('cultura.rubro', 'rubro')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('cultura.rubro')\n      .getRawMany();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Fazenda.html":{"url":"entities/Fazenda.html","title":"entity - Fazenda","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Fazenda\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                culturas\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                produtor\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        culturas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cultura[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cultura => cultura.fazenda)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        produtor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Produtor\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: false})@JoinColumn({name: 'produtorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, JoinColumn, ManyToOne, OneToMany } from 'typeorm';\nimport { Produtor } from '../produtores/produtores.entity';\nimport { Cultura } from '../culturas/culturas.entity';\n\n@Entity()\nexport class Fazenda {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  produtorId: string;\n\n  @ManyToOne(() => Produtor, { eager: false })\n  @JoinColumn({ name: 'produtorId' })\n  produtor: Produtor;\n\n  @Column()\n  nome: string;\n\n  @Column()\n  cidade: string;\n\n  @Column()\n  estado: string;\n\n  @Column()\n  areaTotal: number;\n\n  @Column()\n  areaAgricultavel: number;\n\n  @Column()\n  areaVegetacao: number;\n\n  @OneToMany(() => Cultura, cultura => cultura.fazenda)\n  culturas: Cultura[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FazendasController.html":{"url":"controllers/FazendasController.html","title":"controller - FazendasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FazendasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fazendas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Async\n                                countByEstado\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    Async\n                                usoDoSolo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Retorna a quantidade de fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByEstado()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-estado')@ApiOperation({summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova fazenda'})@ApiBody({type: CreateFazendaDto})@ApiResponse({status: 201, description: 'Fazenda criada com sucesso'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/total-area')@ApiOperation({summary: 'Retorna a área total registrada'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover uma fazenda'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma fazenda'})@ApiBody({type: CreateFazendaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        usoDoSolo\n                        \n                    \n                \n            \n            \n                \n                        \n                    usoDoSolo(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/uso-do-solo')@ApiOperation({summary: 'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n  Param\n} from '@nestjs/common';\nimport { FazendasService } from './fazendas.service';\nimport { fazendaSchema } from './dto/fazendas.dto';\nimport { CreateFazendaDto } from './dto/create-fazenda.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Fazendas')\n@Controller('fazendas')\nexport class FazendasController {\n  constructor(private readonly service: FazendasService) { }\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  @ApiResponse({ status: 201, description: 'Fazenda criada com sucesso' })\n  async create(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    if (body.areaAgricultavel + body.areaVegetacao !== body.areaTotal) {\n      throw new BadRequestException('La suma de área agricultable y vegetación debe ser igual al área total');\n    }\n\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todas as fazendas' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: 'Retorna a quantidade de fazendas' })\n  async count() {\n    return this.service.count();\n  }\n\n  @Get('/total-area')\n  @ApiOperation({ summary: 'Retorna a área total registrada' })\n  async getTotalArea() {\n    return { totalArea: await this.service.getTotalArea() };\n  }\n\n  @Get('/count-by-estado')\n  @ApiOperation({ summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)' })\n  async countByEstado() {\n    const data = await this.service.countFazendasByEstado();\n    return data;\n  }\n\n  @Get(':id/uso-do-solo')\n    @ApiOperation({ summary: 'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)' })\n  async usoDoSolo(@Param('id') id: string) {\n    return this.service.getUsoDoSoloDistribuicao(id);\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  async update(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover uma fazenda' })\n  async remove(@Body('id') id: string) {\n    if (!id) throw new BadRequestException('O campo id é obrigatório');\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FazendasModule.html":{"url":"modules/FazendasModule.html","title":"module - FazendasModule","body":"\n                   \n\n\n\n\n    Modules\n    FazendasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\n\nFazendasService \n\nFazendasService \n\n\n\nFazendasModule\n\nFazendasModule\n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fazendas/fazendas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FazendasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Fazenda } from './fazendas.entity';\nimport { FazendasService } from './fazendas.service';\nimport { FazendasController } from './fazendas.controller';\nimport { Produtor } from '../produtores/produtores.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Fazenda, Produtor])],\n  providers: [FazendasService],\n  controllers: [FazendasController],\n  exports: [FazendasService, TypeOrmModule],\n})\nexport class FazendasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FazendasService.html":{"url":"injectables/FazendasService.html","title":"injectable - FazendasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FazendasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                countFazendasByEstado\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    Async\n                                getUsoDoSoloDistribuicao\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/fazendas/fazendas.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countFazendasByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countFazendasByEstado()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsoDoSoloDistribuicao\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsoDoSoloDistribuicao(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Fazenda } from './fazendas.entity';\n\n@Injectable()\nexport class FazendasService {\n  constructor(\n    @InjectRepository(Fazenda)\n    private readonly repo: Repository,\n  ) { }\n\n  create(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  async update(data: Partial) {\n    const areaAgricultavel = data.areaAgricultavel ?? 0;\n    const areaVegetacao = data.areaVegetacao ?? 0;\n    const soma = areaAgricultavel + areaVegetacao;\n    if (data.areaTotal !== undefined && soma > data.areaTotal) {\n      throw new BadRequestException('Soma das áreas inválida');\n    }\n\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n\n  async count(): Promise {\n    return this.repo.count();\n  }\n\n  async getTotalArea(): Promise {\n    const result = await this.repo\n      .createQueryBuilder('fazenda')\n      .select('SUM(fazenda.areaTotal)', 'totalArea')\n      .getRawOne();\n\n    return Number(result?.totalArea) || 0;\n  }\n\n  async countFazendasByEstado(): Promise {\n    return this.repo\n      .createQueryBuilder('fazenda')\n      .select('fazenda.estado', 'estado')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('fazenda.estado')\n      .getRawMany();\n  }\n\n  async getUsoDoSoloDistribuicao(fazendaId: string) {\n    const fazenda = await this.repo.findOneBy({ id: fazendaId });\n\n    if (!fazenda) {\n      throw new NotFoundException('Fazenda não encontrada');\n    }\n\n    return [\n      { tipo: 'Agricultável', area: fazenda.areaAgricultavel },\n      { tipo: 'Vegetação', area: fazenda.areaVegetacao },\n    ];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Produtor.html":{"url":"entities/Produtor.html","title":"entity - Produtor","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Produtor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Produtor {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true }) \n  identidade: string;\n\n  @Column()\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProdutoresController.html":{"url":"controllers/ProdutoresController.html","title":"controller - ProdutoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProdutoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                produtores\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateProdutorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um novo produtor'})@ApiResponse({status: 201, description: 'Produtor criado com sucesso'})@ApiResponse({status: 400, description: 'Dados inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateProdutorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtores'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover um produtor'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar um produtor existente'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ProdutoresService } from './produtores.service';\nimport { produtorSchema } from './dto/produtores.dto';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { CreateProdutorDto } from './dto/create-produtor.dto';\n\n@ApiTags('produtores')\n@Controller('produtores')\nexport class ProdutoresController {\n  constructor(private readonly service: ProdutoresService) { }\n\n  @Post()\n  @ApiOperation({ summary: 'Criar um novo produtor' })\n  @ApiResponse({ status: 201, description: 'Produtor criado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  async create(@Body() body: CreateProdutorDto) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todos os produtores' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar um produtor existente' })\n  async update(@Body() body: any /* : CreateProdutorDto */) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover um produtor' })\n  async remove(@Body('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O campo \"id\" é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProdutoresModule.html":{"url":"modules/ProdutoresModule.html","title":"module - ProdutoresModule","body":"\n                   \n\n\n\n\n    Modules\n    ProdutoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nProdutoresService \n\nProdutoresService \n\n\n\nProdutoresModule\n\nProdutoresModule\n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/produtores/produtores.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProdutoresController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Produtor } from './produtores.entity';\nimport { ProdutoresService } from './produtores.service';\nimport { ProdutoresController } from './produtores.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Produtor])],\n  providers: [ProdutoresService],\n  controllers: [ProdutoresController],\n  exports: [ProdutoresService,TypeOrmModule],\n})\nexport class ProdutoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProdutoresService.html":{"url":"injectables/ProdutoresService.html","title":"injectable - ProdutoresService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProdutoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/produtores/produtores.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Produtor } from './produtores.entity';\n\n@Injectable()\nexport class ProdutoresService {\n  constructor(\n    @InjectRepository(Produtor)\n    private readonly repo: Repository,\n  ) { }\n\n  async create(data: Partial) {\n    const existe = await this.repo.findOne({ where: { identidade: data.identidade } });\n    if (existe) {\n      throw new BadRequestException('CPF/CNPJ já está cadastrado para outro produtor.');\n    }\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  update(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        generate-readme.ts\n            \n            function\n            generateReadme\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.controller.ts\n            \n            controller\n            CulturasController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/culturas/culturas.entity.ts\n            \n            entity\n            Cultura\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.service.ts\n            \n            injectable\n            CulturasService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/culturas/dto/create-cultura.dto.ts\n            \n            class\n            CreateCulturaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/culturas/dto/culturas.dto.ts\n            \n            variable\n            culturaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/dto/create-fazenda.dto.ts\n            \n            class\n            CreateFazendaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/fazendas/dto/fazendas.dto.ts\n            \n            variable\n            fazendaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.controller.ts\n            \n            controller\n            FazendasController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.entity.ts\n            \n            entity\n            Fazenda\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.service.ts\n            \n            injectable\n            FazendasService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/dto/create-produtor.dto.ts\n            \n            class\n            CreateProdutorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateRandomName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploNome\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/produtores.dto.ts\n            \n            variable\n            produtorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.controller.ts\n            \n            controller\n            ProdutoresController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/produtores/produtores.entity.ts\n            \n            entity\n            Produtor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.service.ts\n            \n            injectable\n            ProdutoresService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            cpf-cnpj-validator : ^1.0.3\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.24\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            generateRandomName   (src/.../data-generator.ts)\n                        \n                        \n                            generateReadme   (generate-readme.ts)\n                        \n                        \n                            generateValidCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            generateValidCpf   (src/.../data-generator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateRandomName\n                        \n                    \n                \n            \n            \n                \ngenerateRandomName()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCnpj\n                        \n                    \n                \n            \n            \n                \ngenerateValidCnpj()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCpf\n                        \n                    \n                \n            \n            \n                \ngenerateValidCpf()\n                \n            \n\n\n\n\n        \n    \n    generate-readme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateReadme\n                        \n                    \n                \n            \n            \n                \ngenerateReadme()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\n🧑‍🌾 Produtores API\nAPI RESTful construída com NestJS + TypeORM + PostgreSQL para gerenciar produtores rurais, suas fazendas e culturas agrícolas.\n📦 Funcionalidades\n\nPermitir o cadastro, edição e exclusão de produtores rurais.\n\nValidar o CPF ou CNPJ fornecido pelo usuário.\n\nGarantir que a soma das áreas agricultável e de vegetação não ultrapasse a área total da fazenda.\n\nPermitir o registro de várias culturas plantadas por fazenda do produtor.\n\nUm produtor pode estar associado a 0, 1 ou mais propriedades rurais.\n\nUma propriedade rural pode ter 0, 1 ou mais culturas plantadas por safra.\n\nExibir um dashboard com:\n\nTotal de fazendas cadastradas (quantidade).\nTotal de hectares registrados (área total).\nGráficos de pizza:\nPor estado.\nPor cultura plantada.\nPor uso do solo (área agricultável e vegetação).\n\n\n\n\nDocumentação gráfica: http://localhost:8080/index.html\n\n\nProject setup\nExample :$ yarn installCompile and run the project\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodRun tests\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ yarn install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CulturasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FazendasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProdutoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_exports\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nCulturasService \n\nCulturasService \n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nFazendasService \n\nFazendasService \n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\nProdutoresService \n\nProdutoresService \n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            culturaSchema   (src/.../culturas.dto.ts)\n                        \n                        \n                            exemploCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            exemploCpf   (src/.../data-generator.ts)\n                        \n                        \n                            exemploNome   (src/.../data-generator.ts)\n                        \n                        \n                            fazendaSchema   (src/.../fazendas.dto.ts)\n                        \n                        \n                            produtorSchema   (src/.../produtores.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/culturas/dto/culturas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        culturaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  fazendaId: Joi.string()\n    .uuid({ version: 'uuidv4' })\n    .required()\n    .messages({\n      'string.empty': 'O campo fazendaId é obrigatório.',\n      'string.uuid': 'O fazendaId deve ser um UUID válido.',\n    }),\n\n  rubro: Joi.string()\n    .trim()\n    .min(2)\n    .required()\n    .messages({\n      'string.empty': 'O campo rubro é obrigatório.',\n      'string.min': 'O rubro deve ter no mínimo 2 caracteres.',\n    }),\n\n  area: Joi.number()\n    .positive()\n    .required()\n    .messages({\n      'number.base': 'A área deve ser um número.',\n      'number.positive': 'A área deve ser um número positivo.',\n      'any.required': 'O campo área é obrigatório.',\n    }),\n\n  safra: Joi.number()\n    .integer()\n    .min(1900)\n    .max(2100)\n    .required()\n    .messages({\n      'number.base': 'A safra deve ser um número.',\n      'number.integer': 'A safra deve ser um número inteiro.',\n      'number.min': 'A safra deve ser maior ou igual a 1900.',\n      'number.max': 'A safra deve ser menor ou igual a 2100.',\n      'any.required': 'O campo safra é obrigatório.',\n    }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exemploCnpj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCnpj()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploCpf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCpf()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploNome\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateRandomName()\n                    \n                \n\n\n        \n    \n\n    src/fazendas/dto/fazendas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fazendaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  produtorId: Joi.string().uuid().required().messages({\n    'string.base': 'O campo produtorId deve ser uma string',\n    'string.empty': 'O campo produtorId é obrigatório',\n    'string.uuid': 'O campo produtorId deve ser um UUID válido',\n    'any.required': 'O campo produtorId é obrigatório',\n  }),\n  nome: Joi.string().min(3).required().messages({\n    'string.empty': 'O campo nome é obrigatório',\n    'string.min': 'O campo nome deve ter pelo menos {#limit} caracteres',\n  }),\n  cidade: Joi.string().required().messages({\n    'string.empty': 'O campo cidade é obrigatório',\n  }),\n  estado: Joi.string().length(2).uppercase().required().messages({\n    'string.empty': 'O campo estado é obrigatório',\n    'string.length': 'O campo estado deve conter exatamente 2 letras',\n    'string.uppercase': 'O campo estado deve estar em letras maiúsculas',\n  }),\n  areaTotal: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaTotal deve ser um número',\n    'number.integer': 'O campo areaTotal deve ser um número inteiro',\n    'number.positive': 'O campo areaTotal deve ser maior que 0',\n    'any.required': 'O campo areaTotal é obrigatório',\n  }),\n\n  areaAgricultavel: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaAgricultavel deve ser um número',\n    'number.integer': 'O campo areaAgricultavel deve ser um número inteiro',\n    'number.positive': 'O campo areaAgricultavel deve ser maior que 0',\n    'any.required': 'O campo areaAgricultavel é obrigatório',\n  }),\n  areaVegetacao: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaVegetacao deve ser um número',\n    'number.integer': 'O campo areaVegetacao deve ser um número inteiro',\n    'number.positive': 'O campo areaVegetacao deve ser maior que 0',\n    'any.required': 'O campo areaVegetacao é obrigatório',\n  }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/produtores.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        produtorSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  identidade: Joi.string()\n    .required()\n    .custom((value, helpers) => {\n      if (value.length \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
