var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.006,1,1.784]],["body/modules/AppModule.html",[0,1.633,1,3.457,2,1.386,3,1.386,4,1.743,5,1.743,6,1.386,7,1.743,8,1.743,9,2.65,10,2.65,11,2.892,12,0.043,13,2.892,14,2.892,15,2.288,16,1.743,17,1.55,18,0.478,19,0.478,20,0.41,21,3.238,22,2.591,23,0.794,24,0.894,25,1.973,26,1.242,27,3.238,28,3.238,29,3.238,30,3.238,31,2.65,32,3.238,33,3.238,34,2.273,35,3.238,36,0.627,37,3.238,38,3.238,39,3.238,40,3.238,41,3.238,42,3.238,43,3.238,44,3.238,45,3.238,46,3.238,47,3.238,48,3.238,49,3.238,50,3.238,51,3.238,52,3.238,53,0.478,54,0.228,55,0.031,56,0.031]],["title/classes/CreateCulturaDto.html",[54,0.206,57,1.784]],["body/classes/CreateCulturaDto.html",[12,0.042,18,0.449,19,0.449,20,0.385,23,0.449,36,0.952,53,0.449,54,0.214,55,0.029,56,0.029,57,2.485,58,1.853,59,4.196,60,2.488,61,0.517,62,1.563,63,2.476,64,2.203,65,2.759,66,3.125,67,2.646,68,1.691,69,3.436,70,3.337,71,2.101,72,1.952,73,3.337,74,2.849,75,1.402,76,2.849,77,2.849,78,1.211,79,3.04,80,1.077,81,2.485,82,2.841,83,1.077,84,1.125,85,4.077,86,3.04,87,4.077,88,2.194,89,4.077,90,3.04,91,4.077,92,4.077,93,3.04,94,3.583,95,1.301,96,2.996]],["title/classes/CreateFazendaDto.html",[54,0.206,97,1.784]],["body/classes/CreateFazendaDto.html",[12,0.042,18,0.37,19,0.37,20,0.317,23,0.37,36,0.99,53,0.37,54,0.177,55,0.026,56,0.026,58,1.526,61,0.426,62,1.367,67,2.675,68,1.759,69,3.574,70,3.703,71,2.148,72,2.38,76,2.492,77,2.492,78,1.26,80,1.145,81,2.173,82,2.675,83,1.145,84,0.984,88,2.574,94,3.653,95,1.072,96,3.117,97,2.173,98,4.279,99,2.05,100,2.531,101,2.902,102,2.531,103,3.342,104,2.29,105,2.902,106,3.162,107,3.703,108,2.435,109,4.525,110,2.504,111,3.566,112,2.173,113,2.504,114,2.173,115,2.504,116,3.566,117,2.504,118,3.566,119,3.566,120,2.504,121,3.566,122,3.566,123,2.504,124,1.249,125,2.504]],["title/classes/CreateProdutorDto.html",[54,0.206,126,1.784]],["body/classes/CreateProdutorDto.html",[12,0.042,18,0.519,19,0.519,20,0.446,23,0.662,36,0.868,53,0.519,54,0.248,55,0.032,56,0.032,58,2.142,61,0.597,62,1.719,68,1.542,69,3.133,71,1.994,78,1.104,80,1.139,88,2.413,94,3.45,95,1.504,96,2.732,124,1.435,126,2.732,127,4.04,128,2.876,129,3.009,130,4.04,131,3.45,132,3.133,133,3.133,134,3.133,135,3.669,136,3.514,137,3.45,138,4.483,139,3.514,140,1.683,141,3.514]],["title/entities/Cultura.html",[75,1.006,142,1.252]],["body/entities/Cultura.html",[12,0.043,18,0.461,19,0.461,20,0.395,23,0.613,36,1.03,53,0.461,54,0.22,55,0.03,56,0.03,61,0.53,62,1.591,63,2.508,64,2.476,65,2.508,66,2.841,67,2.673,68,1.829,75,1.427,78,1.31,80,1.165,83,1.222,84,1.286,142,1.775,143,1.901,144,2.553,145,3.899,146,3.119,147,2.553,148,4.148,149,3.395,150,2.553,151,3.119,152,3.119,153,2.899,154,3.119,155,3.119,156,3.119,157,2.18,158,3.395,159,3.395,160,1.196,161,2.18,162,2.553,163,1.196]],["title/controllers/CulturasController.html",[164,1.252,165,1.784]],["body/controllers/CulturasController.html",[12,0.043,18,0.279,19,0.279,20,0.239,23,0.628,24,0.521,34,1.888,36,0.868,53,0.279,54,0.133,55,0.021,56,0.021,57,3.125,61,0.321,64,2.147,65,1.016,68,1.543,71,1.109,75,1.462,78,1.105,80,0.982,82,1.557,83,0.413,84,1.329,95,0.808,108,1.557,140,1.385,163,1.72,164,0.808,165,1.763,166,0.808,167,1.544,168,1.319,169,2.846,170,1.385,171,2.63,172,3.942,173,1.385,174,1.888,175,2.892,176,1.385,177,1.385,178,2.367,179,1.887,180,2.367,181,1.763,182,2.367,183,3.134,184,2.367,185,2.367,186,2.021,187,1.887,188,2.147,189,2.147,190,1.319,191,1.319,192,2.021,193,2.936,194,2.021,195,2.892,196,1.887,197,1.888,198,1.888,199,2.971,200,1.319,201,2.755,202,1.887,203,1.887,204,1.887,205,1.887,206,3.226,207,1.887,208,0.903,209,1.887,210,2.021,211,1.887,212,2.892,213,1.887,214,1.319,215,1.319,216,2.021,217,1.887,218,1.319,219,2.021,220,2.021,221,1.887,222,1.544,223,0.903,224,1.385,225,1.544,226,1.319,227,1.887,228,1.319,229,1.887,230,1.319,231,2.878,232,2.892,233,2.892,234,3.263,235,1.887,236,1.887,237,1.319,238,1.016,239,1.319,240,3.134,241,1.319,242,1.684,243,2.755,244,2.892,245,1.888,246,1.687,247,2.367,248,2.147,249,1.319,250,1.319,251,1.887,252,1.887,253,2.021,254,2.892,255,1.763,256,1.887,257,1.016,258,1.887,259,1.319,260,1.319,261,1.887,262,1.887,263,1.319]],["title/modules/CulturasModule.html",[0,1.006,11,1.575]],["body/modules/CulturasModule.html",[0,1.693,2,1.495,3,1.495,4,1.88,5,1.88,6,1.495,7,2.65,8,2.65,11,3,12,0.043,15,2.404,16,1.88,17,1.673,18,0.516,19,0.516,20,0.443,22,2.129,23,0.81,24,0.964,25,2.129,26,1.34,53,0.516,54,0.246,55,0.032,56,0.032,75,1.201,83,0.978,161,2.441,165,3.001,166,1.911,224,2.784,225,2.859,264,2.859,265,2.859,266,2.859,267,3.494,268,2.859,269,3.494,270,3.494]],["title/injectables/CulturasService.html",[224,1.401,271,1.252]],["body/injectables/CulturasService.html",[12,0.043,18,0.311,19,0.311,20,0.267,23,0.658,24,0.58,26,0.806,34,1.007,36,0.863,53,0.311,54,0.148,55,0.023,56,0.023,61,0.357,64,1.503,65,1.132,67,1.132,72,1.503,73,1.721,75,1.433,78,1.194,80,1.024,82,1.69,83,1.091,84,1.23,108,1.132,112,1.913,114,1.282,140,1.799,160,0.806,161,1.47,163,1.709,169,1.282,170,1.503,171,2.437,173,1.503,174,1.995,176,1.503,177,1.503,188,2.239,189,1.503,194,1.47,197,2.134,198,2.134,208,1.503,223,1.503,224,1.503,242,1.995,245,1.799,246,1.608,248,2.239,257,2.022,268,1.721,271,1.343,272,1.282,273,1.721,274,4.166,275,3.139,276,2.194,277,2.103,278,3.386,279,3.756,280,2.103,281,3.139,282,2.103,283,2.569,284,2.194,285,3.267,286,2.103,287,2.103,288,3.139,289,2.103,290,2.103,291,2.194,292,2.103,293,1.47,294,2.103,295,2.194,296,1.721,297,2.103,298,3.756,299,2.103,300,2.103,301,1.721,302,3.139,303,3.756,304,3.756,305,2.103,306,2.103,307,2.103,308,2.103,309,2.103,310,2.103,311,2.103,312,1.132,313,2.103,314,3.139,315,2.103,316,1.721,317,2.103,318,3.139,319,2.103,320,1.721,321,2.103,322,2.103,323,2.103,324,2.103,325,2.103,326,2.103,327,1.47,328,2.103,329,2.103,330,2.103,331,1.721,332,1.47,333,2.103,334,1.721]],["title/entities/Fazenda.html",[83,0.641,142,1.252]],["body/entities/Fazenda.html",[12,0.043,18,0.398,19,0.398,20,0.342,23,0.638,36,1.061,53,0.398,54,0.19,55,0.027,56,0.027,61,0.458,62,1.44,67,2.74,68,1.885,75,1.751,78,1.35,80,1.2,83,0.823,84,1.193,88,2.327,100,2.635,101,3.021,102,2.635,103,3.021,104,2.07,105,3.435,124,1.442,142,1.608,143,1.644,145,3.982,147,2.207,149,3.075,150,2.207,153,2.625,157,1.885,158,3.075,159,3.075,160,1.034,162,2.207,163,1.034,169,2.635,335,2.207,336,2.697,337,2.697,338,2.697,339,2.697,340,2.697,341,3.757,342,2.697,343,2.697,344,2.697,345,2.697,346,2.697,347,2.697,348,3.757,349,2.207,350,2.697]],["title/controllers/FazendasController.html",[164,1.252,351,1.784]],["body/controllers/FazendasController.html",[12,0.043,18,0.247,19,0.247,20,0.212,23,0.594,24,0.462,36,0.826,53,0.247,54,0.118,55,0.019,56,0.019,61,0.284,63,1.753,68,1.592,71,1.01,72,1.769,78,1.14,80,0.935,83,1.067,84,1.178,95,0.716,97,2.971,104,0.801,108,0.9,112,1.986,140,1.261,163,1.417,164,0.716,166,0.716,168,1.169,170,1.261,171,2.626,173,1.261,174,1.769,176,1.261,177,1.261,178,2.156,180,3.787,181,1.605,182,2.156,183,3.666,185,3.024,186,2.582,188,2.216,189,2.139,190,1.169,191,1.169,192,1.841,193,2.602,194,1.841,197,1.769,198,1.769,199,2.809,200,1.169,201,1.841,208,0.801,210,1.841,214,1.169,215,1.169,216,1.841,218,1.841,219,1.841,220,1.841,222,1.369,223,1.261,228,1.169,230,1.169,231,2.666,234,3.327,237,1.169,238,0.9,239,1.169,240,3.234,241,1.169,242,1.56,243,2.582,245,1.769,246,1.581,247,2.156,248,2.216,249,1.169,250,1.169,253,1.169,255,1.02,257,1.417,259,1.169,260,1.169,263,1.169,332,2.582,351,1.605,352,1.369,353,3.289,354,3.695,355,3.024,356,2.634,357,1.673,358,3.024,359,1.673,360,1.673,361,3.024,362,2.634,363,1.673,364,2.634,365,1.673,366,2.156,367,2.634,368,1.841,369,2.156,370,1.673,371,2.634,372,1.673,373,2.634,374,1.673,375,2.634,376,1.673,377,1.369,378,1.673,379,1.673,380,1.673,381,2.634,382,1.673,383,2.156,384,2.666,385,1.673,386,1.261,387,1.369,388,1.169,389,1.673,390,1.673,391,2.156,392,1.673,393,1.673,394,1.369,395,2.634,396,1.673,397,1.673,398,1.673,399,1.673,400,1.673,401,1.673,402,1.673,403,1.673,404,1.673,405,1.369,406,1.673,407,1.673,408,1.673,409,1.369,410,1.673,411,1.673,412,1.673,413,1.673,414,1.369,415,1.169]],["title/modules/FazendasModule.html",[0,1.006,13,1.575]],["body/modules/FazendasModule.html",[0,1.691,2,1.491,3,1.491,4,1.875,5,1.875,6,1.491,7,2.646,8,2.646,12,0.043,13,2.998,15,2.399,16,1.875,17,1.668,18,0.514,19,0.514,20,0.442,22,2.123,23,0.809,24,0.961,25,2.717,26,1.336,53,0.514,54,0.246,55,0.032,56,0.032,83,0.763,124,1.23,166,1.908,349,2.851,351,2.997,386,2.783,387,2.851,416,2.851,417,2.851,418,2.851,419,3.483,420,2.851,421,3.483,422,3.483]],["title/injectables/FazendasService.html",[271,1.252,386,1.401]],["body/injectables/FazendasService.html",[12,0.043,18,0.315,19,0.315,20,0.27,23,0.62,24,0.589,26,0.818,34,1.021,36,0.868,53,0.315,54,0.15,55,0.023,56,0.023,61,0.362,63,1.707,64,1.519,78,1.259,80,1.029,83,0.83,84,1.046,100,1.934,102,1.934,104,1.021,114,1.3,140,1.519,160,0.818,163,1.719,170,1.519,171,2.68,173,1.519,174,2.009,176,1.519,177,1.519,188,2.394,189,1.814,197,2.147,198,2.147,208,1.519,223,1.021,238,1.148,242,2.147,245,1.519,246,1.358,248,2.394,257,2.039,271,1.358,272,1.3,276,2.217,278,2.932,283,3.847,284,2.217,285,3.284,291,2.217,293,1.491,295,1.491,296,1.746,301,1.746,312,2.039,327,1.491,331,1.746,332,3.134,334,1.746,355,3.433,383,2.597,386,1.519,409,1.746,420,1.746,423,1.746,424,4.195,425,3.173,426,1.746,427,2.133,428,2.597,429,2.133,430,2.133,431,2.133,432,2.133,433,2.133,434,3.173,435,2.133,436,2.133,437,2.133,438,2.133,439,2.597,440,1.746,441,2.133,442,2.133,443,2.597,444,3.173,445,2.133,446,2.133,447,1.746,448,1.746,449,2.133,450,1.746,451,2.133,452,2.133,453,3.173,454,3.173,455,2.133,456,2.133,457,2.133,458,2.133,459,2.133,460,2.133,461,2.133,462,1.746,463,2.133,464,1.746,465,2.133]],["title/entities/Produtor.html",[124,0.808,142,1.252]],["body/entities/Produtor.html",[12,0.042,18,0.548,19,0.548,20,0.47,23,0.548,34,2.222,36,0.98,53,0.548,54,0.262,55,0.033,56,0.033,61,0.63,62,1.779,68,1.741,78,1.247,80,1.22,84,1.397,124,1.281,129,3.085,130,4.143,142,1.986,143,2.262,145,3.706,153,3.242,157,2.593,160,1.423,466,3.037,467,3.711,468,3.711,469,3.711,470,3.711,471,3.711]],["title/controllers/ProdutoresController.html",[164,1.252,472,1.784]],["body/controllers/ProdutoresController.html",[12,0.043,18,0.339,19,0.339,20,0.291,23,0.682,24,0.633,36,0.765,53,0.339,54,0.162,55,0.024,56,0.024,61,0.39,68,1.494,71,1.666,78,1.07,80,0.865,84,1.199,95,0.981,124,1.375,126,2.816,163,1.515,164,0.981,166,0.981,168,1.602,170,1.602,171,2.493,173,1.602,174,2.08,176,1.602,177,1.602,188,2.08,189,1.892,190,1.602,191,1.602,192,2.338,197,1.892,198,1.892,199,3.228,200,1.602,201,2.338,208,1.098,210,2.338,214,1.602,215,1.602,216,2.338,218,2.338,219,2.338,220,2.338,223,1.098,228,1.602,230,1.602,234,3.228,237,1.602,238,1.234,239,1.602,240,3.036,241,1.602,242,1.602,243,3.036,245,1.892,246,1.691,248,2.08,249,1.602,250,1.602,253,1.602,255,1.397,259,1.602,260,1.602,263,1.602,366,2.739,368,2.338,369,1.876,377,1.876,391,3.234,394,2.739,414,1.876,415,1.602,472,2.039,473,1.876,474,3.234,475,3.371,476,3.346,477,2.293,478,3.346,479,2.293,480,3.346,481,3.346,482,3.346,483,2.293,484,3.346,485,3.346,486,2.293,487,2.293,488,3.346,489,2.293,490,1.602,491,1.876,492,1.602,493,2.293,494,2.293,495,2.293,496,2.293,497,3.346,498,3.346]],["title/modules/ProdutoresModule.html",[0,1.006,14,1.575]],["body/modules/ProdutoresModule.html",[0,1.705,2,1.517,3,1.517,4,1.908,5,1.908,6,1.517,7,2.668,8,2.668,12,0.042,14,3.01,15,2.426,16,1.908,17,1.698,18,0.524,19,0.524,20,0.449,22,2.161,23,0.795,24,0.979,25,2.748,26,1.359,53,0.524,54,0.25,55,0.032,56,0.032,124,0.979,166,1.929,472,3.021,490,2.79,491,2.902,499,2.902,500,2.902,501,2.902,502,3.545,503,2.902,504,3.545,505,3.545]],["title/injectables/ProdutoresService.html",[271,1.252,490,1.401]],["body/injectables/ProdutoresService.html",[12,0.043,18,0.413,19,0.413,20,0.355,23,0.702,24,0.772,26,1.073,34,1.34,36,0.92,53,0.413,54,0.197,55,0.028,56,0.028,61,0.475,74,1.955,78,1.227,80,0.965,84,1.064,124,1.064,129,1.705,140,1.845,160,1.073,163,1.821,170,1.845,171,2.465,173,1.845,174,2.274,176,1.845,177,1.845,188,2.274,189,1.845,197,2.274,198,2.274,208,1.845,223,1.845,238,1.506,242,1.34,245,1.34,246,1.197,248,2.274,257,2.074,271,1.649,272,1.705,276,2.693,278,3.319,284,2.693,285,3.598,291,2.693,293,1.955,295,1.955,320,2.29,327,1.955,426,2.29,428,3.154,439,3.154,440,2.29,450,2.29,490,1.845,503,2.29,506,2.29,507,2.798,508,2.798,509,2.798,510,2.798,511,2.798,512,2.798,513,3.854,514,2.798,515,2.798,516,2.798,517,2.798,518,2.798,519,2.798]],["title/coverage.html",[520,2.777]],["body/coverage.html",[6,1.235,12,0.042,20,0.366,36,0.559,54,0.316,55,0.028,56,0.028,57,1.759,59,2.362,60,2.362,75,0.992,83,0.632,97,1.759,98,2.362,99,2.362,124,0.796,126,1.759,127,2.362,128,2.362,131,2.017,137,2.017,142,1.917,144,2.362,164,1.917,165,1.759,167,2.362,224,1.382,226,2.017,246,1.235,271,1.917,273,2.362,312,3.173,335,2.362,351,1.759,352,2.362,386,1.382,388,2.017,423,2.362,466,2.362,472,1.759,473,2.362,490,1.382,492,2.017,506,2.362,520,2.017,521,2.362,522,2.886,523,2.886,524,2.362,525,2.362,526,5.036,527,2.362,528,5.722,529,2.886,530,3.936,531,3.936,532,2.362,533,5.198,534,2.362,535,2.886,536,2.886,537,2.362,538,2.886,539,3.632,540,3.632,541,2.017,542,2.017,543,2.017,544,2.362,545,2.362,546,2.886,547,2.886,548,2.886]],["title/dependencies.html",[3,1.504,549,2.008]],["body/dependencies.html",[3,1.671,12,0.043,24,1.078,26,1.497,31,3.196,55,0.034,56,0.034,81,2.38,95,1.671,132,2.729,134,2.729,160,1.497,550,3.905,551,3.905,552,5.179,553,3.905,554,3.905,555,3.905,556,4.789,557,3.905,558,3.905,559,3.905,560,3.905,561,3.905,562,3.905,563,3.905,564,3.905,565,3.905,566,3.905,567,3.905,568,3.905,569,3.905,570,3.905,571,3.905,572,3.905]],["title/miscellaneous/functions.html",[573,1.495,574,2.876]],["body/miscellaneous/functions.html",[6,2.272,12,0.036,55,0.036,56,0.036,61,0.703,524,4.057,525,4.057,527,4.346,537,3.384,539,2.889,540,3.847,541,3.711,542,3.711,543,3.711,573,2.52,574,3.384,575,4.135,576,4.346]],["title/index.html",[61,0.417,577,2.454,578,2.454]],["body/index.html",[12,0.041,17,1.63,55,0.024,56,0.024,66,1.43,71,0.9,72,1.917,74,1.64,75,0.807,77,1.64,82,1.263,83,0.745,96,2.677,104,1.124,106,1.64,107,2.785,112,2.677,114,1.43,124,0.939,132,1.64,133,2.798,134,1.64,160,0.9,169,2.441,181,2.441,183,3.398,184,2.785,186,1.64,193,1.43,312,1.832,353,2.785,358,1.921,361,3.816,368,2.378,384,1.921,443,1.921,447,1.921,448,1.921,462,2.785,464,2.785,474,3.277,475,2.378,520,1.64,521,1.921,579,2.347,580,2.347,581,2.347,582,3.403,583,2.347,584,2.347,585,2.347,586,2.347,587,3.403,588,3.403,589,2.347,590,2.347,591,4.392,592,2.347,593,2.347,594,4.004,595,2.347,596,4.392,597,2.347,598,2.347,599,3.403,600,2.347,601,2.347,602,2.347,603,2.347,604,2.347,605,1.921,606,2.347,607,2.347,608,2.347,609,2.347,610,2.347,611,1.921,612,2.347,613,3.403,614,3.403,615,2.347,616,2.347,617,2.347,618,1.921,619,2.347,620,2.347,621,2.347,622,2.347,623,2.347,624,2.347,625,2.347,626,2.347,627,2.347,628,2.347,629,3.403,630,2.347,631,5.138,632,2.347,633,5.016,634,2.347,635,2.347,636,2.347,637,3.403,638,2.347,639,3.403,640,2.347,641,4.004,642,2.347,643,3.403,644,2.347,645,2.347,646,2.347,647,2.347,648,2.347,649,4.004,650,4.004,651,2.347,652,3.403,653,2.347,654,2.347,655,2.347,656,2.347,657,2.347,658,3.403,659,3.403,660,2.347,661,2.347,662,2.347,663,2.347,664,2.347,665,3.403,666,4.392,667,2.347,668,2.347,669,2.347,670,2.347,671,2.347,672,2.347,673,2.347,674,3.403,675,2.347,676,2.347,677,2.347,678,2.347,679,2.347,680,2.347,681,2.347,682,2.347,683,2.347,684,2.347,685,2.347,686,1.921,687,2.347,688,2.347,689,2.347]],["title/modules.html",[2,1.701]],["body/modules.html",[1,2.62,2,1.839,11,2.313,12,0.036,13,2.313,14,2.313,55,0.036,56,0.036,690,5.576,691,5.576,692,5.576,693,5.576]],["title/overview.html",[694,3.252]],["body/overview.html",[0,1.188,1,3.433,2,1.478,3,1.478,4,1.858,5,1.858,6,1.478,7,1.858,8,1.858,9,2.826,10,2.826,11,2.942,12,0.041,13,2.942,14,2.942,15,2.386,16,1.858,17,1.653,55,0.032,56,0.032,58,2.105,143,2.105,166,1.478,224,2.662,264,2.826,265,2.826,266,2.826,272,2.105,386,2.662,416,2.826,417,2.826,418,2.826,490,2.662,499,2.826,500,2.826,501,2.826,694,2.826,695,3.453,696,5.166]],["title/properties.html",[62,1.348,549,2.008]],["body/properties.html",[12,0.042,55,0.037,56,0.037,62,1.71,71,1.71,686,3.649,697,3.649,698,4.459,699,4.459,700,4.459]],["title/miscellaneous/variables.html",[573,1.495,701,2.876]],["body/miscellaneous/variables.html",[12,0.042,55,0.021,56,0.021,61,0.333,63,1.056,64,1.724,65,1.938,66,2.775,72,1.724,76,1.371,80,0.43,81,1.816,88,1.938,100,2.636,101,3.022,102,2.636,103,2.082,104,1.926,105,3.022,106,2.517,108,2.975,129,1.195,131,2.082,133,2.082,135,2.438,137,2.082,181,3.503,193,1.195,206,1.605,226,2.082,255,3.198,312,1.938,316,4.614,388,2.082,405,2.438,415,3.994,475,3.667,492,2.082,532,1.605,534,1.605,539,1.371,540,2.811,541,1.371,542,1.371,543,1.371,544,2.438,545,1.605,573,1.195,576,2.948,605,1.605,611,1.605,618,2.438,697,1.605,701,1.605,702,1.961,703,1.961,704,1.961,705,4.553,706,4.553,707,3.602,708,1.961,709,1.961,710,1.961,711,4.553,712,2.979,713,1.961,714,2.979,715,1.961,716,2.979,717,2.979,718,1.961,719,4.325,720,5.092,721,4.022,722,1.961,723,4.553,724,1.961,725,4.022,726,4.022,727,1.961,728,4.022,729,1.961,730,1.961,731,1.961,732,1.961,733,1.961,734,1.961,735,1.961,736,1.961,737,1.961,738,1.961,739,1.961,740,1.961,741,1.961,742,1.961,743,2.979,744,1.961,745,1.961,746,3.602,747,1.961,748,1.961,749,1.961,750,1.961]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":312,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":698,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":613,"title":{},"body":{"index.html":{}}}],["1.0.3",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["100",{"_index":111,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["11.0.0",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["1900",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["201",{"_index":366,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["2024",{"_index":91,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["2100",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":696,"title":{},"body":{"overview.html":{}}}],["4",{"_index":695,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":480,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["5.0.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":70,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{}}}],["5432",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["addselect('count",{"_index":331,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["agricultable",{"_index":401,"title":{},"body":{"controllers/FazendasController.html":{}}}],["agricultável",{"_index":462,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["agrícolas",{"_index":597,"title":{},"body":{"index.html":{}}}],["al",{"_index":406,"title":{},"body":{"controllers/FazendasController.html":{}}}],["allowing",{"_index":681,"title":{},"body":{"index.html":{}}}],["ano",{"_index":92,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["any.required",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":588,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":231,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["apioperation",{"_index":234,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apiparam",{"_index":233,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiproperty",{"_index":94,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiproperty({example",{"_index":69,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}}}],["apiquery",{"_index":232,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apiresponse",{"_index":391,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags",{"_index":230,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["apitags('culturas",{"_index":235,"title":{},"body":{"controllers/CulturasController.html":{}}}],["apitags('fazendas",{"_index":392,"title":{},"body":{"controllers/FazendasController.html":{}}}],["apitags('produtores",{"_index":495,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["application",{"_index":650,"title":{},"body":{"index.html":{}}}],["applications",{"_index":587,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":63,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["area')@apioperation({summary",{"_index":374,"title":{},"body":{"controllers/FazendasController.html":{}}}],["areaagricultavel",{"_index":100,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["areaocupadanasafra",{"_index":304,"title":{},"body":{"injectables/CulturasService.html":{}}}],["areatotal",{"_index":101,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["areavegetacao",{"_index":102,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["associado",{"_index":612,"title":{},"body":{"index.html":{}}}],["async",{"_index":171,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["atualizar",{"_index":216,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["author",{"_index":700,"title":{},"body":{"properties.html":{}}}],["autoloadentities",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":257,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["aws",{"_index":669,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":223,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["badrequestexception('fazenda",{"_index":300,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception('o",{"_index":253,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["badrequestexception('soma",{"_index":446,"title":{},"body":{"injectables/FazendasService.html":{}}}],["badrequestexception('área",{"_index":315,"title":{},"body":{"injectables/CulturasService.html":{}}}],["badrequestexception(error.details[0].message",{"_index":498,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["badrequestexception(error.message",{"_index":247,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["based",{"_index":664,"title":{},"body":{"index.html":{}}}],["boa",{"_index":121,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["body",{"_index":199,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["body.areaagricultavel",{"_index":396,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areatotal",{"_index":398,"title":{},"body":{"controllers/FazendasController.html":{}}}],["body.areavegetacao",{"_index":397,"title":{},"body":{"controllers/FazendasController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":693,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":690,"title":{},"body":{"modules.html":{}}}],["building",{"_index":582,"title":{},"body":{"index.html":{}}}],["c",{"_index":310,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.area",{"_index":311,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.fazendaid",{"_index":306,"title":{},"body":{"injectables/CulturasService.html":{}}}],["c.safra",{"_index":307,"title":{},"body":{"injectables/CulturasService.html":{}}}],["cadastradas",{"_index":621,"title":{},"body":{"index.html":{}}}],["cadastrado",{"_index":518,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["cadastro",{"_index":600,"title":{},"body":{"index.html":{}}}],["campo",{"_index":415,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["caracteres",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chapec",{"_index":116,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["check",{"_index":658,"title":{},"body":{"index.html":{}}}],["cidade",{"_index":103,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":54,"title":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["classes",{"_index":58,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"overview.html":{}}}],["clicks",{"_index":680,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":663,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_culturasmodule",{"_index":264,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_exports",{"_index":266,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_culturasmodule_providers",{"_index":265,"title":{},"body":{"modules/CulturasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule",{"_index":416,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_exports",{"_index":417,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_fazendasmodule_providers",{"_index":418,"title":{},"body":{"modules/FazendasModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule",{"_index":499,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_exports",{"_index":500,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cluster_produtoresmodule_providers",{"_index":501,"title":{},"body":{"modules/ProdutoresModule.html":{},"overview.html":{}}}],["cnpj",{"_index":134,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["column",{"_index":145,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["column({unique",{"_index":468,"title":{},"body":{"entities/Produtor.html":{}}}],["com",{"_index":368,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"index.html":{}}}],["completo",{"_index":138,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["configmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":242,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["constructor",{"_index":276,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["constructor(culturarepository",{"_index":277,"title":{},"body":{"injectables/CulturasService.html":{}}}],["constructor(private",{"_index":237,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["constructor(repo",{"_index":426,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["construída",{"_index":590,"title":{},"body":{"index.html":{}}}],["conter",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":164,"title":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["controller('culturas",{"_index":236,"title":{},"body":{"controllers/CulturasController.html":{}}}],["controller('fazendas",{"_index":393,"title":{},"body":{"controllers/FazendasController.html":{}}}],["controller('produtores",{"_index":496,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["controllers",{"_index":166,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["count",{"_index":332,"title":{},"body":{"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["countbyestado",{"_index":354,"title":{},"body":{"controllers/FazendasController.html":{}}}],["countbyrubro",{"_index":172,"title":{},"body":{"controllers/CulturasController.html":{}}}],["countculturasbyrubro",{"_index":274,"title":{},"body":{"injectables/CulturasService.html":{}}}],["countfazendasbyestado",{"_index":424,"title":{},"body":{"injectables/FazendasService.html":{}}}],["coverage",{"_index":520,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":132,"title":{},"body":{"classes/CreateProdutorDto.html":{},"dependencies.html":{},"index.html":{}}}],["cpf/cnpj",{"_index":516,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["create",{"_index":173,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["create(@body",{"_index":241,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(body",{"_index":190,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["create(data",{"_index":284,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["createculturadto",{"_index":57,"title":{"classes/CreateCulturaDto.html":{}},"body":{"classes/CreateCulturaDto.html":{},"controllers/CulturasController.html":{},"coverage.html":{}}}],["createfazendadto",{"_index":97,"title":{"classes/CreateFazendaDto.html":{}},"body":{"classes/CreateFazendaDto.html":{},"controllers/FazendasController.html":{},"coverage.html":{}}}],["createfazendadto})@apiresponse({status",{"_index":365,"title":{},"body":{"controllers/FazendasController.html":{}}}],["createprodutordto",{"_index":126,"title":{"classes/CreateProdutorDto.html":{}},"body":{"classes/CreateProdutorDto.html":{},"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["createquerybuilder('cultura",{"_index":329,"title":{},"body":{"injectables/CulturasService.html":{}}}],["createquerybuilder('fazenda",{"_index":454,"title":{},"body":{"injectables/FazendasService.html":{}}}],["criada",{"_index":367,"title":{},"body":{"controllers/FazendasController.html":{}}}],["criado",{"_index":478,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["criar",{"_index":192,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["cultivado",{"_index":89,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura",{"_index":75,"title":{"entities/Cultura.html":{}},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"coverage.html":{},"index.html":{}}}],["cultura'})@apibody({type",{"_index":195,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura'})@apiparam({name",{"_index":211,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto",{"_index":229,"title":{},"body":{"controllers/CulturasController.html":{}}}],["cultura.dto.ts",{"_index":60,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["cultura.dto.ts:11",{"_index":90,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:17",{"_index":79,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:20",{"_index":93,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.dto.ts:8",{"_index":86,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["cultura.fazenda",{"_index":341,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturarepository",{"_index":281,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturas",{"_index":169,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"index.html":{}}}],["culturas.controller",{"_index":269,"title":{},"body":{"modules/CulturasModule.html":{}}}],["culturas.entity",{"_index":268,"title":{},"body":{"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["culturas.service",{"_index":225,"title":{},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{}}}],["culturas/culturas.entity",{"_index":350,"title":{},"body":{"entities/Fazenda.html":{}}}],["culturas/culturas.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["culturaschema",{"_index":226,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["culturaschema.validate(body",{"_index":244,"title":{},"body":{"controllers/CulturasController.html":{}}}],["culturascontroller",{"_index":165,"title":{"controllers/CulturasController.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"coverage.html":{}}}],["culturasexistentes",{"_index":302,"title":{},"body":{"injectables/CulturasService.html":{}}}],["culturasmodule",{"_index":11,"title":{"modules/CulturasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules.html":{},"overview.html":{}}}],["culturasservice",{"_index":224,"title":{"injectables/CulturasService.html":{}},"body":{"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"coverage.html":{},"overview.html":{}}}],["custom((value",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":82,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"index.html":{}}}],["dados",{"_index":481,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["das",{"_index":447,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["dashboard",{"_index":620,"title":{},"body":{"index.html":{}}}],["data",{"_index":140,"title":{},"body":{"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["data.area",{"_index":314,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.areaagricultavel",{"_index":441,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areatotal",{"_index":444,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.areavegetacao",{"_index":442,"title":{},"body":{"injectables/FazendasService.html":{}}}],["data.fazendaid",{"_index":298,"title":{},"body":{"injectables/CulturasService.html":{}}}],["data.identidade",{"_index":515,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["data.safra",{"_index":308,"title":{},"body":{"injectables/CulturasService.html":{}}}],["database",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":183,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["debe",{"_index":404,"title":{},"body":{"controllers/FazendasController.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["decorators",{"_index":68,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{}}}],["default",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":78,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["delete",{"_index":218,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["delete(':id",{"_index":261,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":209,"title":{},"body":{"controllers/CulturasController.html":{}}}],["delete()@apioperation({summary",{"_index":377,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["deleted",{"_index":327,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":649,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":668,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":659,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":679,"title":{},"body":{"index.html":{}}}],["description",{"_index":71,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"index.html":{},"properties.html":{}}}],["deve",{"_index":316,"title":{},"body":{"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":634,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":521,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentação",{"_index":626,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":228,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["dto/culturas.dto",{"_index":227,"title":{},"body":{"controllers/CulturasController.html":{}}}],["dto/fazendas.dto",{"_index":389,"title":{},"body":{"controllers/FazendasController.html":{}}}],["dto/produtores.dto",{"_index":493,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["e",{"_index":596,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":644,"title":{},"body":{"index.html":{}}}],["eager",{"_index":149,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["edição",{"_index":601,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":583,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":656,"title":{},"body":{"index.html":{}}}],["em",{"_index":76,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"miscellaneous/variables.html":{}}}],["encontrada",{"_index":301,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["ensure",{"_index":654,"title":{},"body":{"index.html":{}}}],["entities",{"_index":143,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"overview.html":{}}}],["entity",{"_index":142,"title":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"coverage.html":{}}}],["error",{"_index":243,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["esperança",{"_index":122,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["est",{"_index":517,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["estado",{"_index":104,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estado')@apioperation({summary",{"_index":360,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estados",{"_index":362,"title":{},"body":{"controllers/FazendasController.html":{}}}],["estar",{"_index":611,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":96,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"index.html":{}}}],["exatamente",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excede",{"_index":321,"title":{},"body":{"injectables/CulturasService.html":{}}}],["excedida",{"_index":319,"title":{},"body":{"injectables/CulturasService.html":{}}}],["exclusão",{"_index":602,"title":{},"body":{"index.html":{}}}],["exemplocnpj",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplocpf",{"_index":131,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exemplonome",{"_index":137,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exibir",{"_index":619,"title":{},"body":{"index.html":{}}}],["existe",{"_index":513,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["existente",{"_index":488,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["export",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["express",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":162,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["false})@joincolumn({name",{"_index":150,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["fast",{"_index":672,"title":{},"body":{"index.html":{}}}],["fazenda",{"_index":83,"title":{"entities/Fazenda.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"index.html":{}}}],["fazenda'})@apibody({type",{"_index":364,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda'})@apiquery({name",{"_index":205,"title":{},"body":{"controllers/CulturasController.html":{}}}],["fazenda.areaagricultavel",{"_index":463,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.areatotal",{"_index":318,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazenda.areavegetacao",{"_index":465,"title":{},"body":{"injectables/FazendasService.html":{}}}],["fazenda.culturas",{"_index":148,"title":{},"body":{"entities/Cultura.html":{}}}],["fazenda.dto",{"_index":390,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazenda.dto.ts",{"_index":99,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["fazenda.dto.ts:11",{"_index":123,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:14",{"_index":117,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:17",{"_index":120,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:23",{"_index":113,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:26",{"_index":110,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:29",{"_index":115,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazenda.dto.ts:5",{"_index":125,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["fazendaid",{"_index":64,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"miscellaneous/variables.html":{}}}],["fazendarepository",{"_index":279,"title":{},"body":{"injectables/CulturasService.html":{}}}],["fazendas",{"_index":353,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["fazendas.controller",{"_index":421,"title":{},"body":{"modules/FazendasModule.html":{}}}],["fazendas.entity",{"_index":420,"title":{},"body":{"modules/FazendasModule.html":{},"injectables/FazendasService.html":{}}}],["fazendas.service",{"_index":387,"title":{},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{}}}],["fazendas/fazendas.entity",{"_index":161,"title":{},"body":{"entities/Cultura.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{}}}],["fazendas/fazendas.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["fazendaschema",{"_index":388,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fazendaschema.validate(body",{"_index":395,"title":{},"body":{"controllers/FazendasController.html":{}}}],["fazendascontroller",{"_index":351,"title":{"controllers/FazendasController.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"coverage.html":{}}}],["fazendasmodule",{"_index":13,"title":{"modules/FazendasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FazendasModule.html":{},"modules.html":{},"overview.html":{}}}],["fazendasservice",{"_index":386,"title":{"injectables/FazendasService.html":{}},"body":{"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"coverage.html":{},"overview.html":{}}}],["features",{"_index":683,"title":{},"body":{"index.html":{}}}],["few",{"_index":674,"title":{},"body":{"index.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["filter((c",{"_index":305,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findall",{"_index":174,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["findbyfazenda",{"_index":175,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(@query('fazendaid",{"_index":252,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazenda(fazendaid",{"_index":203,"title":{},"body":{"controllers/CulturasController.html":{}}}],["findbyfazendaid",{"_index":275,"title":{},"body":{"injectables/CulturasService.html":{}}}],["findbyfazendaid(fazendaid",{"_index":288,"title":{},"body":{"injectables/CulturasService.html":{}}}],["focus",{"_index":682,"title":{},"body":{"index.html":{}}}],["fornecido",{"_index":604,"title":{},"body":{"index.html":{}}}],["framework",{"_index":581,"title":{},"body":{"index.html":{}}}],["funcionalidades",{"_index":598,"title":{},"body":{"index.html":{}}}],["function",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":574,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":677,"title":{},"body":{"index.html":{}}}],["garantir",{"_index":607,"title":{},"body":{"index.html":{}}}],["generate",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generaterandomname",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatereadme",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatevalidcnpj",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generatevalidcpf",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generator",{"_index":141,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["generator.ts",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gerenciar",{"_index":593,"title":{},"body":{"index.html":{}}}],["get('/count",{"_index":178,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["get('/fazenda",{"_index":251,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/fazenda')@apioperation({summary",{"_index":204,"title":{},"body":{"controllers/CulturasController.html":{}}}],["get('/total",{"_index":373,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get(':id/uso",{"_index":381,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count",{"_index":407,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get('count')@apioperation({summary",{"_index":357,"title":{},"body":{"controllers/FazendasController.html":{}}}],["get()@apioperation({summary",{"_index":200,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["getrawmany",{"_index":334,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["getrawone",{"_index":456,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getting",{"_index":577,"title":{"index.html":{}},"body":{}}],["gettotalarea",{"_index":355,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao",{"_index":425,"title":{},"body":{"injectables/FazendasService.html":{}}}],["getusodosolodistribuicao(fazendaid",{"_index":434,"title":{},"body":{"injectables/FazendasService.html":{}}}],["groupby('cultura.rubro",{"_index":333,"title":{},"body":{"injectables/CulturasService.html":{}}}],["groupby('fazenda.estado",{"_index":459,"title":{},"body":{"injectables/FazendasService.html":{}}}],["gráfica",{"_index":627,"title":{},"body":{"index.html":{}}}],["gráfico",{"_index":185,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["gráficos",{"_index":623,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["hectares",{"_index":77,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"index.html":{}}}],["helpers",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:8080/index.html",{"_index":628,"title":{},"body":{"index.html":{}}}],["id",{"_index":84,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["identidade",{"_index":129,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["igual",{"_index":405,"title":{},"body":{"controllers/FazendasController.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["index",{"_index":61,"title":{"index.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["informada",{"_index":317,"title":{},"body":{"injectables/CulturasService.html":{}}}],["information",{"_index":661,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":685,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":271,"title":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["injectables",{"_index":272,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{},"overview.html":{}}}],["injectrepository",{"_index":293,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["injectrepository(cultura",{"_index":294,"title":{},"body":{"injectables/CulturasService.html":{}}}],["injectrepository(fazenda",{"_index":296,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["injectrepository(produtor",{"_index":512,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["install",{"_index":676,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":632,"title":{},"body":{"index.html":{}}}],["inteiro",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inválida",{"_index":449,"title":{},"body":{"injectables/FazendasService.html":{}}}],["inválidos",{"_index":482,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["isglobal",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["j",{"_index":320,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/ProdutoresService.html":{}}}],["joi.number().integer().min(1900).max(2100).required().messages",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().integer().positive().required().messages",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().positive().required().messages",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().length(2).uppercase().required().messages",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().min(3).required().messages",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required().messages",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().trim().min(2).required().messages",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uuid",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uuid().required().messages",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":159,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["key",{"_index":651,"title":{},"body":{"index.html":{}}}],["la",{"_index":399,"title":{},"body":{"controllers/FazendasController.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["letras",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":686,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":689,"title":{},"body":{"index.html":{}}}],["limit",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limite",{"_index":322,"title":{},"body":{"injectables/CulturasService.html":{}}}],["listar",{"_index":201,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["localhost",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["looking",{"_index":662,"title":{},"body":{"index.html":{}}}],["maior",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mais",{"_index":614,"title":{},"body":{"index.html":{}}}],["maiúsculas",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["makes",{"_index":670,"title":{},"body":{"index.html":{}}}],["managing",{"_index":684,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":158,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["manytoone(undefined",{"_index":147,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{}}}],["mapeamento",{"_index":182,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["matching",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":666,"title":{},"body":{"index.html":{}}}],["menor",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menos",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":170,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["miscellaneous",{"_index":573,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":688,"title":{},"body":{"index.html":{}}}],["mode",{"_index":637,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":660,"title":{},"body":{"index.html":{}}}],["mínimo",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":163,"title":{},"body":{"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["nest",{"_index":687,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":591,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":678,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":95,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{}}}],["new",{"_index":246,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["node.js",{"_index":580,"title":{},"body":{"index.html":{}}}],["nome",{"_index":88,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["nomeprodutor",{"_index":130,"title":{},"body":{"classes/CreateProdutorDto.html":{},"entities/Produtor.html":{}}}],["notfoundexception",{"_index":438,"title":{},"body":{"injectables/FazendasService.html":{}}}],["notfoundexception('fazenda",{"_index":461,"title":{},"body":{"injectables/FazendasService.html":{}}}],["nova",{"_index":194,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{}}}],["novo",{"_index":476,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["number",{"_index":67,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{}}}],["number(result?.totalarea",{"_index":457,"title":{},"body":{"injectables/FazendasService.html":{}}}],["number.base",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.integer",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.max",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.min",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.positive",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["não",{"_index":114,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"index.html":{}}}],["número",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o",{"_index":181,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obrigatório",{"_index":255,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{},"miscellaneous/variables.html":{}}}],["official",{"_index":667,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":348,"title":{},"body":{"entities/Fazenda.html":{}}}],["onetomany(undefined",{"_index":340,"title":{},"body":{"entities/Fazenda.html":{}}}],["optional",{"_index":198,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["os",{"_index":485,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["ou",{"_index":133,"title":{},"body":{"classes/CreateProdutorDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"index.html":{},"overview.html":{}}}],["outro",{"_index":519,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["overview",{"_index":694,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":549,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":74,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/ProdutoresService.html":{},"index.html":{}}}],["param",{"_index":222,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["parameters",{"_index":197,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["parseint(process.env.db_port",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["partial",{"_index":285,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["parâmetro",{"_index":254,"title":{},"body":{"controllers/CulturasController.html":{}}}],["password",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["pelo",{"_index":605,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["permitir",{"_index":599,"title":{},"body":{"index.html":{}}}],["pg",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["pizza",{"_index":186,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["plantada",{"_index":624,"title":{},"body":{"index.html":{}}}],["plantadas",{"_index":184,"title":{},"body":{"controllers/CulturasController.html":{},"index.html":{}}}],["platform",{"_index":665,"title":{},"body":{"index.html":{}}}],["pode",{"_index":107,"title":{},"body":{"classes/CreateFazendaDto.html":{},"index.html":{}}}],["por",{"_index":361,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["port",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["positivo",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possible",{"_index":657,"title":{},"body":{"index.html":{}}}],["post",{"_index":219,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["post()@apioperation({summary",{"_index":191,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["postgres",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":592,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":168,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["primarygeneratedcolumn",{"_index":157,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":153,"title":{},"body":{"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{}}}],["private",{"_index":295,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["process.env.db_database",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":639,"title":{},"body":{"index.html":{}}}],["produtor",{"_index":124,"title":{"entities/Produtor.html":{}},"body":{"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Fazenda.html":{},"modules/FazendasModule.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"index.html":{}}}],["produtor'})@apiresponse({status",{"_index":477,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto",{"_index":494,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["produtor.dto.ts",{"_index":128,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["produtor.dto.ts:15",{"_index":139,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtor.dto.ts:9",{"_index":136,"title":{},"body":{"classes/CreateProdutorDto.html":{}}}],["produtores",{"_index":474,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{}}}],["produtores.controller",{"_index":504,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["produtores.entity",{"_index":503,"title":{},"body":{"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["produtores.service",{"_index":491,"title":{},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{}}}],["produtores/produtores.entity",{"_index":349,"title":{},"body":{"entities/Fazenda.html":{},"modules/FazendasModule.html":{}}}],["produtores/produtores.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["produtorescontroller",{"_index":472,"title":{"controllers/ProdutoresController.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"coverage.html":{}}}],["produtoresmodule",{"_index":14,"title":{"modules/ProdutoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProdutoresModule.html":{},"modules.html":{},"overview.html":{}}}],["produtoresservice",{"_index":490,"title":{"injectables/ProdutoresService.html":{}},"body":{"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"overview.html":{}}}],["produtorid",{"_index":105,"title":{},"body":{"classes/CreateFazendaDto.html":{},"entities/Fazenda.html":{},"miscellaneous/variables.html":{}}}],["produtorschema",{"_index":492,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["produtorschema.validate(body",{"_index":497,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["progressive",{"_index":579,"title":{},"body":{"index.html":{}}}],["project",{"_index":629,"title":{},"body":{"index.html":{}}}],["promise",{"_index":283,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{}}}],["properties",{"_index":62,"title":{"properties.html":{}},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"entities/Fazenda.html":{},"entities/Produtor.html":{},"properties.html":{}}}],["propriedade",{"_index":616,"title":{},"body":{"index.html":{}}}],["propriedades",{"_index":615,"title":{},"body":{"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["put",{"_index":220,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["put()@apioperation({summary",{"_index":215,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["quantidade",{"_index":358,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["que",{"_index":106,"title":{},"body":{"classes/CreateFazendaDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":221,"title":{},"body":{"controllers/CulturasController.html":{}}}],["rea",{"_index":72,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["readme.ts",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readonly",{"_index":238,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["ready",{"_index":648,"title":{},"body":{"index.html":{}}}],["reas",{"_index":448,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["reduce((total",{"_index":309,"title":{},"body":{"injectables/CulturasService.html":{}}}],["reflect",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["registrada",{"_index":375,"title":{},"body":{"controllers/FazendasController.html":{}}}],["registrados",{"_index":622,"title":{},"body":{"index.html":{}}}],["registro",{"_index":609,"title":{},"body":{"index.html":{}}}],["relacionada",{"_index":85,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["relations",{"_index":299,"title":{},"body":{"injectables/CulturasService.html":{}}}],["remove",{"_index":176,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remove(@body('id",{"_index":414,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["remove(@param('id",{"_index":262,"title":{},"body":{"controllers/CulturasController.html":{}}}],["remove(id",{"_index":208,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["remover",{"_index":210,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["removida",{"_index":212,"title":{},"body":{"controllers/CulturasController.html":{}}}],["repo",{"_index":428,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["repository",{"_index":278,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["required",{"_index":206,"title":{},"body":{"controllers/CulturasController.html":{},"miscellaneous/variables.html":{}}}],["required().messages",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiring",{"_index":673,"title":{},"body":{"index.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}],["restful",{"_index":589,"title":{},"body":{"index.html":{}}}],["result",{"_index":452,"title":{},"body":{"injectables/FazendasService.html":{}}}],["results",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":180,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{}}}],["return",{"_index":248,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["returns",{"_index":188,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["rubro",{"_index":65,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"miscellaneous/variables.html":{}}}],["rubro')@apioperation({summary",{"_index":179,"title":{},"body":{"controllers/CulturasController.html":{}}}],["run",{"_index":633,"title":{},"body":{"index.html":{}}}],["runs",{"_index":655,"title":{},"body":{"index.html":{}}}],["rurais",{"_index":594,"title":{},"body":{"index.html":{}}}],["rural",{"_index":617,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["safra",{"_index":66,"title":{},"body":{"classes/CreateCulturaDto.html":{},"entities/Cultura.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sc",{"_index":118,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["scalable",{"_index":584,"title":{},"body":{"index.html":{}}}],["select('cultura.rubro",{"_index":330,"title":{},"body":{"injectables/CulturasService.html":{}}}],["select('fazenda.estado",{"_index":458,"title":{},"body":{"injectables/FazendasService.html":{}}}],["select('sum(fazenda.areatotal",{"_index":455,"title":{},"body":{"injectables/FazendasService.html":{}}}],["semeada",{"_index":109,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ser",{"_index":108,"title":{},"body":{"classes/CreateFazendaDto.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":585,"title":{},"body":{"index.html":{}}}],["service",{"_index":239,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["setup",{"_index":630,"title":{},"body":{"index.html":{}}}],["side",{"_index":586,"title":{},"body":{"index.html":{}}}],["simple",{"_index":675,"title":{},"body":{"index.html":{}}}],["soja",{"_index":87,"title":{},"body":{"classes/CreateCulturaDto.html":{}}}],["solo",{"_index":384,"title":{},"body":{"controllers/FazendasController.html":{},"index.html":{}}}],["solo')@apioperation({summary",{"_index":382,"title":{},"body":{"controllers/FazendasController.html":{}}}],["soma",{"_index":443,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"modules/CulturasModule.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"modules/FazendasModule.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"modules/ProdutoresModule.html":{},"injectables/ProdutoresService.html":{}}}],["src/.../culturas.dto.ts",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fazendas.dto.ts",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../produtores.dto.ts",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/culturas/culturas.controller.ts",{"_index":167,"title":{},"body":{"controllers/CulturasController.html":{},"coverage.html":{}}}],["src/culturas/culturas.controller.ts:31",{"_index":196,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:39",{"_index":202,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:46",{"_index":207,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:57",{"_index":187,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:65",{"_index":217,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.controller.ts:78",{"_index":213,"title":{},"body":{"controllers/CulturasController.html":{}}}],["src/culturas/culturas.entity.ts",{"_index":144,"title":{},"body":{"entities/Cultura.html":{},"coverage.html":{}}}],["src/culturas/culturas.entity.ts:13",{"_index":154,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:16",{"_index":152,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:20",{"_index":151,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:23",{"_index":155,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:26",{"_index":146,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.entity.ts:29",{"_index":156,"title":{},"body":{"entities/Cultura.html":{}}}],["src/culturas/culturas.module.ts",{"_index":267,"title":{},"body":{"modules/CulturasModule.html":{}}}],["src/culturas/culturas.service.ts",{"_index":273,"title":{},"body":{"injectables/CulturasService.html":{},"coverage.html":{}}}],["src/culturas/culturas.service.ts:17",{"_index":286,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:53",{"_index":287,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:57",{"_index":289,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:63",{"_index":292,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:67",{"_index":290,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:72",{"_index":282,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/culturas.service.ts:8",{"_index":280,"title":{},"body":{"injectables/CulturasService.html":{}}}],["src/culturas/dto/create",{"_index":59,"title":{},"body":{"classes/CreateCulturaDto.html":{},"coverage.html":{}}}],["src/culturas/dto/culturas.dto.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/dto/create",{"_index":98,"title":{},"body":{"classes/CreateFazendaDto.html":{},"coverage.html":{}}}],["src/fazendas/dto/fazendas.dto.ts",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fazendas/fazendas.controller.ts",{"_index":352,"title":{},"body":{"controllers/FazendasController.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.controller.ts:25",{"_index":370,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:39",{"_index":372,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:45",{"_index":359,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:51",{"_index":376,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:59",{"_index":363,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:69",{"_index":385,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:76",{"_index":379,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.controller.ts:84",{"_index":378,"title":{},"body":{"controllers/FazendasController.html":{}}}],["src/fazendas/fazendas.entity.ts",{"_index":335,"title":{},"body":{"entities/Fazenda.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.entity.ts:15",{"_index":344,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:18",{"_index":347,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:22",{"_index":346,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:25",{"_index":345,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:28",{"_index":339,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:31",{"_index":343,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:34",{"_index":337,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:37",{"_index":336,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:40",{"_index":338,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.entity.ts:43",{"_index":342,"title":{},"body":{"entities/Fazenda.html":{}}}],["src/fazendas/fazendas.module.ts",{"_index":419,"title":{},"body":{"modules/FazendasModule.html":{}}}],["src/fazendas/fazendas.service.ts",{"_index":423,"title":{},"body":{"injectables/FazendasService.html":{},"coverage.html":{}}}],["src/fazendas/fazendas.service.ts:11",{"_index":427,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:17",{"_index":431,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:21",{"_index":432,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:25",{"_index":437,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:36",{"_index":436,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:41",{"_index":429,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:45",{"_index":433,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:54",{"_index":430,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/fazendas/fazendas.service.ts:63",{"_index":435,"title":{},"body":{"injectables/FazendasService.html":{}}}],["src/main.ts",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/produtores/dto/create",{"_index":127,"title":{},"body":{"classes/CreateProdutorDto.html":{},"coverage.html":{}}}],["src/produtores/dto/data",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/dto/produtores.dto.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/produtores/produtores.controller.ts",{"_index":473,"title":{},"body":{"controllers/ProdutoresController.html":{},"coverage.html":{}}}],["src/produtores/produtores.controller.ts:24",{"_index":483,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:34",{"_index":486,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:40",{"_index":489,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.controller.ts:50",{"_index":487,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["src/produtores/produtores.entity.ts",{"_index":466,"title":{},"body":{"entities/Produtor.html":{},"coverage.html":{}}}],["src/produtores/produtores.entity.ts:12",{"_index":470,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:6",{"_index":467,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.entity.ts:9",{"_index":469,"title":{},"body":{"entities/Produtor.html":{}}}],["src/produtores/produtores.module.ts",{"_index":502,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["src/produtores/produtores.service.ts",{"_index":506,"title":{},"body":{"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["src/produtores/produtores.service.ts:13",{"_index":508,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:25",{"_index":509,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:29",{"_index":511,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:33",{"_index":510,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["src/produtores/produtores.service.ts:7",{"_index":507,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["start",{"_index":635,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":638,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":640,"title":{},"body":{"index.html":{}}}],["started",{"_index":578,"title":{"index.html":{}},"body":{}}],["statements",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":394,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["steps",{"_index":652,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":671,"title":{},"body":{"index.html":{}}}],["string",{"_index":80,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"miscellaneous/variables.html":{}}}],["string.base",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.empty",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.length",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.min",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uppercase",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string.uuid",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suas",{"_index":595,"title":{},"body":{"index.html":{}}}],["sucesso",{"_index":369,"title":{},"body":{"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["sucesso'})@apiresponse({status",{"_index":479,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["suma",{"_index":400,"title":{},"body":{"controllers/FazendasController.html":{}}}],["summary",{"_index":240,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["support",{"_index":691,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":692,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":653,"title":{},"body":{"index.html":{}}}],["ter",{"_index":618,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":643,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":646,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":645,"title":{},"body":{"index.html":{}}}],["tests",{"_index":641,"title":{},"body":{"index.html":{}}}],["this.culturarepository",{"_index":328,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.create",{"_index":323,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.delete",{"_index":326,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.find",{"_index":303,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(cultura",{"_index":324,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.culturarepository.save(data",{"_index":325,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.fazendarepository.findone",{"_index":297,"title":{},"body":{"injectables/CulturasService.html":{}}}],["this.repo",{"_index":453,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.count",{"_index":451,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.delete",{"_index":450,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.find",{"_index":440,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.repo.findone",{"_index":514,"title":{},"body":{"injectables/ProdutoresService.html":{}}}],["this.repo.findoneby",{"_index":460,"title":{},"body":{"injectables/FazendasService.html":{}}}],["this.repo.save(data",{"_index":439,"title":{},"body":{"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["this.service.count",{"_index":408,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.countculturasbyrubro",{"_index":258,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.countfazendasbyestado",{"_index":411,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.create(body",{"_index":249,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findall",{"_index":250,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.findbyfazendaid(fazendaid",{"_index":256,"title":{},"body":{"controllers/CulturasController.html":{}}}],["this.service.gettotalarea",{"_index":410,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.getusodosolodistribuicao(id",{"_index":413,"title":{},"body":{"controllers/FazendasController.html":{}}}],["this.service.remove(id",{"_index":263,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["this.service.update(body",{"_index":260,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["throw",{"_index":245,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["tipo",{"_index":383,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["todas",{"_index":371,"title":{},"body":{"controllers/FazendasController.html":{}}}],["todos",{"_index":484,"title":{},"body":{"controllers/ProdutoresController.html":{}}}],["total",{"_index":112,"title":{},"body":{"classes/CreateFazendaDto.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"index.html":{}}}],["totalarea",{"_index":409,"title":{},"body":{"controllers/FazendasController.html":{},"injectables/FazendasService.html":{}}}],["true",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{}}}],["type",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"classes/CreateProdutorDto.html":{},"entities/Cultura.html":{},"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{},"coverage.html":{}}}],["typeof",{"_index":313,"title":{},"body":{"injectables/CulturasService.html":{}}}],["typeorm",{"_index":160,"title":{},"body":{"entities/Cultura.html":{},"injectables/CulturasService.html":{},"entities/Fazenda.html":{},"injectables/FazendasService.html":{},"entities/Produtor.html":{},"injectables/ProdutoresService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{}}}],["typeormmodule.forfeature([cultura",{"_index":270,"title":{},"body":{"modules/CulturasModule.html":{}}}],["typeormmodule.forfeature([fazenda",{"_index":422,"title":{},"body":{"modules/FazendasModule.html":{}}}],["typeormmodule.forfeature([produtor",{"_index":505,"title":{},"body":{"modules/ProdutoresModule.html":{}}}],["typeormmodule.forroot",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["uf",{"_index":119,"title":{},"body":{"classes/CreateFazendaDto.html":{}}}],["ui",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["ultrapasse",{"_index":608,"title":{},"body":{"index.html":{}}}],["um",{"_index":475,"title":{},"body":{"controllers/ProdutoresController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":193,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":445,"title":{},"body":{"injectables/FazendasService.html":{}}}],["unique",{"_index":471,"title":{},"body":{"entities/Produtor.html":{}}}],["unit",{"_index":642,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":189,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["unlicensed",{"_index":699,"title":{},"body":{"properties.html":{}}}],["update",{"_index":177,"title":{},"body":{"controllers/CulturasController.html":{},"injectables/CulturasService.html":{},"controllers/FazendasController.html":{},"injectables/FazendasService.html":{},"controllers/ProdutoresController.html":{},"injectables/ProdutoresService.html":{}}}],["update(@body",{"_index":259,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(body",{"_index":214,"title":{},"body":{"controllers/CulturasController.html":{},"controllers/FazendasController.html":{},"controllers/ProdutoresController.html":{}}}],["update(data",{"_index":291,"title":{},"body":{"injectables/CulturasService.html":{},"injectables/FazendasService.html":{},"injectables/ProdutoresService.html":{}}}],["username",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["uso",{"_index":625,"title":{},"body":{"index.html":{}}}],["usodosolo",{"_index":356,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(@param('id",{"_index":412,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usodosolo(id",{"_index":380,"title":{},"body":{"controllers/FazendasController.html":{}}}],["usuário",{"_index":606,"title":{},"body":{"index.html":{}}}],["utilizada",{"_index":73,"title":{},"body":{"classes/CreateCulturaDto.html":{},"injectables/CulturasService.html":{}}}],["uuid",{"_index":81,"title":{},"body":{"classes/CreateCulturaDto.html":{},"classes/CreateFazendaDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uuidv4",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validar",{"_index":603,"title":{},"body":{"index.html":{}}}],["validator",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.length",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":701,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetación",{"_index":403,"title":{},"body":{"controllers/FazendasController.html":{}}}],["vegetação",{"_index":464,"title":{},"body":{"injectables/FazendasService.html":{},"index.html":{}}}],["version",{"_index":697,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["válido",{"_index":135,"title":{},"body":{"classes/CreateProdutorDto.html":{},"miscellaneous/variables.html":{}}}],["várias",{"_index":610,"title":{},"body":{"index.html":{}}}],["watch",{"_index":636,"title":{},"body":{"index.html":{}}}],["y",{"_index":402,"title":{},"body":{"controllers/FazendasController.html":{}}}],["yarn",{"_index":631,"title":{},"body":{"index.html":{}}}],["you're",{"_index":647,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CulturasModule.html":{},"modules/FazendasModule.html":{},"modules/ProdutoresModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CulturasModule\n                        \n                        \n                            FazendasModule\n                        \n                        \n                            ProdutoresModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProdutoresModule } from './produtores/produtores.module';\nimport { FazendasModule } from './fazendas/fazendas.module';\nimport { CulturasModule } from './culturas/culturas.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST || 'localhost',\n      port: parseInt(process.env.DB_PORT ?? '5432', 10),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    ProdutoresModule,\n    FazendasModule,\n    CulturasModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCulturaDto.html":{"url":"classes/CreateCulturaDto.html","title":"class - CreateCulturaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCulturaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/dto/create-cultura.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área utilizada para a cultura (em hectares)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-da-fazenda', description: 'ID da fazenda relacionada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Soja', description: 'Nome do rubro cultivado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2024, description: 'Ano da safra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/dto/create-cultura.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCulturaDto {\n  @ApiProperty({\n    example: 'uuid-da-fazenda',\n    description: 'ID da fazenda relacionada',\n  })\n  fazendaId: string;\n\n  @ApiProperty({ example: 'Soja', description: 'Nome do rubro cultivado' })\n  rubro: string;\n\n  @ApiProperty({\n    example: 50,\n    description: 'Área utilizada para a cultura (em hectares)',\n  })\n  area: number;\n\n  @ApiProperty({ example: 2024, description: 'Ano da safra' })\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFazendaDto.html":{"url":"classes/CreateFazendaDto.html","title":"class - CreateFazendaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFazendaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/dto/create-fazenda.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, description: 'Área total da fazenda em hectares'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 50, description: 'Área que não pode ser semeada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Chapecó', description: 'Cidade da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'SC', description: 'Estado (UF)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Fazenda Boa Esperança', description: 'Nome da fazenda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uuid-do-produtor', description: 'ID do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/dto/create-fazenda.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateFazendaDto {\n  @ApiProperty({ example: 'uuid-do-produtor', description: 'ID do produtor' })\n  produtorId: string;\n\n  @ApiProperty({\n    example: 'Fazenda Boa Esperança',\n    description: 'Nome da fazenda',\n  })\n  nome: string;\n\n  @ApiProperty({ example: 'Chapecó', description: 'Cidade da fazenda' })\n  cidade: string;\n\n  @ApiProperty({ example: 'SC', description: 'Estado (UF)' })\n  estado: string;\n\n  @ApiProperty({\n    example: 100,\n    description: 'Área total da fazenda em hectares',\n  })\n  areaTotal: number;\n\n  @ApiProperty({ example: 50, description: 'Área que pode ser semeada' })\n  areaAgricultavel: number;\n\n  @ApiProperty({ example: 50, description: 'Área que não pode ser semeada' })\n  areaVegetacao: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProdutorDto.html":{"url":"classes/CreateProdutorDto.html","title":"class - CreateProdutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProdutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/dto/create-produtor.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploCpf, description: 'CPF ou CNPJ válido do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: exemploNome, description: 'Nome completo do produtor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/dto/create-produtor.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { exemploCpf, exemploNome } from './data-generator';\n\nexport class CreateProdutorDto {\n  @ApiProperty({\n    example: exemploCpf,\n    description: 'CPF ou CNPJ válido do produtor',\n  })\n  identidade: string;\n\n  @ApiProperty({\n    example: exemploNome,\n    description: 'Nome completo do produtor',\n  })\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cultura.html":{"url":"entities/Cultura.html","title":"entity - Cultura","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cultura\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                    \n                                fazenda\n                            \n                            \n                                    \n                                fazendaId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                rubro\n                            \n                            \n                                    \n                                safra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fazenda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fazenda\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, fazenda => fazenda.culturas, {eager: false})@JoinColumn({name: 'fazendaId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fazendaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        safra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/culturas/culturas.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Entity()\nexport class Cultura {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  fazendaId: string;\n\n  @ManyToOne(() => Fazenda, (fazenda) => fazenda.culturas, { eager: false })\n  @JoinColumn({ name: 'fazendaId' })\n  fazenda: Fazenda;\n\n  @Column()\n  rubro: string;\n\n  @Column()\n  area: number;\n\n  @Column()\n  safra: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CulturasController.html":{"url":"controllers/CulturasController.html","title":"controller - CulturasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CulturasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                culturas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                countByRubro\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findByFazenda\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByRubro()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-rubro')@ApiOperation({summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar culturas'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findByFazenda\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByFazenda(fazendaId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/fazenda')@ApiOperation({summary: 'Listar culturas de uma fazenda'})@ApiQuery({name: 'fazendaId', required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Remover uma cultura'})@ApiParam({name: 'id', required: true, description: 'ID da cultura a ser removida'})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateCulturaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma cultura'})@ApiBody({type: CreateCulturaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/culturas/culturas.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCulturaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  Query,\n  Param,\n  BadRequestException,\n} from '@nestjs/common';\nimport { CulturasService } from './culturas.service';\nimport { culturaSchema } from './dto/culturas.dto';\nimport { CreateCulturaDto } from './dto/create-cultura.dto';\nimport {\n  ApiTags,\n  ApiBody,\n  ApiQuery,\n  ApiParam,\n  ApiOperation,\n} from '@nestjs/swagger';\n\n@ApiTags('Culturas')\n@Controller('culturas')\nexport class CulturasController {\n  constructor(private readonly service: CulturasService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async create(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar culturas' })\n  async findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('/fazenda')\n  @ApiOperation({ summary: 'Listar culturas de uma fazenda' })\n  @ApiQuery({ name: 'fazendaId', required: true })\n  async findByFazenda(@Query('fazendaId') fazendaId: string) {\n    if (!fazendaId) {\n      throw new BadRequestException('O parâmetro fazendaId é obrigatório.');\n    }\n    return this.service.findByFazendaId(fazendaId);\n  }\n\n  @Get('/count-by-rubro')\n  @ApiOperation({\n    summary: 'Retorna o mapeamento de culturas plantadas (Gráfico de pizza)',\n  })\n  async countByRubro() {\n    const data = await this.service.countCulturasByRubro();\n    return data;\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma cultura' })\n  @ApiBody({ type: CreateCulturaDto })\n  async update(@Body() body: CreateCulturaDto) {\n    const { error } = culturaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Remover uma cultura' })\n  @ApiParam({\n    name: 'id',\n    required: true,\n    description: 'ID da cultura a ser removida',\n  })\n  async remove(@Param('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O parâmetro id é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CulturasModule.html":{"url":"modules/CulturasModule.html","title":"module - CulturasModule","body":"\n                   \n\n\n\n\n    Modules\n    CulturasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_CulturasModule_exports\n\n\n\n\nCulturasService \n\nCulturasService \n\n\n\nCulturasModule\n\nCulturasModule\n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/culturas/culturas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CulturasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CulturasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Cultura } from './culturas.entity';\nimport { CulturasService } from './culturas.service';\nimport { CulturasController } from './culturas.controller';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Cultura, Fazenda])],\n  providers: [CulturasService],\n  controllers: [CulturasController],\n  exports: [CulturasService],\n})\nexport class CulturasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CulturasService.html":{"url":"injectables/CulturasService.html","title":"injectable - CulturasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CulturasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/culturas/culturas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countCulturasByRubro\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByFazendaId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(culturaRepository: Repository, fazendaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/culturas/culturas.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        culturaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fazendaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countCulturasByRubro\n                        \n                    \n                \n            \n            \n                \n                        \n                    countCulturasByRubro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByFazendaId\n                        \n                    \n                \n            \n            \n                \nfindByFazendaId(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/culturas/culturas.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Cultura } from './culturas.entity';\nimport { Fazenda } from '../fazendas/fazendas.entity';\n\n@Injectable()\nexport class CulturasService {\n  constructor(\n    @InjectRepository(Cultura)\n    private culturaRepository: Repository,\n\n    @InjectRepository(Fazenda)\n    private fazendaRepository: Repository,\n  ) {}\n\n  async create(data: Partial) {\n    const fazenda = await this.fazendaRepository.findOne({\n      where: { id: data.fazendaId },\n      relations: ['culturas'],\n    });\n\n    if (!fazenda) {\n      throw new BadRequestException('Fazenda não encontrada');\n    }\n\n    const culturasExistentes = await this.culturaRepository.find({\n      where: { fazenda: { id: data.fazendaId } },\n    });\n\n    const areaOcupadaNaSafra = culturasExistentes\n      .filter((c) => c.fazendaId === data.fazendaId && c.safra === data.safra)\n      .reduce((total, c) => total + c.area, 0);\n\n    if (typeof data.area !== 'number') {\n      throw new BadRequestException('Área da cultura deve ser informada');\n    }\n\n    if (areaOcupadaNaSafra + data.area > fazenda.areaTotal) {\n      throw new BadRequestException(\n        `Área total da fazenda (${fazenda.areaTotal}) excedida: área já utilizada (${areaOcupadaNaSafra}), nova cultura excede limite.`,\n      );\n    }\n\n    const cultura = this.culturaRepository.create({\n      ...data,\n      fazenda: fazenda,\n    });\n\n    return this.culturaRepository.save(cultura);\n  }\n\n  findAll() {\n    return this.culturaRepository.find();\n  }\n\n  findByFazendaId(fazendaId: string) {\n    return this.culturaRepository.find({\n      where: { fazenda: { id: fazendaId } },\n    });\n  }\n\n  update(data: Partial) {\n    return this.culturaRepository.save(data);\n  }\n\n  async remove(id: string) {\n    await this.culturaRepository.delete({ id });\n    return { deleted: true };\n  }\n\n  async countCulturasByRubro(): Promise {\n    return this.culturaRepository\n      .createQueryBuilder('cultura')\n      .select('cultura.rubro', 'rubro')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('cultura.rubro')\n      .getRawMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Fazenda.html":{"url":"entities/Fazenda.html","title":"entity - Fazenda","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Fazenda\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areaAgricultavel\n                            \n                            \n                                    \n                                areaTotal\n                            \n                            \n                                    \n                                areaVegetacao\n                            \n                            \n                                    \n                                cidade\n                            \n                            \n                                    \n                                culturas\n                            \n                            \n                                    \n                                estado\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                produtor\n                            \n                            \n                                    \n                                produtorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaAgricultavel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areaVegetacao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        culturas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cultura[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cultura => cultura.fazenda)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        estado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        produtor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Produtor\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: false})@JoinColumn({name: 'produtorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fazendas/fazendas.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { Produtor } from '../produtores/produtores.entity';\nimport { Cultura } from '../culturas/culturas.entity';\n\n@Entity()\nexport class Fazenda {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  produtorId: string;\n\n  @ManyToOne(() => Produtor, { eager: false })\n  @JoinColumn({ name: 'produtorId' })\n  produtor: Produtor;\n\n  @Column()\n  nome: string;\n\n  @Column()\n  cidade: string;\n\n  @Column()\n  estado: string;\n\n  @Column()\n  areaTotal: number;\n\n  @Column()\n  areaAgricultavel: number;\n\n  @Column()\n  areaVegetacao: number;\n\n  @OneToMany(() => Cultura, (cultura) => cultura.fazenda)\n  culturas: Cultura[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FazendasController.html":{"url":"controllers/FazendasController.html","title":"controller - FazendasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FazendasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fazendas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Async\n                                countByEstado\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    Async\n                                usoDoSolo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Retorna a quantidade de fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByEstado()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count-by-estado')@ApiOperation({summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma nova fazenda'})@ApiBody({type: CreateFazendaDto})@ApiResponse({status: 201, description: 'Fazenda criada com sucesso'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as fazendas'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/total-area')@ApiOperation({summary: 'Retorna a área total registrada'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover uma fazenda'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: CreateFazendaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar uma fazenda'})@ApiBody({type: CreateFazendaDto})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateFazendaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        usoDoSolo\n                        \n                    \n                \n            \n            \n                \n                        \n                    usoDoSolo(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/uso-do-solo')@ApiOperation({summary: 'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)'})\n                \n            \n\n                    \n                        \n                            Defined in src/fazendas/fazendas.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n  Param,\n} from '@nestjs/common';\nimport { FazendasService } from './fazendas.service';\nimport { fazendaSchema } from './dto/fazendas.dto';\nimport { CreateFazendaDto } from './dto/create-fazenda.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Fazendas')\n@Controller('fazendas')\nexport class FazendasController {\n  constructor(private readonly service: FazendasService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar uma nova fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  @ApiResponse({ status: 201, description: 'Fazenda criada com sucesso' })\n  async create(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    if (body.areaAgricultavel + body.areaVegetacao !== body.areaTotal) {\n      throw new BadRequestException(\n        'La suma de área agricultable y vegetación debe ser igual al área total',\n      );\n    }\n\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todas as fazendas' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: 'Retorna a quantidade de fazendas' })\n  async count() {\n    return this.service.count();\n  }\n\n  @Get('/total-area')\n  @ApiOperation({ summary: 'Retorna a área total registrada' })\n  async getTotalArea() {\n    return { totalArea: await this.service.getTotalArea() };\n  }\n\n  @Get('/count-by-estado')\n  @ApiOperation({\n    summary: 'Retorna o mapeamento de fazenda por estados (Gráfico de pizza)',\n  })\n  async countByEstado() {\n    const data = await this.service.countFazendasByEstado();\n    return data;\n  }\n\n  @Get(':id/uso-do-solo')\n  @ApiOperation({\n    summary:\n      'Retorna a quantidade de area de tipo de solo por fazenda (Gráfico de pizza)',\n  })\n  async usoDoSolo(@Param('id') id: string) {\n    return this.service.getUsoDoSoloDistribuicao(id);\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar uma fazenda' })\n  @ApiBody({ type: CreateFazendaDto })\n  async update(@Body() body: CreateFazendaDto) {\n    const { error } = fazendaSchema.validate(body);\n    if (error) throw new BadRequestException(error.message);\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover uma fazenda' })\n  async remove(@Body('id') id: string) {\n    if (!id) throw new BadRequestException('O campo id é obrigatório');\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FazendasModule.html":{"url":"modules/FazendasModule.html","title":"module - FazendasModule","body":"\n                   \n\n\n\n\n    Modules\n    FazendasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\n\nFazendasService \n\nFazendasService \n\n\n\nFazendasModule\n\nFazendasModule\n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fazendas/fazendas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FazendasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FazendasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Fazenda } from './fazendas.entity';\nimport { FazendasService } from './fazendas.service';\nimport { FazendasController } from './fazendas.controller';\nimport { Produtor } from '../produtores/produtores.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Fazenda, Produtor])],\n  providers: [FazendasService],\n  controllers: [FazendasController],\n  exports: [FazendasService, TypeOrmModule],\n})\nexport class FazendasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FazendasService.html":{"url":"injectables/FazendasService.html","title":"injectable - FazendasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FazendasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fazendas/fazendas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                countFazendasByEstado\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                getTotalArea\n                            \n                            \n                                    Async\n                                getUsoDoSoloDistribuicao\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/fazendas/fazendas.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countFazendasByEstado\n                        \n                    \n                \n            \n            \n                \n                        \n                    countFazendasByEstado()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTotalArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsoDoSoloDistribuicao\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsoDoSoloDistribuicao(fazendaId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fazendaId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fazendas/fazendas.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Fazenda } from './fazendas.entity';\n\n@Injectable()\nexport class FazendasService {\n  constructor(\n    @InjectRepository(Fazenda)\n    private readonly repo: Repository,\n  ) {}\n\n  create(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  async update(data: Partial) {\n    const areaAgricultavel = data.areaAgricultavel ?? 0;\n    const areaVegetacao = data.areaVegetacao ?? 0;\n    const soma = areaAgricultavel + areaVegetacao;\n    if (data.areaTotal !== undefined && soma > data.areaTotal) {\n      throw new BadRequestException('Soma das áreas inválida');\n    }\n\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n\n  async count(): Promise {\n    return this.repo.count();\n  }\n\n  async getTotalArea(): Promise {\n    const result = await this.repo\n      .createQueryBuilder('fazenda')\n      .select('SUM(fazenda.areaTotal)', 'totalArea')\n      .getRawOne();\n\n    return Number(result?.totalArea) || 0;\n  }\n\n  async countFazendasByEstado(): Promise {\n    return this.repo\n      .createQueryBuilder('fazenda')\n      .select('fazenda.estado', 'estado')\n      .addSelect('COUNT(*)', 'count')\n      .groupBy('fazenda.estado')\n      .getRawMany();\n  }\n\n  async getUsoDoSoloDistribuicao(fazendaId: string) {\n    const fazenda = await this.repo.findOneBy({ id: fazendaId });\n\n    if (!fazenda) {\n      throw new NotFoundException('Fazenda não encontrada');\n    }\n\n    return [\n      { tipo: 'Agricultável', area: fazenda.areaAgricultavel },\n      { tipo: 'Vegetação', area: fazenda.areaVegetacao },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Produtor.html":{"url":"entities/Produtor.html","title":"entity - Produtor","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Produtor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                identidade\n                            \n                            \n                                    \n                                nomeProdutor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identidade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nomeProdutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtores/produtores.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Produtor {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  identidade: string;\n\n  @Column()\n  nomeProdutor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProdutoresController.html":{"url":"controllers/ProdutoresController.html","title":"controller - ProdutoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProdutoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                produtores\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateProdutorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um novo produtor'})@ApiResponse({status: 201, description: 'Produtor criado com sucesso'})@ApiResponse({status: 400, description: 'Dados inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateProdutorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtores'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Remover um produtor'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Atualizar um produtor existente'})\n                \n            \n\n                    \n                        \n                            Defined in src/produtores/produtores.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ProdutoresService } from './produtores.service';\nimport { produtorSchema } from './dto/produtores.dto';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { CreateProdutorDto } from './dto/create-produtor.dto';\n\n@ApiTags('produtores')\n@Controller('produtores')\nexport class ProdutoresController {\n  constructor(private readonly service: ProdutoresService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Criar um novo produtor' })\n  @ApiResponse({ status: 201, description: 'Produtor criado com sucesso' })\n  @ApiResponse({ status: 400, description: 'Dados inválidos' })\n  async create(@Body() body: CreateProdutorDto) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.create(body);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todos os produtores' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Put()\n  @ApiOperation({ summary: 'Atualizar um produtor existente' })\n  async update(@Body() body: any /* : CreateProdutorDto */) {\n    const { error } = produtorSchema.validate(body);\n    if (error) {\n      throw new BadRequestException(error.details[0].message);\n    }\n    return this.service.update(body);\n  }\n\n  @Delete()\n  @ApiOperation({ summary: 'Remover um produtor' })\n  async remove(@Body('id') id: string) {\n    if (!id) {\n      throw new BadRequestException('O campo \"id\" é obrigatório.');\n    }\n    return this.service.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProdutoresModule.html":{"url":"modules/ProdutoresModule.html","title":"module - ProdutoresModule","body":"\n                   \n\n\n\n\n    Modules\n    ProdutoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nProdutoresService \n\nProdutoresService \n\n\n\nProdutoresModule\n\nProdutoresModule\n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/produtores/produtores.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProdutoresController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProdutoresService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Produtor } from './produtores.entity';\nimport { ProdutoresService } from './produtores.service';\nimport { ProdutoresController } from './produtores.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Produtor])],\n  providers: [ProdutoresService],\n  controllers: [ProdutoresController],\n  exports: [ProdutoresService, TypeOrmModule],\n})\nexport class ProdutoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProdutoresService.html":{"url":"injectables/ProdutoresService.html","title":"injectable - ProdutoresService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProdutoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtores/produtores.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/produtores/produtores.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtores/produtores.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Produtor } from './produtores.entity';\n\n@Injectable()\nexport class ProdutoresService {\n  constructor(\n    @InjectRepository(Produtor)\n    private readonly repo: Repository,\n  ) {}\n\n  async create(data: Partial) {\n    const existe = await this.repo.findOne({\n      where: { identidade: data.identidade },\n    });\n    if (existe) {\n      throw new BadRequestException(\n        'CPF/CNPJ já está cadastrado para outro produtor.',\n      );\n    }\n    return this.repo.save(data);\n  }\n\n  findAll() {\n    return this.repo.find();\n  }\n\n  update(data: Partial) {\n    return this.repo.save(data);\n  }\n\n  async remove(id: string) {\n    await this.repo.delete({ id });\n    return { deleted: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        generate-readme.ts\n            \n            function\n            generateReadme\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.controller.ts\n            \n            controller\n            CulturasController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/culturas/culturas.entity.ts\n            \n            entity\n            Cultura\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/culturas/culturas.service.ts\n            \n            injectable\n            CulturasService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/culturas/dto/create-cultura.dto.ts\n            \n            class\n            CreateCulturaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/culturas/dto/culturas.dto.ts\n            \n            variable\n            culturaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/dto/create-fazenda.dto.ts\n            \n            class\n            CreateFazendaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/fazendas/dto/fazendas.dto.ts\n            \n            variable\n            fazendaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.controller.ts\n            \n            controller\n            FazendasController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.entity.ts\n            \n            entity\n            Fazenda\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fazendas/fazendas.service.ts\n            \n            injectable\n            FazendasService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/dto/create-produtor.dto.ts\n            \n            class\n            CreateProdutorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateRandomName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            function\n            generateValidCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCnpj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploCpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/data-generator.ts\n            \n            variable\n            exemploNome\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/produtores/dto/produtores.dto.ts\n            \n            variable\n            produtorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.controller.ts\n            \n            controller\n            ProdutoresController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/produtores/produtores.entity.ts\n            \n            entity\n            Produtor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtores/produtores.service.ts\n            \n            injectable\n            ProdutoresService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            cpf-cnpj-validator : ^1.0.3\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.24\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            generateRandomName   (src/.../data-generator.ts)\n                        \n                        \n                            generateReadme   (generate-readme.ts)\n                        \n                        \n                            generateValidCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            generateValidCpf   (src/.../data-generator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateRandomName\n                        \n                    \n                \n            \n            \n                \ngenerateRandomName()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCnpj\n                        \n                    \n                \n            \n            \n                \ngenerateValidCnpj()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValidCpf\n                        \n                    \n                \n            \n            \n                \ngenerateValidCpf()\n                \n            \n\n\n\n\n        \n    \n    generate-readme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateReadme\n                        \n                    \n                \n            \n            \n                \ngenerateReadme()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\n🧑‍🌾 Produtores API\nAPI RESTful construída com NestJS + TypeORM + PostgreSQL para gerenciar produtores rurais, suas fazendas e culturas agrícolas.\n📦 Funcionalidades\n\nPermitir o cadastro, edição e exclusão de produtores rurais.\n\nValidar o CPF ou CNPJ fornecido pelo usuário.\n\nGarantir que a soma das áreas agricultável e de vegetação não ultrapasse a área total da fazenda.\n\nPermitir o registro de várias culturas plantadas por fazenda do produtor.\n\nUm produtor pode estar associado a 0, 1 ou mais propriedades rurais.\n\nUma propriedade rural pode ter 0, 1 ou mais culturas plantadas por safra.\n\nExibir um dashboard com:\n\nTotal de fazendas cadastradas (quantidade).\nTotal de hectares registrados (área total).\nGráficos de pizza:\nPor estado.\nPor cultura plantada.\nPor uso do solo (área agricultável e vegetação).\n\n\n\n\nDocumentação gráfica: http://localhost:8080/index.html\n\n\nProject setup\nExample :$ yarn installCompile and run the project\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodRun tests\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ yarn install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CulturasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FazendasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProdutoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CulturasModule\n\n\n\ncluster_CulturasModule_exports\n\n\n\ncluster_CulturasModule_providers\n\n\n\ncluster_FazendasModule\n\n\n\ncluster_FazendasModule_exports\n\n\n\ncluster_FazendasModule_providers\n\n\n\ncluster_ProdutoresModule\n\n\n\ncluster_ProdutoresModule_exports\n\n\n\ncluster_ProdutoresModule_providers\n\n\n\n\nCulturasModule\n\nCulturasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCulturasModule->AppModule\n\n\n\n\n\nCulturasService \n\nCulturasService \n\nCulturasService  -->\n\nCulturasModule->CulturasService \n\n\n\n\n\nFazendasModule\n\nFazendasModule\n\nAppModule -->\n\nFazendasModule->AppModule\n\n\n\n\n\nFazendasService \n\nFazendasService \n\nFazendasService  -->\n\nFazendasModule->FazendasService \n\n\n\n\n\nProdutoresModule\n\nProdutoresModule\n\nAppModule -->\n\nProdutoresModule->AppModule\n\n\n\n\n\nProdutoresService \n\nProdutoresService \n\nProdutoresService  -->\n\nProdutoresModule->ProdutoresService \n\n\n\n\n\nCulturasService\n\nCulturasService\n\nCulturasModule -->\n\nCulturasService->CulturasModule\n\n\n\n\n\nFazendasService\n\nFazendasService\n\nFazendasModule -->\n\nFazendasService->FazendasModule\n\n\n\n\n\nProdutoresService\n\nProdutoresService\n\nProdutoresModule -->\n\nProdutoresService->ProdutoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            culturaSchema   (src/.../culturas.dto.ts)\n                        \n                        \n                            exemploCnpj   (src/.../data-generator.ts)\n                        \n                        \n                            exemploCpf   (src/.../data-generator.ts)\n                        \n                        \n                            exemploNome   (src/.../data-generator.ts)\n                        \n                        \n                            fazendaSchema   (src/.../fazendas.dto.ts)\n                        \n                        \n                            produtorSchema   (src/.../produtores.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/culturas/dto/culturas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        culturaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  fazendaId: Joi.string().uuid({ version: 'uuidv4' }).required().messages({\n    'string.empty': 'O campo fazendaId é obrigatório.',\n    'string.uuid': 'O fazendaId deve ser um UUID válido.',\n  }),\n\n  rubro: Joi.string().trim().min(2).required().messages({\n    'string.empty': 'O campo rubro é obrigatório.',\n    'string.min': 'O rubro deve ter no mínimo 2 caracteres.',\n  }),\n\n  area: Joi.number().positive().required().messages({\n    'number.base': 'A área deve ser um número.',\n    'number.positive': 'A área deve ser um número positivo.',\n    'any.required': 'O campo área é obrigatório.',\n  }),\n\n  safra: Joi.number().integer().min(1900).max(2100).required().messages({\n    'number.base': 'A safra deve ser um número.',\n    'number.integer': 'A safra deve ser um número inteiro.',\n    'number.min': 'A safra deve ser maior ou igual a 1900.',\n    'number.max': 'A safra deve ser menor ou igual a 2100.',\n    'any.required': 'O campo safra é obrigatório.',\n  }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/data-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exemploCnpj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCnpj()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploCpf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateValidCpf()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exemploNome\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateRandomName()\n                    \n                \n\n\n        \n    \n\n    src/fazendas/dto/fazendas.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fazendaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  produtorId: Joi.string().uuid().required().messages({\n    'string.base': 'O campo produtorId deve ser uma string',\n    'string.empty': 'O campo produtorId é obrigatório',\n    'string.uuid': 'O campo produtorId deve ser um UUID válido',\n    'any.required': 'O campo produtorId é obrigatório',\n  }),\n  nome: Joi.string().min(3).required().messages({\n    'string.empty': 'O campo nome é obrigatório',\n    'string.min': 'O campo nome deve ter pelo menos {#limit} caracteres',\n  }),\n  cidade: Joi.string().required().messages({\n    'string.empty': 'O campo cidade é obrigatório',\n  }),\n  estado: Joi.string().length(2).uppercase().required().messages({\n    'string.empty': 'O campo estado é obrigatório',\n    'string.length': 'O campo estado deve conter exatamente 2 letras',\n    'string.uppercase': 'O campo estado deve estar em letras maiúsculas',\n  }),\n  areaTotal: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaTotal deve ser um número',\n    'number.integer': 'O campo areaTotal deve ser um número inteiro',\n    'number.positive': 'O campo areaTotal deve ser maior que 0',\n    'any.required': 'O campo areaTotal é obrigatório',\n  }),\n\n  areaAgricultavel: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaAgricultavel deve ser um número',\n    'number.integer': 'O campo areaAgricultavel deve ser um número inteiro',\n    'number.positive': 'O campo areaAgricultavel deve ser maior que 0',\n    'any.required': 'O campo areaAgricultavel é obrigatório',\n  }),\n  areaVegetacao: Joi.number().integer().positive().required().messages({\n    'number.base': 'O campo areaVegetacao deve ser um número',\n    'number.integer': 'O campo areaVegetacao deve ser um número inteiro',\n    'number.positive': 'O campo areaVegetacao deve ser maior que 0',\n    'any.required': 'O campo areaVegetacao é obrigatório',\n  }),\n})\n                    \n                \n\n\n        \n    \n\n    src/produtores/dto/produtores.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        produtorSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  identidade: Joi.string()\n    .required()\n    .custom((value, helpers) => {\n      if (value.length \n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
